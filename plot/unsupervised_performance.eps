%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: unsupervised_performance.pdf
%%Creator: Adobe Acrobat 20.6.0
%%For: Dell
%%CreationDate: 2023/10/24, 15:12:11
%%BoundingBox: 0 0 606 334
%%HiResBoundingBox: 0 0 605.2597 333.5494
%%CropBox: 0 0 605.2597 333.5494
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 851 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2023-10-24T14:32:31+08:00"
   xmp:CreatorTool="Matplotlib v3.7.0, https://matplotlib.org"
   xmp:ModifyDate="2023-10-24T15:11:53+08:00"
   xmp:MetadataDate="2023-10-24T15:11:53+08:00"
   pdf:Producer="Matplotlib pdf backend v3.7.0"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:33a43eee-a97f-41ef-8be7-233edcd8fc63"
   xmpMM:InstanceID="uuid:d1242102-8b6d-4070-8bac-0b1710af6f3f"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -333.549 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
3.05176e-5 0 mo
3.05176e-5 333.549 li
605.26 333.549 li
605.26 0 li
cp
clp
-35.9752 346.959 mo
620.252 346.959 li
620.252 -17.6108 li
-35.9752 -17.6108 li
-35.9752 346.959 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
22.324 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.324 37.586 li
22.324 160.986 li
f
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
34.6443 160.986 mo
34.6443 37.586 li
34.6443 37.3651 34.8234 37.186 35.0444 37.186 cv
35.2653 37.186 35.4444 37.3651 35.4444 37.586 cv
35.4444 160.986 li
35.4444 161.207 35.2653 161.386 35.0444 161.386 cv
34.8234 161.386 34.6443 161.207 34.6443 160.986 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
119.446 160.986 mo
119.446 37.586 li
119.446 37.3651 119.625 37.186 119.846 37.186 cv
120.067 37.186 120.246 37.3651 120.246 37.586 cv
120.246 160.986 li
120.246 161.207 120.067 161.386 119.846 161.386 cv
119.625 161.386 119.446 161.207 119.446 160.986 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
204.248 160.986 mo
204.248 37.586 li
204.248 37.3651 204.427 37.186 204.648 37.186 cv
204.869 37.186 205.048 37.3651 205.048 37.586 cv
205.048 160.986 li
205.048 161.207 204.869 161.386 204.648 161.386 cv
204.427 161.386 204.248 161.207 204.248 160.986 cv
1 /0 /CSD get_res sepcs
.2 sep
f
289.05 160.986 mo
289.05 37.586 li
289.05 37.3651 289.229 37.186 289.45 37.186 cv
289.671 37.186 289.85 37.3651 289.85 37.586 cv
289.85 160.986 li
289.85 161.207 289.671 161.386 289.45 161.386 cv
289.229 161.386 289.05 161.207 289.05 160.986 cv
289.05 160.986 li
f
grestore
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
.8 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
22.324 160.986 mo
302.171 160.986 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
3.18373 161.185 mo
3.18373 160.435 3.29373 159.785 3.52373 159.235 cv
3.74373 158.695 4.05373 158.285 4.43373 158.015 cv
4.72373 157.805 5.02373 157.695 5.34373 157.695 cv
5.84373 157.695 6.30373 157.955 6.71373 158.475 cv
7.21373 159.115 7.46373 159.985 7.46373 161.085 cv
7.46373 161.855 7.35373 162.505 7.13373 163.045 cv
6.91373 163.585 6.62373 163.965 6.28373 164.205 cv
5.94373 164.445 5.61373 164.565 5.29373 164.565 cv
4.65373 164.565 4.13373 164.195 3.71373 163.455 cv
3.35373 162.835 3.18373 162.075 3.18373 161.185 cv
cp
4.14373 161.305 mo
4.14373 162.225 4.25373 162.965 4.48373 163.535 cv
4.66373 164.025 4.93373 164.265 5.31373 164.265 cv
5.48373 164.265 5.66373 164.195 5.85373 164.035 cv
6.04373 163.875 6.18373 163.615 6.28373 163.235 cv
6.43373 162.675 6.51373 161.885 6.51373 160.865 cv
6.51373 160.115 6.43373 159.485 6.27373 158.975 cv
6.15373 158.605 6.00373 158.345 5.82373 158.185 cv
5.68373 158.075 5.52373 158.015 5.33372 158.015 cv
5.11373 158.015 4.91373 158.115 4.74373 158.315 cv
4.50373 158.595 4.34373 159.015 4.26373 159.595 cv
4.18373 160.175 4.14373 160.745 4.14373 161.305 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
9.07373 163.505 mo
9.22373 163.505 9.35373 163.565 9.45373 163.665 cv
9.55373 163.775 9.61373 163.905 9.61373 164.055 cv
9.61373 164.205 9.55373 164.335 9.45373 164.435 cv
9.34373 164.535 9.21373 164.585 9.07373 164.585 cv
8.92373 164.585 8.79373 164.535 8.69373 164.435 cv
8.58372 164.335 8.53373 164.205 8.53373 164.055 cv
8.53373 163.905 8.58372 163.775 8.69373 163.665 cv
8.79373 163.565 8.92373 163.505 9.07373 163.505 cv
cp
f
10.6837 161.185 mo
10.6837 160.435 10.7937 159.785 11.0237 159.235 cv
11.2437 158.695 11.5537 158.285 11.9337 158.015 cv
12.2237 157.805 12.5237 157.695 12.8437 157.695 cv
13.3437 157.695 13.8037 157.955 14.2137 158.475 cv
14.7137 159.115 14.9637 159.985 14.9637 161.085 cv
14.9637 161.855 14.8537 162.505 14.6337 163.045 cv
14.4137 163.585 14.1237 163.965 13.7837 164.205 cv
13.4437 164.445 13.1137 164.565 12.7937 164.565 cv
12.1537 164.565 11.6337 164.195 11.2137 163.455 cv
10.8537 162.835 10.6837 162.075 10.6837 161.185 cv
cp
11.6437 161.305 mo
11.6437 162.225 11.7537 162.965 11.9837 163.535 cv
12.1637 164.025 12.4337 164.265 12.8137 164.265 cv
12.9837 164.265 13.1637 164.195 13.3537 164.035 cv
13.5437 163.875 13.6837 163.615 13.7837 163.235 cv
13.9337 162.675 14.0137 161.885 14.0137 160.865 cv
14.0137 160.115 13.9337 159.485 13.7737 158.975 cv
13.6537 158.605 13.5037 158.345 13.3237 158.185 cv
13.1837 158.075 13.0237 158.015 12.8337 158.015 cv
12.6137 158.015 12.4137 158.115 12.2437 158.315 cv
12.0037 158.595 11.8437 159.015 11.7637 159.595 cv
11.6837 160.175 11.6437 160.745 11.6437 161.305 cv
cp
f
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
22.324 135.906 mo
302.171 135.906 li
302.392 135.906 302.571 136.085 302.571 136.306 cv
302.571 136.527 302.392 136.706 302.171 136.706 cv
22.324 136.706 li
22.1032 136.706 21.9239 136.527 21.9239 136.306 cv
21.9239 136.085 22.1032 135.906 22.324 135.906 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
3.18373 136.505 mo
3.18373 135.755 3.29373 135.105 3.52373 134.555 cv
3.74373 134.015 4.05373 133.605 4.43373 133.335 cv
4.72373 133.125 5.02373 133.015 5.34373 133.015 cv
5.84373 133.015 6.30373 133.275 6.71373 133.795 cv
7.21373 134.435 7.46373 135.305 7.46373 136.405 cv
7.46373 137.175 7.35373 137.825 7.13373 138.365 cv
6.91373 138.905 6.62373 139.285 6.28373 139.525 cv
5.94373 139.765 5.61373 139.885 5.29373 139.885 cv
4.65373 139.885 4.13373 139.515 3.71373 138.775 cv
3.35373 138.155 3.18373 137.395 3.18373 136.505 cv
cp
4.14373 136.625 mo
4.14373 137.545 4.25373 138.285 4.48373 138.855 cv
4.66373 139.345 4.93373 139.585 5.31373 139.585 cv
5.48373 139.585 5.66373 139.515 5.85373 139.355 cv
6.04373 139.195 6.18373 138.935 6.28373 138.555 cv
6.43373 137.995 6.51373 137.205 6.51373 136.185 cv
6.51373 135.435 6.43373 134.805 6.27373 134.295 cv
6.15373 133.925 6.00373 133.665 5.82373 133.505 cv
5.68373 133.395 5.52373 133.335 5.33372 133.335 cv
5.11373 133.335 4.91373 133.435 4.74373 133.635 cv
4.50373 133.915 4.34373 134.335 4.26373 134.915 cv
4.18373 135.495 4.14373 136.065 4.14373 136.625 cv
cp
f
9.07373 138.825 mo
9.22373 138.825 9.35373 138.885 9.45373 138.985 cv
9.55373 139.095 9.61373 139.225 9.61373 139.375 cv
9.61373 139.525 9.55373 139.655 9.45373 139.755 cv
9.34373 139.855 9.21373 139.905 9.07373 139.905 cv
8.92373 139.905 8.79373 139.855 8.69373 139.755 cv
8.58372 139.655 8.53373 139.525 8.53373 139.375 cv
8.53373 139.225 8.58372 139.095 8.69373 138.985 cv
8.79373 138.885 8.92373 138.825 9.07373 138.825 cv
cp
f
14.9037 138.505 mo
14.4437 139.775 li
10.5337 139.775 li
10.5337 139.595 li
11.6837 138.555 12.4937 137.695 12.9637 137.025 cv
13.4237 136.365 13.6637 135.755 13.6637 135.205 cv
13.6637 134.785 13.5337 134.445 13.2737 134.175 cv
13.0137 133.905 12.7137 133.765 12.3637 133.765 cv
12.0337 133.765 11.7437 133.865 11.4837 134.055 cv
11.2237 134.245 11.0337 134.525 10.9137 134.885 cv
10.7337 134.885 li
10.8137 134.285 11.0137 133.825 11.3537 133.505 cv
11.6937 133.185 12.1137 133.015 12.6137 133.015 cv
13.1537 133.015 13.6037 133.195 13.9637 133.535 cv
14.3237 133.885 14.5037 134.295 14.5037 134.755 cv
14.5037 135.095 14.4237 135.425 14.2737 135.765 cv
14.0237 136.295 13.6337 136.855 13.0937 137.435 cv
12.2837 138.325 11.7737 138.855 11.5737 139.035 cv
13.3037 139.035 li
13.6537 139.035 13.9037 139.025 14.0437 138.995 cv
14.1837 138.975 14.3137 138.925 14.4337 138.845 cv
14.5437 138.765 14.6437 138.655 14.7237 138.505 cv
14.9037 138.505 li
cp
f
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
22.324 111.226 mo
302.171 111.226 li
302.392 111.226 302.571 111.405 302.571 111.626 cv
302.571 111.847 302.392 112.026 302.171 112.026 cv
22.324 112.026 li
22.1032 112.026 21.9239 111.847 21.9239 111.626 cv
21.9239 111.405 22.1032 111.226 22.324 111.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
3.18373 111.825 mo
3.18373 111.075 3.29373 110.425 3.52373 109.875 cv
3.74373 109.335 4.05373 108.925 4.43373 108.655 cv
4.72373 108.445 5.02373 108.335 5.34373 108.335 cv
5.84373 108.335 6.30373 108.595 6.71373 109.115 cv
7.21373 109.755 7.46373 110.625 7.46373 111.725 cv
7.46373 112.495 7.35373 113.145 7.13373 113.685 cv
6.91373 114.225 6.62373 114.605 6.28373 114.845 cv
5.94373 115.085 5.61373 115.205 5.29373 115.205 cv
4.65373 115.205 4.13373 114.835 3.71373 114.095 cv
3.35373 113.475 3.18373 112.715 3.18373 111.825 cv
cp
4.14373 111.945 mo
4.14373 112.865 4.25373 113.605 4.48373 114.175 cv
4.66373 114.665 4.93373 114.905 5.31373 114.905 cv
5.48373 114.905 5.66373 114.835 5.85373 114.675 cv
6.04373 114.515 6.18373 114.255 6.28373 113.875 cv
6.43373 113.315 6.51373 112.525 6.51373 111.505 cv
6.51373 110.755 6.43373 110.125 6.27373 109.615 cv
6.15373 109.245 6.00373 108.985 5.82373 108.825 cv
5.68373 108.715 5.52373 108.655 5.33372 108.655 cv
5.11373 108.655 4.91373 108.755 4.74373 108.955 cv
4.50373 109.235 4.34373 109.655 4.26373 110.235 cv
4.18373 110.815 4.14373 111.385 4.14373 111.945 cv
cp
f
9.07373 114.145 mo
9.22373 114.145 9.35373 114.205 9.45373 114.305 cv
9.55373 114.415 9.61373 114.545 9.61373 114.695 cv
9.61373 114.845 9.55373 114.975 9.45373 115.075 cv
9.34373 115.175 9.21373 115.225 9.07373 115.225 cv
8.92373 115.225 8.79373 115.175 8.69373 115.075 cv
8.58372 114.975 8.53373 114.845 8.53373 114.695 cv
8.53373 114.545 8.58372 114.415 8.69373 114.305 cv
8.79373 114.205 8.92373 114.145 9.07373 114.145 cv
cp
f
14.9737 112.655 mo
14.9737 113.345 li
14.0837 113.345 li
14.0837 115.095 li
13.2837 115.095 li
13.2837 113.345 li
10.4837 113.345 li
10.4837 112.725 li
13.5537 108.335 li
14.0837 108.335 li
14.0837 112.655 li
14.9737 112.655 li
cp
13.2837 112.655 mo
13.2837 109.365 li
10.9537 112.655 li
13.2837 112.655 li
cp
f
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
22.324 86.546 mo
302.171 86.546 li
302.392 86.546 302.571 86.725 302.571 86.946 cv
302.571 87.1669 302.392 87.346 302.171 87.346 cv
22.324 87.346 li
22.1032 87.346 21.9239 87.1669 21.9239 86.946 cv
21.9239 86.725 22.1032 86.546 22.324 86.546 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
3.18373 87.145 mo
3.18373 86.395 3.29373 85.745 3.52373 85.195 cv
3.74373 84.655 4.05373 84.245 4.43373 83.975 cv
4.72373 83.765 5.02373 83.655 5.34373 83.655 cv
5.84373 83.655 6.30373 83.915 6.71373 84.435 cv
7.21373 85.075 7.46373 85.945 7.46373 87.045 cv
7.46373 87.815 7.35373 88.465 7.13373 89.005 cv
6.91373 89.545 6.62373 89.925 6.28373 90.165 cv
5.94373 90.405 5.61373 90.525 5.29373 90.525 cv
4.65373 90.525 4.13373 90.155 3.71373 89.415 cv
3.35373 88.795 3.18373 88.035 3.18373 87.145 cv
cp
4.14373 87.265 mo
4.14373 88.185 4.25373 88.925 4.48373 89.495 cv
4.66373 89.985 4.93373 90.225 5.31373 90.225 cv
5.48373 90.225 5.66373 90.155 5.85373 89.995 cv
6.04373 89.835 6.18373 89.575 6.28373 89.195 cv
6.43373 88.635 6.51373 87.845 6.51373 86.825 cv
6.51373 86.075 6.43373 85.445 6.27373 84.935 cv
6.15373 84.565 6.00373 84.305 5.82373 84.145 cv
5.68373 84.035 5.52373 83.975 5.33372 83.975 cv
5.11373 83.975 4.91373 84.075 4.74373 84.275 cv
4.50373 84.555 4.34373 84.975 4.26373 85.555 cv
4.18373 86.135 4.14373 86.705 4.14373 87.265 cv
cp
f
9.07373 89.465 mo
9.22373 89.465 9.35373 89.525 9.45373 89.625 cv
9.55373 89.735 9.61373 89.865 9.61373 90.015 cv
9.61373 90.165 9.55373 90.295 9.45373 90.395 cv
9.34373 90.495 9.21373 90.545 9.07373 90.545 cv
8.92373 90.545 8.79373 90.495 8.69373 90.395 cv
8.58372 90.295 8.53373 90.165 8.53373 90.015 cv
8.53373 89.865 8.58372 89.735 8.69373 89.625 cv
8.79373 89.525 8.92373 89.465 9.07373 89.465 cv
cp
f
14.8037 83.655 mo
14.8037 83.835 li
14.3737 83.885 14.0237 83.975 13.7537 84.095 cv
13.4737 84.225 13.2037 84.425 12.9437 84.685 cv
12.6837 84.945 12.4637 85.245 12.2837 85.565 cv
12.1037 85.885 11.9637 86.275 11.8537 86.715 cv
12.3137 86.395 12.7837 86.235 13.2637 86.235 cv
13.7137 86.235 14.1037 86.425 14.4337 86.785 cv
14.7637 87.145 14.9337 87.615 14.9337 88.185 cv
14.9337 88.745 14.7637 89.245 14.4337 89.705 cv
14.0337 90.255 13.4937 90.525 12.8337 90.525 cv
12.3737 90.525 11.9937 90.385 11.6837 90.085 cv
11.0637 89.505 10.7537 88.745 10.7537 87.815 cv
10.7537 87.225 10.8637 86.665 11.1037 86.125 cv
11.3437 85.595 11.6837 85.125 12.1237 84.705 cv
12.5637 84.295 12.9937 84.015 13.3937 83.875 cv
13.7937 83.735 14.1737 83.655 14.5237 83.655 cv
14.8037 83.655 li
cp
11.7737 87.075 mo
11.7137 87.515 11.6837 87.875 11.6837 88.135 cv
11.6837 88.455 11.7337 88.795 11.8537 89.155 cv
11.9637 89.525 12.1337 89.815 12.3737 90.025 cv
12.5337 90.185 12.7337 90.255 12.9737 90.255 cv
13.2537 90.255 13.5137 90.125 13.7337 89.855 cv
13.9537 89.595 14.0737 89.215 14.0737 88.715 cv
14.0737 88.165 13.9537 87.685 13.7337 87.275 cv
13.5137 86.875 13.1937 86.665 12.7937 86.665 cv
12.6737 86.665 12.5337 86.695 12.3937 86.745 cv
12.2537 86.795 12.0437 86.905 11.7737 87.075 cv
cp
f
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
.8 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
22.324 62.266 mo
302.171 62.266 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
3.18373 62.465 mo
3.18373 61.715 3.29373 61.065 3.52373 60.515 cv
3.74373 59.975 4.05373 59.565 4.43373 59.295 cv
4.72373 59.085 5.02373 58.975 5.34373 58.975 cv
5.84373 58.975 6.30373 59.235 6.71373 59.755 cv
7.21373 60.395 7.46373 61.265 7.46373 62.365 cv
7.46373 63.135 7.35373 63.785 7.13373 64.325 cv
6.91373 64.865 6.62373 65.245 6.28373 65.485 cv
5.94373 65.725 5.61373 65.845 5.29373 65.845 cv
4.65373 65.845 4.13373 65.475 3.71373 64.735 cv
3.35373 64.115 3.18373 63.355 3.18373 62.465 cv
cp
4.14373 62.585 mo
4.14373 63.505 4.25373 64.245 4.48373 64.815 cv
4.66373 65.305 4.93373 65.545 5.31373 65.545 cv
5.48373 65.545 5.66373 65.475 5.85373 65.315 cv
6.04373 65.155 6.18373 64.895 6.28373 64.515 cv
6.43373 63.955 6.51373 63.165 6.51373 62.145 cv
6.51373 61.395 6.43373 60.765 6.27373 60.255 cv
6.15373 59.885 6.00373 59.625 5.82373 59.465 cv
5.68373 59.355 5.52373 59.295 5.33372 59.295 cv
5.11373 59.295 4.91373 59.395 4.74373 59.595 cv
4.50373 59.875 4.34373 60.295 4.26373 60.875 cv
4.18373 61.455 4.14373 62.025 4.14373 62.585 cv
cp
f
9.07373 64.785 mo
9.22373 64.785 9.35373 64.845 9.45373 64.945 cv
9.55373 65.055 9.61373 65.185 9.61373 65.335 cv
9.61373 65.485 9.55373 65.615 9.45373 65.715 cv
9.34373 65.815 9.21373 65.865 9.07373 65.865 cv
8.92373 65.865 8.79373 65.815 8.69373 65.715 cv
8.58372 65.615 8.53373 65.485 8.53373 65.335 cv
8.53373 65.185 8.58372 65.055 8.69373 64.945 cv
8.79373 64.845 8.92373 64.785 9.07373 64.785 cv
cp
f
12.2437 62.405 mo
11.7137 61.975 11.3737 61.625 11.2237 61.365 cv
11.0737 61.105 11.0037 60.835 11.0037 60.555 cv
11.0037 60.125 11.1637 59.755 11.4937 59.445 cv
11.8237 59.135 12.2637 58.975 12.8237 58.975 cv
13.3537 58.975 13.7837 59.125 14.1137 59.415 cv
14.4337 59.705 14.6037 60.035 14.6037 60.405 cv
14.6037 60.655 14.5137 60.905 14.3337 61.165 cv
14.1537 61.425 13.7937 61.725 13.2437 62.065 cv
13.8037 62.515 14.1837 62.865 14.3737 63.115 cv
14.6137 63.455 14.7437 63.805 14.7437 64.165 cv
14.7437 64.635 14.5637 65.035 14.2137 65.355 cv
13.8537 65.685 13.3937 65.845 12.8237 65.845 cv
12.1837 65.845 11.6937 65.655 11.3537 65.265 cv
11.0737 64.945 10.9337 64.605 10.9337 64.225 cv
10.9337 63.935 11.0237 63.645 11.2237 63.355 cv
11.4237 63.075 11.7637 62.755 12.2437 62.405 cv
cp
13.0137 61.875 mo
13.3937 61.535 13.6437 61.255 13.7437 61.045 cv
13.8437 60.845 13.9037 60.615 13.9037 60.355 cv
13.9037 60.015 13.8037 59.755 13.6137 59.555 cv
13.4237 59.365 13.1637 59.265 12.8337 59.265 cv
12.4937 59.265 12.2237 59.365 12.0237 59.555 cv
11.8137 59.745 11.7137 59.965 11.7137 60.225 cv
11.7137 60.395 11.7537 60.565 11.8437 60.735 cv
11.9237 60.905 12.0437 61.065 12.2037 61.215 cv
13.0137 61.875 li
cp
12.4737 62.585 mo
12.1937 62.815 11.9937 63.065 11.8637 63.335 cv
11.7337 63.605 11.6737 63.895 11.6737 64.205 cv
11.6737 64.625 11.7837 64.965 12.0137 65.215 cv
12.2437 65.465 12.5337 65.585 12.8937 65.585 cv
13.2437 65.585 13.5237 65.495 13.7437 65.295 cv
13.9537 65.095 14.0637 64.855 14.0637 64.565 cv
14.0637 64.335 13.9937 64.125 13.8737 63.935 cv
13.6337 63.595 13.1737 63.145 12.4737 62.585 cv
cp
f
gsave
22.3238 160.986 mo
302.171 160.986 li
302.171 37.586 li
22.3238 37.586 li
22.3238 160.986 li
clp
.8 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
22.324 37.586 mo
302.171 37.586 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
3.99373 35.085 mo
5.60373 34.295 li
5.76373 34.295 li
5.76373 39.885 li
5.76373 40.265 5.77373 40.495 5.81373 40.585 cv
5.84373 40.675 5.90373 40.745 6.00373 40.795 cv
6.10373 40.845 6.30373 40.875 6.60373 40.875 cv
6.60373 41.055 li
4.11373 41.055 li
4.11373 40.875 li
4.42373 40.875 4.62373 40.845 4.71373 40.795 cv
4.80373 40.755 4.86373 40.685 4.90373 40.605 cv
4.94373 40.525 4.96373 40.285 4.96373 39.885 cv
4.96373 36.315 li
4.96373 35.835 4.94373 35.525 4.91373 35.385 cv
4.89373 35.285 4.85373 35.205 4.79373 35.155 cv
4.57373 35.085 li
4.45373 35.085 4.28373 35.135 4.07373 35.235 cv
3.99373 35.085 li
cp
f
9.07373 40.105 mo
9.22373 40.105 9.35373 40.165 9.45373 40.265 cv
9.55373 40.375 9.61373 40.505 9.61373 40.655 cv
9.61373 40.805 9.55373 40.935 9.45373 41.035 cv
9.34373 41.135 9.21373 41.185 9.07373 41.185 cv
8.92373 41.185 8.79373 41.135 8.69373 41.035 cv
8.58372 40.935 8.53373 40.805 8.53373 40.655 cv
8.53373 40.505 8.58372 40.375 8.69373 40.265 cv
8.79373 40.165 8.92373 40.105 9.07373 40.105 cv
cp
f
10.6837 37.785 mo
10.6837 37.035 10.7937 36.385 11.0237 35.835 cv
11.2437 35.295 11.5537 34.885 11.9337 34.615 cv
12.2237 34.405 12.5237 34.295 12.8437 34.295 cv
13.3437 34.295 13.8037 34.555 14.2137 35.075 cv
14.7137 35.715 14.9637 36.585 14.9637 37.685 cv
14.9637 38.455 14.8537 39.105 14.6337 39.645 cv
14.4137 40.185 14.1237 40.565 13.7837 40.805 cv
13.4437 41.045 13.1137 41.165 12.7937 41.165 cv
12.1537 41.165 11.6337 40.795 11.2137 40.055 cv
10.8537 39.435 10.6837 38.675 10.6837 37.785 cv
cp
11.6437 37.905 mo
11.6437 38.825 11.7537 39.565 11.9837 40.135 cv
12.1637 40.625 12.4337 40.865 12.8137 40.865 cv
12.9837 40.865 13.1637 40.795 13.3537 40.635 cv
13.5437 40.475 13.6837 40.215 13.7837 39.835 cv
13.9337 39.275 14.0137 38.485 14.0137 37.465 cv
14.0137 36.715 13.9337 36.085 13.7737 35.575 cv
13.6537 35.205 13.5037 34.945 13.3237 34.785 cv
13.1837 34.675 13.0237 34.615 12.8337 34.615 cv
12.6137 34.615 12.4137 34.715 12.2437 34.915 cv
12.0037 35.195 11.8437 35.615 11.7637 36.195 cv
11.6837 36.775 11.6437 37.345 11.6437 37.905 cv
cp
f
116.504 132.452 mo
80.6309 112.026 li
83.6623 112.026 li
117.247 131.149 li
116.906 131.527 116.654 131.972 116.504 132.452 cv
123.094 132.187 mo
122.919 131.753 122.658 131.355 122.321 131.018 cv
122.321 131.018 122.321 131.018 122.321 131.018 cv
122.321 131.018 li
122.321 131.018 li
122.321 131.018 li
122.321 131.018 122.321 131.018 122.321 131.018 cv
122.297 130.994 122.273 130.971 122.249 130.948 cv
150.022 112.026 li
152.686 112.026 li
123.094 132.187 li
/1 
[/DeviceCMYK] /CSA add_res
.811765 .192157 .784314 .0666667 cmyk
f
153.861 111.226 mo
151.197 111.226 li
186.247 87.346 li
188.911 87.346 li
153.861 111.226 li
82.2573 111.226 mo
79.2258 111.226 li
37.6438 87.5492 li
37.7032 87.4835 37.7599 87.4157 37.8137 87.346 cv
40.3182 87.346 li
82.2573 111.226 li
f
152.686 112.026 mo
150.022 112.026 li
151.197 111.226 li
153.861 111.226 li
152.686 112.026 li
83.6623 112.026 mo
80.6309 112.026 li
79.2258 111.226 li
82.2573 111.226 li
83.6623 112.026 li
.811765 .192157 .784314 .0862745 cmyk
f
286.083 120.27 mo
270.721 112.026 li
273.893 112.026 li
286.793 118.949 li
286.462 119.335 286.221 119.786 286.083 120.27 cv
.811765 .192157 .784314 .0666667 cmyk
f
272.402 111.226 mo
269.23 111.226 li
224.732 87.346 li
227.904 87.346 li
272.402 111.226 li
f
273.893 112.026 mo
270.721 112.026 li
269.23 111.226 li
272.402 111.226 li
273.893 112.026 li
.811765 .192157 .784314 .0862745 cmyk
f
226.413 86.546 mo
223.241 86.546 li
207.306 77.9942 li
207.637 77.6083 207.878 77.1568 208.015 76.6728 cv
226.413 86.546 li
190.086 86.546 mo
187.422 86.546 li
201.401 77.0221 li
201.575 77.4558 201.836 77.8544 202.174 78.1912 cv
202.174 78.191 202.174 78.1909 202.173 78.1908 cv
202.174 78.1915 li
202.174 78.1915 li
202.174 78.1914 202.174 78.1913 202.174 78.1912 cv
202.197 78.2149 202.222 78.2383 202.246 78.2613 cv
190.086 86.546 li
.811765 .192157 .784314 .0666667 cmyk
f
38.9131 86.546 mo
38.2778 86.546 li
38.3185 86.4477 38.3547 86.3476 38.3864 86.246 cv
38.9131 86.546 li
f
227.904 87.346 mo
224.732 87.346 li
223.241 86.546 li
226.413 86.546 li
227.904 87.346 li
188.911 87.346 mo
186.247 87.346 li
187.422 86.546 li
190.086 86.546 li
188.911 87.346 li
40.3182 87.346 mo
37.8137 87.346 li
38.004 87.1 38.1597 86.8308 38.2778 86.546 cv
38.9131 86.546 li
40.3182 87.346 li
.811765 .192157 .784314 .0862745 cmyk
f
34.6443 87.6739 mo
34.3279 87.6227 34.0249 87.5111 33.7518 87.346 cv
34.6443 87.346 li
34.6443 87.6739 li
35.4444 87.6739 mo
35.4444 87.346 li
36.3368 87.346 li
36.0638 87.5111 35.7608 87.6227 35.4444 87.6739 cv
35.8818 86.546 mo
35.4444 86.546 li
35.4444 86.2969 li
35.8818 86.546 li
34.6443 86.546 mo
32.9338 86.546 li
32.6814 86.1488 32.5443 85.6847 32.5443 85.2061 cv
32.5443 84.5426 32.8077 83.907 33.2765 83.4389 cv
33.2772 83.4383 li
33.6501 83.0647 34.1293 82.8216 34.6443 82.7382 cv
34.6443 84.5715 li
34.5432 84.6351 34.4558 84.7239 34.3925 84.835 cv
34.1932 85.1851 34.3067 85.628 34.6443 85.8405 cv
34.6443 86.546 li
37.4879 85.7344 mo
35.4444 84.5709 li
35.4444 82.7382 li
35.9593 82.8216 36.4385 83.0647 36.8115 83.4383 cv
36.812 83.4389 li
37.281 83.907 37.5442 84.5426 37.5444 85.2061 cv
37.5443 85.3852 37.5251 85.5622 37.4879 85.7344 cv
.811765 .188235 .780392 .0627451 cmyk
f
35.0444 87.7061 mo
34.9095 87.7061 34.7757 87.6952 34.6443 87.6739 cv
34.6443 87.346 li
35.4444 87.346 li
35.4444 87.6739 li
35.313 87.6952 35.1793 87.7061 35.0444 87.7061 cv
35.0444 87.7061 li
35.4444 86.546 mo
34.6443 86.546 li
34.6443 85.8405 li
34.6538 85.8464 34.6634 85.8522 34.6732 85.8578 cv
35.4444 86.2969 li
35.4444 86.546 li
34.6443 84.5715 mo
34.6443 82.7382 li
34.7757 82.7169 34.9095 82.7061 35.0444 82.7061 cv
35.1793 82.7061 35.313 82.717 35.4444 82.7382 cv
35.4444 84.5709 li
35.4155 84.5544 li
35.2983 84.4877 35.1708 84.456 35.045 84.456 cv
34.9035 84.456 34.7643 84.496 34.6443 84.5715 cv
.811765 .188235 .780392 .0823529 cmyk
f
36.3368 87.346 mo
35.4444 87.346 li
34.6443 87.346 li
33.7518 87.346 li
33.5805 87.2424 33.4209 87.1178 33.2772 86.9737 cv
33.2765 86.9733 li
33.1459 86.8428 33.0312 86.6994 32.9338 86.546 cv
34.6443 86.546 li
35.4444 86.546 li
35.8818 86.546 li
36.7453 87.0376 li
36.6193 87.155 36.4823 87.258 36.3368 87.346 cv
f
37.1549 86.546 mo
35.8818 86.546 li
35.4444 86.2969 li
35.4444 84.5709 li
37.4879 85.7344 li
37.4256 86.0226 37.3128 86.2974 37.1549 86.546 cv
34.6443 85.8405 mo
34.3067 85.628 34.1932 85.1851 34.3925 84.835 cv
34.4558 84.7239 34.5432 84.6351 34.6443 84.5715 cv
34.6443 85.8405 li
.894118 .207843 .866667 .0745098 cmyk
f
35.4444 86.2969 mo
34.6732 85.8578 li
34.6634 85.8522 34.6538 85.8464 34.6443 85.8405 cv
34.6443 84.5715 li
34.7643 84.496 34.9035 84.456 35.045 84.456 cv
35.1708 84.456 35.2983 84.4877 35.4155 84.5544 cv
35.4444 84.5709 li
35.4444 86.2969 li
.894118 .207843 .866667 .0705882 cmyk
f
36.7453 87.0376 mo
35.8818 86.546 li
37.1549 86.546 li
37.0574 86.6994 36.9427 86.8428 36.812 86.9733 cv
36.8115 86.9737 li
36.7898 86.9955 36.7677 87.0168 36.7453 87.0376 cv
f
34.6443 88.6832 mo
33.8632 88.5934 33.1308 88.2425 32.5698 87.6806 cv
32.4639 87.5749 32.3655 87.4631 32.275 87.346 cv
33.7518 87.346 li
34.0249 87.5111 34.3279 87.6227 34.6443 87.6739 cv
34.6443 88.6832 li
35.4444 88.6832 mo
35.4444 87.6739 li
35.7608 87.6227 36.0638 87.5111 36.3368 87.346 cv
37.2869 87.346 li
37.6438 87.5492 li
37.6034 87.594 37.5618 87.6378 37.5189 87.6806 cv
36.9579 88.2425 36.2255 88.5934 35.4444 88.6832 cv
32.9338 86.546 mo
31.8109 86.546 li
31.6366 86.1253 31.5444 85.6704 31.5444 85.2061 cv
31.5444 84.2777 31.9129 83.3875 32.5698 82.7315 cv
33.1308 82.1697 33.8632 81.8188 34.6443 81.729 cv
34.6443 82.7382 li
34.1293 82.8216 33.6501 83.0647 33.2772 83.4383 cv
33.2765 83.4389 li
32.8077 83.907 32.5443 84.5426 32.5443 85.2061 cv
32.5443 85.6847 32.6814 86.1488 32.9338 86.546 cv
38.3864 86.246 mo
37.4879 85.7344 li
37.5251 85.5622 37.5443 85.3852 37.5444 85.2061 cv
37.5442 84.5426 37.281 83.907 36.812 83.4389 cv
36.8115 83.4383 li
36.4385 83.0647 35.9593 82.8216 35.4444 82.7382 cv
35.4444 81.729 li
36.2255 81.8188 36.9579 82.1697 37.5189 82.7315 cv
38.1758 83.3875 38.5443 84.2777 38.5443 85.2061 cv
38.5443 85.562 38.4902 85.9124 38.3864 86.246 cv
.811765 .188235 .780392 .0627451 cmyk
f
35.0444 88.7061 mo
35.0444 88.7061 li
34.91 88.7061 34.7765 88.6983 34.6443 88.6832 cv
34.6443 87.6739 li
34.7757 87.6952 34.9095 87.7061 35.0444 87.7061 cv
35.0444 87.7061 li
35.1793 87.7061 35.313 87.6952 35.4444 87.6739 cv
35.4444 88.6832 li
35.3123 88.6983 35.1787 88.7061 35.0444 88.7061 cv
35.4444 82.7382 mo
35.313 82.717 35.1793 82.7061 35.0444 82.7061 cv
34.9095 82.7061 34.7757 82.7169 34.6443 82.7382 cv
34.6443 81.729 li
34.7765 81.7138 34.91 81.7061 35.0444 81.7061 cv
35.1787 81.7061 35.3123 81.7138 35.4444 81.729 cv
35.4444 82.7382 li
.811765 .188235 .780392 .0823529 cmyk
f
37.2869 87.346 mo
36.3368 87.346 li
36.4823 87.258 36.6193 87.155 36.7453 87.0376 cv
37.2869 87.346 li
33.7518 87.346 mo
32.275 87.346 li
32.0847 87.1 31.929 86.8308 31.8109 86.546 cv
32.9338 86.546 li
33.0312 86.6994 33.1459 86.8428 33.2765 86.9733 cv
33.2772 86.9737 li
33.4209 87.1178 33.5805 87.2424 33.7518 87.346 cv
f
37.6438 87.5492 mo
37.2869 87.346 li
37.8137 87.346 li
37.7599 87.4157 37.7032 87.4835 37.6438 87.5492 cv
.894118 .207843 .866667 .0745098 cmyk
f
38.2778 86.546 mo
37.1549 86.546 li
37.3128 86.2974 37.4256 86.0226 37.4879 85.7344 cv
38.3864 86.246 li
38.3547 86.3476 38.3185 86.4477 38.2778 86.546 cv
f
37.8137 87.346 mo
37.2869 87.346 li
36.7453 87.0376 li
36.7677 87.0168 36.7898 86.9955 36.8115 86.9737 cv
36.812 86.9733 li
36.9427 86.8428 37.0574 86.6994 37.1549 86.546 cv
38.2778 86.546 li
38.1597 86.8308 38.004 87.1 37.8137 87.346 cv
.894118 .207843 .866667 .0705882 cmyk
f
37.5186 87.681 mo
37.5187 87.6809 37.5188 87.6808 37.5189 87.6806 cv
37.519 87.6805 37.5191 87.6804 37.5192 87.6803 cv
37.5186 87.681 li
32.5701 87.681 mo
32.5695 87.6803 li
32.5696 87.6804 32.5697 87.6805 32.5698 87.6806 cv
32.5699 87.6808 32.57 87.6809 32.5701 87.681 cv
37.5192 82.7319 mo
37.5191 82.7317 37.519 82.7317 37.5189 82.7315 cv
37.5188 82.7314 37.5187 82.7313 37.5186 82.7312 cv
37.5192 82.7319 li
32.5695 82.7319 mo
32.5701 82.7312 li
32.57 82.7313 32.5699 82.7314 32.5698 82.7315 cv
32.5697 82.7317 32.5696 82.7317 32.5695 82.7319 cv
.811765 .188235 .780392 .0627451 cmyk
f
120.499 135.906 mo
120.246 135.906 li
120.246 134.126 li
120.254 134.122 120.261 134.117 120.269 134.112 cv
122.239 132.769 li
122.31 133.002 122.346 133.245 122.346 133.492 cv
122.346 134.156 122.083 134.791 121.614 135.26 cv
121.613 135.26 li
121.302 135.572 120.917 135.793 120.499 135.906 cv
119.446 135.906 mo
119.194 135.906 li
118.776 135.793 118.39 135.572 118.079 135.26 cv
118.078 135.26 li
117.61 134.791 117.346 134.156 117.346 133.492 cv
117.346 133.313 117.366 133.136 117.403 132.964 cv
119.446 134.127 li
119.446 135.906 li
119.446 132.401 mo
118.146 131.661 li
118.508 131.323 118.961 131.103 119.446 131.025 cv
119.446 132.401 li
120.246 132.312 mo
120.246 131.025 li
120.665 131.093 121.061 131.266 121.395 131.53 cv
120.246 132.312 li
f
120.246 135.906 mo
119.446 135.906 li
119.446 134.127 li
119.475 134.144 li
119.591 134.21 119.719 134.242 119.846 134.242 cv
119.986 134.242 120.124 134.203 120.246 134.126 cv
120.246 135.906 li
119.811 132.609 mo
119.446 132.401 li
119.446 131.025 li
119.578 131.003 119.711 130.992 119.846 130.992 cv
119.981 130.992 120.115 131.003 120.246 131.025 cv
120.246 132.312 li
119.811 132.609 li
.811765 .188235 .780392 .0823529 cmyk
f
119.846 135.993 mo
119.624 135.993 119.405 135.963 119.194 135.906 cv
119.446 135.906 li
120.246 135.906 li
120.499 135.906 li
120.288 135.963 120.069 135.993 119.846 135.993 cv
119.846 135.993 li
f
119.446 134.127 mo
117.403 132.964 li
117.504 132.498 117.736 132.067 118.078 131.725 cv
118.079 131.725 li
118.101 131.703 118.123 131.682 118.146 131.661 cv
119.446 132.401 li
119.446 134.127 li
120.246 134.126 mo
120.246 132.312 li
121.395 131.53 li
121.471 131.59 121.544 131.655 121.613 131.725 cv
121.614 131.725 li
121.908 132.019 122.121 132.378 122.239 132.769 cv
120.269 134.112 li
120.261 134.117 120.254 134.122 120.246 134.126 cv
.894118 .207843 .866667 .0745098 cmyk
f
119.846 134.242 mo
119.719 134.242 119.591 134.21 119.475 134.144 cv
119.446 134.127 li
119.446 132.401 li
119.811 132.609 li
120.246 132.312 li
120.246 134.126 li
120.124 134.203 119.986 134.242 119.846 134.242 cv
.894118 .207843 .866667 .0705882 cmyk
f
119.446 136.97 mo
119.105 136.93 118.772 136.841 118.459 136.706 cv
119.446 136.706 li
119.446 136.97 li
120.246 136.97 mo
120.246 136.706 li
121.233 136.706 li
120.92 136.841 120.588 136.93 120.246 136.97 cv
122.381 135.906 mo
120.499 135.906 li
120.917 135.793 121.302 135.572 121.613 135.26 cv
121.614 135.26 li
122.083 134.791 122.346 134.156 122.346 133.492 cv
122.346 133.245 122.31 133.002 122.239 132.769 cv
123.094 132.187 li
123.259 132.598 123.346 133.041 123.346 133.492 cv
123.346 134.392 123 135.256 122.381 135.906 cv
119.194 135.906 mo
117.312 135.906 li
116.693 135.256 116.346 134.392 116.346 133.492 cv
116.346 133.136 116.401 132.786 116.504 132.452 cv
117.403 132.964 li
117.366 133.136 117.346 133.313 117.346 133.492 cv
117.346 134.156 117.61 134.791 118.078 135.26 cv
118.079 135.26 li
118.39 135.572 118.776 135.793 119.194 135.906 cv
118.146 131.661 mo
117.247 131.149 li
117.287 131.104 117.329 131.061 117.372 131.018 cv
117.933 130.456 118.665 130.105 119.446 130.015 cv
119.446 131.025 li
118.961 131.103 118.508 131.323 118.146 131.661 cv
121.395 131.53 mo
121.061 131.266 120.665 131.093 120.246 131.025 cv
120.246 130.015 li
120.994 130.101 121.698 130.427 122.249 130.948 cv
121.395 131.53 li
.811765 .188235 .780392 .0627451 cmyk
f
119.846 136.992 mo
119.846 136.992 li
119.712 136.992 119.578 136.985 119.446 136.97 cv
119.446 136.706 li
120.246 136.706 li
120.246 136.97 li
120.114 136.985 119.981 136.992 119.846 136.992 cv
119.446 131.025 mo
119.446 130.015 li
119.578 130 119.712 129.993 119.846 129.993 cv
119.981 129.993 120.114 130 120.246 130.015 cv
120.246 131.025 li
120.115 131.003 119.981 130.992 119.846 130.992 cv
119.711 130.992 119.578 131.003 119.446 131.025 cv
.811765 .188235 .780392 .0823529 cmyk
f
121.233 136.706 mo
120.246 136.706 li
119.446 136.706 li
118.459 136.706 li
118.057 136.532 117.687 136.283 117.372 135.967 cv
117.352 135.947 117.332 135.927 117.312 135.906 cv
119.194 135.906 li
119.405 135.963 119.624 135.993 119.846 135.993 cv
119.846 135.993 li
120.069 135.993 120.288 135.963 120.499 135.906 cv
122.381 135.906 li
122.361 135.927 122.341 135.947 122.321 135.967 cv
122.005 136.283 121.635 136.532 121.233 136.706 cv
f
117.403 132.964 mo
116.504 132.452 li
116.654 131.972 116.906 131.527 117.247 131.149 cv
118.146 131.661 li
118.123 131.682 118.101 131.703 118.079 131.725 cv
118.078 131.725 li
117.736 132.067 117.504 132.498 117.403 132.964 cv
122.239 132.769 mo
122.121 132.378 121.908 132.019 121.614 131.725 cv
121.613 131.725 li
121.544 131.655 121.471 131.59 121.395 131.53 cv
122.249 130.948 li
122.273 130.971 122.297 130.994 122.321 131.018 cv
122.658 131.355 122.919 131.753 123.094 132.187 cv
122.239 132.769 li
.894118 .207843 .866667 .0745098 cmyk
f
122.321 135.967 mo
122.321 135.967 122.321 135.967 122.321 135.967 cv
122.321 135.967 122.321 135.967 122.321 135.967 cv
122.321 135.967 li
117.372 135.967 mo
117.371 135.967 li
117.372 135.967 117.372 135.967 117.372 135.967 cv
117.372 135.967 117.372 135.967 117.372 135.967 cv
.811765 .188235 .780392 .0823529 cmyk
f
122.321 131.018 mo
122.321 131.018 122.321 131.018 122.321 131.018 cv
122.321 131.018 122.321 131.018 122.321 131.018 cv
122.321 131.018 li
.894118 .207843 .866667 .0745098 cmyk
f
117.371 131.018 mo
117.372 131.018 li
117.372 131.018 117.372 131.018 117.372 131.018 cv
117.372 131.018 117.372 131.018 117.371 131.018 cv
.811765 .188235 .780392 .0627451 cmyk
f
205.048 78.1845 mo
205.048 76.7829 li
206.394 77.5052 li
206.025 77.867 205.554 78.1026 205.048 78.1845 cv
204.248 78.1844 mo
203.829 78.1166 203.434 77.943 203.1 77.6793 cv
204.248 76.8971 li
204.248 78.1844 li
202.255 76.44 mo
202.185 76.2076 202.148 75.9641 202.148 75.7166 cv
202.148 75.0531 202.412 74.4175 202.881 73.9494 cv
202.881 73.9488 li
203.254 73.5753 203.733 73.3322 204.248 73.2488 cv
204.248 75.0827 li
204.241 75.0874 204.233 75.0923 204.226 75.0973 cv
202.255 76.44 li
207.104 76.1839 mo
205.048 75.0805 li
205.048 73.2487 li
205.563 73.3322 206.043 73.5753 206.415 73.9488 cv
206.416 73.9494 li
206.885 74.4175 207.148 75.0531 207.148 75.7166 cv
207.148 75.8746 207.133 76.031 207.104 76.1839 cv
f
204.648 78.2166 mo
204.513 78.2166 204.38 78.2057 204.248 78.1844 cv
204.248 76.8971 li
204.695 76.593 li
205.048 76.7829 li
205.048 78.1845 li
204.917 78.2057 204.783 78.2166 204.648 78.2166 cv
204.648 78.2166 li
204.248 75.0827 mo
204.248 73.2488 li
204.38 73.2275 204.513 73.2166 204.648 73.2166 cv
204.783 73.2166 204.917 73.2275 205.048 73.2487 cv
205.048 75.0805 li
205.003 75.0562 li
204.892 74.9965 204.77 74.9669 204.648 74.9669 cv
204.509 74.9669 204.37 75.0058 204.248 75.0827 cv
.811765 .188235 .780392 .0823529 cmyk
f
203.1 77.6793 mo
203.024 77.619 202.951 77.554 202.881 77.4844 cv
202.881 77.4838 li
202.587 77.1902 202.373 76.8308 202.255 76.44 cv
204.226 75.0973 li
204.233 75.0923 204.241 75.0874 204.248 75.0827 cv
204.248 76.8971 li
203.1 77.6793 li
206.394 77.5052 mo
205.048 76.7829 li
205.048 75.0805 li
207.104 76.1839 li
207.011 76.6732 206.773 77.127 206.416 77.4838 cv
206.415 77.4844 li
206.408 77.4914 206.401 77.4984 206.394 77.5052 cv
.894118 .207843 .866667 .0745098 cmyk
f
204.248 76.8971 mo
204.248 75.0827 li
204.37 75.0058 204.509 74.9669 204.648 74.9669 cv
204.77 74.9669 204.892 74.9965 205.003 75.0562 cv
205.048 75.0805 li
205.048 76.7829 li
204.695 76.593 li
204.248 76.8971 li
.894118 .207843 .866667 .0705882 cmyk
f
205.048 79.1937 mo
205.048 78.1845 li
205.554 78.1026 206.025 77.867 206.394 77.5052 cv
207.306 77.9942 li
207.247 78.0621 207.186 78.1279 207.123 78.1915 cv
207.123 78.1908 li
206.562 78.7529 205.83 79.1039 205.048 79.1937 cv
204.248 79.1937 mo
203.5 79.1077 202.797 78.7822 202.246 78.2613 cv
203.1 77.6793 li
203.434 77.943 203.829 78.1166 204.248 78.1844 cv
204.248 79.1937 li
201.401 77.0221 mo
201.236 76.611 201.148 76.1683 201.148 75.7166 cv
201.148 74.7883 201.517 73.898 202.174 73.2421 cv
202.735 72.6802 203.467 72.3293 204.248 72.2395 cv
204.248 73.2488 li
203.733 73.3322 203.254 73.5753 202.881 73.9488 cv
202.881 73.9494 li
202.412 74.4175 202.148 75.0531 202.148 75.7166 cv
202.148 75.9641 202.185 76.2076 202.255 76.44 cv
201.401 77.0221 li
208.015 76.6728 mo
207.104 76.1839 li
207.133 76.031 207.148 75.8746 207.148 75.7166 cv
207.148 75.0531 206.885 74.4175 206.416 73.9494 cv
206.415 73.9488 li
206.043 73.5753 205.563 73.3322 205.048 73.2487 cv
205.048 72.2395 li
205.83 72.3293 206.562 72.6803 207.123 73.2424 cv
207.123 73.2417 li
207.78 73.8977 208.148 74.7881 208.148 75.7166 cv
208.148 76.0429 208.103 76.3644 208.015 76.6728 cv
.811765 .188235 .780392 .0627451 cmyk
f
204.648 79.2166 mo
204.648 79.2166 li
204.514 79.2166 204.38 79.2089 204.248 79.1937 cv
204.248 78.1844 li
204.38 78.2057 204.513 78.2166 204.648 78.2166 cv
204.648 78.2166 li
204.783 78.2166 204.917 78.2057 205.048 78.1845 cv
205.048 79.1937 li
204.916 79.2089 204.783 79.2166 204.648 79.2166 cv
204.248 73.2488 mo
204.248 72.2395 li
204.38 72.2243 204.514 72.2166 204.648 72.2166 cv
204.783 72.2166 204.916 72.2243 205.048 72.2395 cv
205.048 73.2487 li
204.917 73.2275 204.783 73.2166 204.648 73.2166 cv
204.513 73.2166 204.38 73.2275 204.248 73.2488 cv
.811765 .188235 .780392 .0823529 cmyk
f
202.246 78.2613 mo
202.222 78.2383 202.197 78.2149 202.174 78.1912 cv
201.836 77.8544 201.575 77.4558 201.401 77.0221 cv
202.255 76.44 li
202.373 76.8308 202.587 77.1902 202.881 77.4838 cv
202.881 77.4844 li
202.951 77.554 203.024 77.619 203.1 77.6793 cv
202.246 78.2613 li
202.174 78.1915 mo
202.173 78.1908 li
202.174 78.1909 202.174 78.191 202.174 78.1912 cv
202.174 78.1913 202.174 78.1914 202.174 78.1915 cv
207.306 77.9942 mo
206.394 77.5052 li
206.401 77.4984 206.408 77.4914 206.415 77.4844 cv
206.416 77.4838 li
206.773 77.127 207.011 76.6732 207.104 76.1839 cv
208.015 76.6728 li
207.878 77.1568 207.637 77.6083 207.306 77.9942 cv
.894118 .207843 .866667 .0745098 cmyk
f
202.173 73.2424 mo
202.174 73.2417 li
202.174 73.2418 202.174 73.2419 202.174 73.2421 cv
202.174 73.2422 202.174 73.2423 202.173 73.2424 cv
.811765 .188235 .780392 .0627451 cmyk
f
289.85 123.694 mo
289.85 121.861 li
289.957 121.794 290.048 121.699 290.111 121.581 cv
290.299 121.231 290.181 120.8 289.85 120.592 cv
289.85 118.759 li
290.365 118.842 290.845 119.085 291.218 119.459 cv
291.218 119.459 li
291.687 119.927 291.95 120.563 291.95 121.227 cv
291.95 121.89 291.687 122.526 291.218 122.994 cv
291.218 122.994 li
290.845 123.368 290.365 123.611 289.85 123.694 cv
289.05 123.694 mo
288.535 123.611 288.056 123.368 287.683 122.994 cv
287.683 122.994 li
287.214 122.526 286.95 121.89 286.95 121.227 cv
286.95 121.069 286.965 120.912 286.994 120.759 cv
289.05 121.863 li
289.05 123.694 li
289.05 120.16 mo
287.704 119.438 li
288.074 119.076 288.545 118.841 289.05 118.759 cv
289.05 120.16 li
f
289.45 123.727 mo
289.315 123.727 289.182 123.716 289.05 123.694 cv
289.05 121.863 li
289.096 121.887 li
289.209 121.948 289.33 121.976 289.45 121.976 cv
289.591 121.976 289.731 121.936 289.85 121.861 cv
289.85 123.694 li
289.719 123.716 289.585 123.727 289.45 123.727 cv
289.45 123.727 li
289.85 120.592 mo
289.836 120.582 289.82 120.574 289.805 120.565 cv
289.05 120.16 li
289.05 118.759 li
289.182 118.737 289.315 118.726 289.45 118.726 cv
289.585 118.726 289.719 118.737 289.85 118.759 cv
289.85 120.592 li
.811765 .188235 .780392 .0823529 cmyk
f
289.05 121.863 mo
286.994 120.759 li
287.087 120.27 287.325 119.816 287.683 119.459 cv
287.683 119.459 li
287.69 119.452 287.697 119.445 287.704 119.438 cv
289.05 120.16 li
289.05 121.863 li
289.85 121.861 mo
289.85 120.592 li
290.181 120.8 290.299 121.231 290.111 121.581 cv
290.048 121.699 289.957 121.794 289.85 121.861 cv
.894118 .207843 .866667 .0745098 cmyk
f
289.45 121.976 mo
289.33 121.976 289.209 121.948 289.096 121.887 cv
289.05 121.863 li
289.05 120.16 li
289.805 120.565 li
289.82 120.574 289.836 120.582 289.85 120.592 cv
289.85 121.861 li
289.731 121.936 289.591 121.976 289.45 121.976 cv
.894118 .207843 .866667 .0705882 cmyk
f
289.85 124.704 mo
289.85 123.694 li
290.365 123.611 290.845 123.368 291.218 122.994 cv
291.218 122.994 li
291.687 122.526 291.95 121.89 291.95 121.227 cv
291.95 120.563 291.687 119.927 291.218 119.459 cv
291.218 119.459 li
290.845 119.085 290.365 118.842 289.85 118.759 cv
289.85 117.749 li
290.632 117.839 291.364 118.19 291.925 118.752 cv
291.925 118.752 li
292.582 119.408 292.95 120.298 292.95 121.227 cv
292.95 122.155 292.582 123.045 291.925 123.701 cv
291.925 123.701 li
291.364 124.263 290.632 124.614 289.85 124.704 cv
289.05 124.704 mo
288.269 124.614 287.537 124.263 286.976 123.701 cv
286.319 123.045 285.95 122.155 285.95 121.227 cv
285.95 120.9 285.996 120.579 286.083 120.27 cv
286.994 120.759 li
286.965 120.912 286.95 121.069 286.95 121.227 cv
286.95 121.89 287.214 122.526 287.683 122.994 cv
287.683 122.994 li
288.056 123.368 288.535 123.611 289.05 123.694 cv
289.05 124.704 li
287.704 119.438 mo
286.793 118.949 li
286.851 118.881 286.912 118.815 286.976 118.752 cv
287.537 118.19 288.269 117.839 289.05 117.749 cv
289.05 118.759 li
288.545 118.841 288.074 119.076 287.704 119.438 cv
.811765 .188235 .780392 .0627451 cmyk
f
289.45 124.727 mo
289.45 124.727 li
289.316 124.727 289.183 124.719 289.05 124.704 cv
289.05 123.694 li
289.182 123.716 289.315 123.727 289.45 123.727 cv
289.45 123.727 li
289.585 123.727 289.719 123.716 289.85 123.694 cv
289.85 124.704 li
289.718 124.719 289.585 124.727 289.45 124.727 cv
289.05 118.759 mo
289.05 117.749 li
289.183 117.734 289.316 117.727 289.45 117.727 cv
289.585 117.727 289.718 117.734 289.85 117.749 cv
289.85 118.759 li
289.719 118.737 289.585 118.726 289.45 118.726 cv
289.315 118.726 289.182 118.737 289.05 118.759 cv
.811765 .188235 .780392 .0823529 cmyk
f
286.994 120.759 mo
286.083 120.27 li
286.221 119.786 286.462 119.335 286.793 118.949 cv
287.704 119.438 li
287.697 119.445 287.69 119.452 287.683 119.459 cv
287.683 119.459 li
287.325 119.816 287.087 120.27 286.994 120.759 cv
.894118 .207843 .866667 .0745098 cmyk
f
286.976 123.701 mo
286.976 123.701 li
286.976 123.701 286.976 123.701 286.976 123.701 cv
286.976 123.701 286.976 123.701 286.976 123.701 cv
286.976 118.752 mo
286.976 118.752 li
286.976 118.752 286.976 118.752 286.976 118.752 cv
286.976 118.752 286.976 118.752 286.976 118.752 cv
.811765 .188235 .780392 .0627451 cmyk
f
1.5 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.0443 108.812 mo
119.846 92.1045 li
204.648 111.07 li
289.45 83.9105 li
0 .550439 .957794 0 cmyk
@
35.0443 111.812 mo
35.8403 111.812 36.6033 111.496 37.1653 110.933 cv
37.7283 110.371 38.0443 109.608 38.0443 108.812 cv
38.0443 108.016 37.7283 107.253 37.1653 106.691 cv
36.6033 106.128 35.8403 105.812 35.0443 105.812 cv
34.2483 105.812 33.4853 106.128 32.9233 106.691 cv
32.3603 107.253 32.0443 108.016 32.0443 108.812 cv
32.0443 109.608 32.3603 110.371 32.9233 110.933 cv
33.4853 111.496 34.2483 111.812 35.0443 111.812 cv
cp
f
1 lw
0 lc
35.0443 111.812 mo
35.8403 111.812 36.6033 111.496 37.1653 110.933 cv
37.7283 110.371 38.0443 109.608 38.0443 108.812 cv
38.0443 108.016 37.7283 107.253 37.1653 106.691 cv
36.6033 106.128 35.8403 105.812 35.0443 105.812 cv
34.2483 105.812 33.4853 106.128 32.9233 106.691 cv
32.3603 107.253 32.0443 108.016 32.0443 108.812 cv
32.0443 109.608 32.3603 110.371 32.9233 110.933 cv
33.4853 111.496 34.2483 111.812 35.0443 111.812 cv
cp
@
119.846 95.1041 mo
120.642 95.1041 121.405 94.7881 121.967 94.2251 cv
122.53 93.6631 122.846 92.9001 122.846 92.1041 cv
122.846 91.3081 122.53 90.5451 121.967 89.9831 cv
121.405 89.4201 120.642 89.1041 119.846 89.1041 cv
119.05 89.1041 118.287 89.4201 117.725 89.9831 cv
117.162 90.5451 116.846 91.3081 116.846 92.1041 cv
116.846 92.9001 117.162 93.6631 117.725 94.2251 cv
118.287 94.7881 119.05 95.1041 119.846 95.1041 cv
cp
f
119.846 95.1041 mo
120.642 95.1041 121.405 94.7881 121.967 94.2251 cv
122.53 93.6631 122.846 92.9001 122.846 92.1041 cv
122.846 91.3081 122.53 90.5451 121.967 89.9831 cv
121.405 89.4201 120.642 89.1041 119.846 89.1041 cv
119.05 89.1041 118.287 89.4201 117.725 89.9831 cv
117.162 90.5451 116.846 91.3081 116.846 92.1041 cv
116.846 92.9001 117.162 93.6631 117.725 94.2251 cv
118.287 94.7881 119.05 95.1041 119.846 95.1041 cv
cp
@
204.648 114.071 mo
205.444 114.071 206.207 113.755 206.769 113.192 cv
207.332 112.63 207.648 111.867 207.648 111.071 cv
207.648 110.275 207.332 109.512 206.769 108.95 cv
206.207 108.387 205.444 108.071 204.648 108.071 cv
203.852 108.071 203.089 108.387 202.527 108.95 cv
201.964 109.512 201.648 110.275 201.648 111.071 cv
201.648 111.867 201.964 112.63 202.527 113.192 cv
203.089 113.755 203.852 114.071 204.648 114.071 cv
cp
f
204.648 114.071 mo
205.444 114.071 206.207 113.755 206.769 113.192 cv
207.332 112.63 207.648 111.867 207.648 111.071 cv
207.648 110.275 207.332 109.512 206.769 108.95 cv
206.207 108.387 205.444 108.071 204.648 108.071 cv
203.852 108.071 203.089 108.387 202.527 108.95 cv
201.964 109.512 201.648 110.275 201.648 111.071 cv
201.648 111.867 201.964 112.63 202.527 113.192 cv
203.089 113.755 203.852 114.071 204.648 114.071 cv
cp
@
289.45 86.9103 mo
290.246 86.9103 291.009 86.5943 291.571 86.0313 cv
292.134 85.4693 292.45 84.7063 292.45 83.9103 cv
292.45 83.1143 292.134 82.3513 291.571 81.7893 cv
291.009 81.2263 290.246 80.9103 289.45 80.9103 cv
288.654 80.9103 287.891 81.2263 287.329 81.7893 cv
286.766 82.3513 286.45 83.1143 286.45 83.9103 cv
286.45 84.7063 286.766 85.4693 287.329 86.0313 cv
287.891 86.5943 288.654 86.9103 289.45 86.9103 cv
cp
f
289.45 86.9103 mo
290.246 86.9103 291.009 86.5943 291.571 86.0313 cv
292.134 85.4693 292.45 84.7063 292.45 83.9103 cv
292.45 83.1143 292.134 82.3513 291.571 81.7893 cv
291.009 81.2263 290.246 80.9103 289.45 80.9103 cv
288.654 80.9103 287.891 81.2263 287.329 81.7893 cv
286.766 82.3513 286.45 83.1143 286.45 83.9103 cv
286.45 84.7063 286.766 85.4693 287.329 86.0313 cv
287.891 86.5943 288.654 86.9103 289.45 86.9103 cv
cp
@
.8 lw
2 lc
0 lj
22.324 160.986 mo
22.324 37.586 li
1 /0 /CSD get_res sepcs
.2 sep
@
302.171 160.986 mo
302.171 37.586 li
@
22.324 160.986 mo
302.171 160.986 li
@
22.324 37.586 mo
302.171 37.586 li
@
221.185 8.98137 mo
212.603 8.98137 li
212.657 8.73693 212.685 8.4856 212.685 8.23143 cv
212.685 7.9772 212.657 7.7258 212.603 7.48132 cv
221.185 7.48132 li
221.599 7.48132 221.935 7.81728 221.935 8.23143 cv
221.935 8.64558 221.599 8.98137 221.185 8.98137 cv
205.766 8.98137 mo
197.185 8.98137 li
196.77 8.98137 196.435 8.64558 196.435 8.23143 cv
196.435 7.81728 196.77 7.48132 197.185 7.48132 cv
205.766 7.48132 li
205.712 7.72581 205.685 7.9772 205.685 8.23143 cv
205.685 8.4856 205.712 8.73695 205.766 8.98137 cv
.811765 .192157 .784314 .0666667 cmyk
f
209.185 10.7314 mo
208.521 10.7314 207.886 10.4681 207.417 9.99859 cv
207.129 9.71168 206.919 9.36187 206.8 8.98137 cv
209.185 8.98137 li
211.569 8.98137 li
211.45 9.36196 211.239 9.71184 210.952 9.99908 cv
210.484 10.4681 209.848 10.7314 209.185 10.7314 cv
209.185 10.7314 li
211.569 7.48132 mo
209.185 7.48132 li
206.8 7.48132 li
206.919 7.10074 207.13 6.75082 207.417 6.46361 cv
207.886 5.99475 208.521 5.73141 209.185 5.73141 cv
209.848 5.73141 210.484 5.99475 210.952 6.46426 cv
211.24 6.75107 211.45 7.1008 211.569 7.48132 cv
.811765 .188235 .780392 .0627451 cmyk
f
211.569 8.98137 mo
209.185 8.98137 li
206.8 8.98137 li
206.724 8.74094 206.685 8.48829 206.685 8.23143 cv
206.685 7.9745 206.724 7.7218 206.8 7.48132 cv
209.185 7.48132 li
211.569 7.48132 li
211.645 7.72176 211.685 7.9745 211.685 8.23143 cv
211.685 8.48825 211.645 8.74094 211.569 8.98137 cv
.894118 .207843 .866667 .0745098 cmyk
f
209.185 11.7314 mo
209.185 11.7314 li
208.256 11.7314 207.366 11.3628 206.71 10.7057 cv
206.233 10.2297 205.908 9.62983 205.766 8.98137 cv
206.8 8.98137 li
206.919 9.36187 207.129 9.71168 207.417 9.99859 cv
207.886 10.4681 208.521 10.7314 209.185 10.7314 cv
209.185 10.7314 li
209.848 10.7314 210.484 10.4681 210.952 9.99908 cv
211.239 9.71184 211.45 9.36196 211.569 8.98137 cv
212.603 8.98137 li
212.461 9.62987 212.136 10.2299 211.659 10.7063 cv
211.003 11.3628 210.113 11.7314 209.185 11.7314 cv
212.603 7.48132 mo
211.569 7.48132 li
211.45 7.1008 211.24 6.75107 210.952 6.46426 cv
210.484 5.99475 209.848 5.73141 209.185 5.73141 cv
208.521 5.73141 207.886 5.99475 207.417 6.46361 cv
207.13 6.75082 206.919 7.10074 206.8 7.48132 cv
205.766 7.48132 li
205.908 6.83289 206.233 6.23291 206.71 5.75654 cv
207.366 5.10008 208.256 4.73144 209.185 4.73144 cv
210.113 4.73144 211.003 5.10008 211.659 5.7572 cv
212.136 6.23309 212.461 6.83292 212.603 7.48132 cv
.811765 .188235 .780392 .0627451 cmyk
f
212.603 8.98137 mo
211.569 8.98137 li
211.645 8.74094 211.685 8.48825 211.685 8.23143 cv
211.685 7.9745 211.645 7.72176 211.569 7.48132 cv
212.603 7.48132 li
212.657 7.7258 212.685 7.9772 212.685 8.23143 cv
212.685 8.4856 212.657 8.73693 212.603 8.98137 cv
206.8 8.98137 mo
205.766 8.98137 li
205.712 8.73695 205.685 8.4856 205.685 8.23143 cv
205.685 7.9772 205.712 7.72581 205.766 7.48132 cv
206.8 7.48132 li
206.724 7.7218 206.685 7.9745 206.685 8.23143 cv
206.685 8.48829 206.724 8.74094 206.8 8.98137 cv
.894118 .207843 .866667 .0745098 cmyk
f
238.247 3.21997 mo
238.247 11.522 li
238.247 11.914 238.275 12.18 238.331 12.306 cv
238.387 12.432 238.471 12.53 238.597 12.586 cv
238.709 12.656 238.933 12.684 239.255 12.684 cv
239.255 12.936 li
236.189 12.936 li
236.189 12.684 li
236.469 12.684 236.665 12.656 236.777 12.6 cv
236.875 12.544 236.959 12.446 237.015 12.306 cv
237.071 12.166 237.113 11.914 237.113 11.522 cv
237.113 5.83797 li
237.113 5.13797 237.085 4.70397 237.057 4.53597 cv
237.029 4.36797 236.973 4.25597 236.903 4.19997 cv
236.833 4.14397 236.749 4.11597 236.637 4.11597 cv
236.525 4.11597 236.371 4.15797 236.189 4.21397 cv
236.077 3.97597 li
237.939 3.21997 li
238.247 3.21997 li
cp
1 /0 /CSD get_res sepcs
.85 sep
f
241.579 3.21997 mo
241.775 3.21997 241.929 3.28997 242.069 3.41597 cv
242.195 3.55597 242.265 3.70997 242.265 3.90597 cv
242.265 4.10197 242.195 4.25597 242.069 4.39597 cv
241.929 4.53597 241.775 4.60597 241.579 4.60597 cv
241.383 4.60597 241.229 4.53597 241.089 4.39597 cv
240.949 4.25597 240.879 4.10197 240.879 3.90597 cv
240.879 3.70997 240.935 3.55597 241.075 3.41597 cv
241.215 3.28997 241.383 3.21997 241.579 3.21997 cv
cp
242.153 6.49597 mo
242.153 11.522 li
242.153 11.914 242.181 12.18 242.237 12.306 cv
242.293 12.446 242.377 12.544 242.489 12.6 cv
242.601 12.656 242.797 12.684 243.091 12.684 cv
243.091 12.936 li
240.053 12.936 li
240.053 12.684 li
240.361 12.684 240.557 12.656 240.669 12.6 cv
240.767 12.544 240.851 12.446 240.907 12.306 cv
240.963 12.166 241.005 11.914 241.005 11.522 cv
241.005 9.11397 li
241.005 8.44197 240.977 7.99397 240.949 7.78397 cv
240.921 7.64397 240.865 7.54597 240.795 7.48997 cv
240.725 7.43397 240.627 7.39197 240.515 7.39197 cv
240.389 7.39197 240.235 7.43397 240.053 7.50397 cv
239.955 7.25197 li
241.845 6.49597 li
242.153 6.49597 li
cp
f
243.553 6.67797 mo
246.507 6.67797 li
246.507 6.92997 li
246.311 6.92997 li
246.129 6.92997 245.989 6.97197 245.905 7.05597 cv
245.807 7.13997 245.765 7.26597 245.765 7.40597 cv
245.765 7.57397 245.807 7.75597 245.905 7.97997 cv
247.361 11.438 li
248.831 7.83997 li
248.929 7.58797 248.985 7.40597 248.985 7.26597 cv
248.929 7.09797 li
248.733 6.97197 li
248.649 6.94397 248.495 6.92997 248.271 6.92997 cv
248.271 6.67797 li
250.315 6.67797 li
250.315 6.92997 li
250.063 6.95797 249.909 6.99997 249.825 7.06997 cv
249.657 7.20997 249.503 7.44797 249.391 7.75597 cv
247.165 13.118 li
246.885 13.118 li
244.645 7.83997 li
244.547 7.60197 244.449 7.43397 244.365 7.32197 cv
244.267 7.20997 244.155 7.12597 244.015 7.04197 cv
243.931 7.01397 243.777 6.97197 243.553 6.92997 cv
243.553 6.67797 li
cp
f
251.925 9.02997 mo
251.925 9.96797 252.149 10.696 252.611 11.228 cv
253.059 11.76 253.605 12.012 254.221 12.012 cv
254.613 12.012 254.963 11.9 255.271 11.676 cv
255.579 11.452 255.831 11.074 256.041 10.514 cv
256.265 10.654 li
256.153 11.284 255.873 11.858 255.425 12.362 cv
254.963 12.866 254.389 13.118 253.689 13.118 cv
252.933 13.118 252.289 12.838 251.757 12.25 cv
251.225 11.662 250.959 10.878 250.959 9.88397 cv
250.959 8.81997 251.225 7.97997 251.785 7.37797 cv
252.331 6.78997 253.017 6.48197 253.857 6.48197 cv
254.557 6.48197 255.131 6.71997 255.579 7.18197 cv
256.027 7.64397 256.265 8.25997 256.265 9.02997 cv
251.925 9.02997 li
cp
251.925 8.63797 mo
254.823 8.63797 li
254.795 8.24597 254.753 7.95197 254.683 7.78397 cv
254.571 7.53197 254.403 7.33597 254.179 7.19597 cv
253.955 7.05597 253.717 6.97197 253.465 6.97197 cv
253.087 6.97197 252.751 7.12597 252.457 7.41997 cv
252.149 7.71397 251.981 8.11997 251.925 8.63797 cv
cp
f
265.015 12.236 mo
264.707 12.558 264.399 12.782 264.119 12.922 cv
263.825 13.048 263.517 13.118 263.181 13.118 cv
262.495 13.118 261.893 12.838 261.389 12.264 cv
260.871 11.704 260.619 10.962 260.619 10.066 cv
260.619 9.16997 260.899 8.35797 261.459 7.60197 cv
262.019 6.85997 262.761 6.48197 263.657 6.48197 cv
264.203 6.48197 264.651 6.66397 265.015 7.01397 cv
265.015 5.85197 li
265.015 5.13797 264.987 4.70397 264.959 4.53597 cv
264.931 4.36797 264.875 4.25597 264.805 4.19997 cv
264.721 4.14397 264.637 4.11597 264.539 4.11597 cv
264.413 4.11597 264.259 4.15797 264.063 4.21397 cv
263.965 3.97597 li
265.841 3.21997 li
266.149 3.21997 li
266.149 10.458 li
266.149 11.186 266.163 11.634 266.191 11.802 cv
266.219 11.97 266.275 12.082 266.359 12.138 cv
266.429 12.208 266.513 12.236 266.625 12.236 cv
266.737 12.236 266.905 12.194 267.115 12.11 cv
267.185 12.348 li
265.337 13.118 li
265.015 13.118 li
265.015 12.236 li
cp
265.015 11.76 mo
265.015 8.52597 li
264.987 8.21797 264.903 7.93797 264.763 7.68597 cv
264.623 7.43397 264.455 7.23797 264.231 7.09797 cv
264.007 6.97197 263.783 6.90197 263.573 6.90197 cv
263.167 6.90197 262.803 7.08397 262.495 7.44797 cv
262.075 7.92397 261.879 8.62397 261.879 9.51997 cv
261.879 10.444 262.075 11.158 262.467 11.648 cv
262.859 12.138 263.307 12.376 263.811 12.376 cv
264.231 12.376 264.623 12.18 265.015 11.76 cv
cp
f
271.147 12.04 mo
270.503 12.544 270.097 12.824 269.929 12.894 cv
269.677 12.992 269.425 13.048 269.145 13.048 cv
268.711 13.048 268.361 12.908 268.081 12.614 cv
267.801 12.334 267.661 11.942 267.661 11.452 cv
267.661 11.144 267.717 10.878 267.857 10.654 cv
268.039 10.346 268.361 10.066 268.823 9.78597 cv
269.285 9.51997 270.055 9.18397 271.147 8.79197 cv
271.147 8.53997 li
271.147 7.92397 271.035 7.48997 270.839 7.25197 cv
270.643 7.02797 270.349 6.90197 269.985 6.90197 cv
269.691 6.90197 269.467 6.98597 269.299 7.13997 cv
269.117 7.30797 269.033 7.47597 269.033 7.67197 cv
269.047 8.06397 li
269.047 8.28797 268.991 8.44197 268.879 8.55397 cv
268.767 8.66597 268.641 8.72197 268.473 8.72197 cv
268.305 8.72197 268.165 8.66597 268.053 8.55397 cv
267.941 8.44197 267.899 8.27397 267.899 8.06397 cv
267.899 7.67197 268.095 7.32197 268.501 6.98597 cv
268.893 6.66397 269.453 6.49597 270.181 6.49597 cv
270.741 6.49597 271.189 6.59397 271.553 6.77597 cv
271.819 6.91597 272.015 7.13997 272.141 7.43397 cv
272.225 7.62997 272.267 8.03597 272.267 8.63797 cv
272.267 10.766 li
272.267 11.368 272.267 11.732 272.295 11.858 cv
272.323 11.998 272.351 12.082 272.407 12.124 cv
272.589 12.194 li
272.785 12.152 li
272.883 12.096 273.065 11.928 273.345 11.648 cv
273.345 12.04 li
272.827 12.712 272.337 13.048 271.875 13.048 cv
271.651 13.048 271.469 12.964 271.343 12.824 cv
271.203 12.684 271.147 12.418 271.147 12.04 cv
cp
271.147 11.592 mo
271.147 9.19797 li
270.447 9.47797 269.999 9.67397 269.803 9.78597 cv
269.439 9.98197 269.187 10.192 269.033 10.416 cv
268.879 10.64 268.809 10.878 268.809 11.13 cv
268.809 11.466 268.907 11.732 269.103 11.956 cv
269.299 12.18 269.523 12.278 269.775 12.278 cv
270.111 12.278 270.573 12.054 271.147 11.592 cv
cp
f
275.627 4.61997 mo
275.627 6.67797 li
277.097 6.67797 li
277.097 7.15397 li
275.627 7.15397 li
275.627 11.214 li
275.627 11.62 275.683 11.9 275.795 12.04 cv
275.907 12.18 276.061 12.25 276.257 12.25 cv
276.397 12.25 276.551 12.208 276.691 12.11 cv
276.831 12.026 276.929 11.886 277.013 11.69 cv
277.279 11.69 li
277.111 12.138 276.887 12.474 276.607 12.698 cv
276.313 12.922 276.019 13.02 275.711 13.02 cv
275.487 13.02 275.277 12.964 275.081 12.852 cv
274.885 12.74 274.731 12.586 274.647 12.362 cv
274.549 12.152 274.507 11.816 274.507 11.368 cv
274.507 7.15397 li
273.513 7.15397 li
273.513 6.92997 li
273.765 6.83197 274.017 6.66397 274.283 6.42597 cv
274.535 6.18797 274.773 5.90797 274.983 5.57197 cv
275.081 5.40397 275.221 5.08197 275.417 4.61997 cv
275.627 4.61997 li
cp
f
281.255 12.04 mo
280.611 12.544 280.205 12.824 280.037 12.894 cv
279.785 12.992 279.533 13.048 279.253 13.048 cv
278.819 13.048 278.469 12.908 278.189 12.614 cv
277.909 12.334 277.769 11.942 277.769 11.452 cv
277.769 11.144 277.825 10.878 277.965 10.654 cv
278.147 10.346 278.469 10.066 278.931 9.78597 cv
279.393 9.51997 280.163 9.18397 281.255 8.79197 cv
281.255 8.53997 li
281.255 7.92397 281.143 7.48997 280.947 7.25197 cv
280.751 7.02797 280.457 6.90197 280.093 6.90197 cv
279.799 6.90197 279.575 6.98597 279.407 7.13997 cv
279.225 7.30797 279.141 7.47597 279.141 7.67197 cv
279.155 8.06397 li
279.155 8.28797 279.099 8.44197 278.987 8.55397 cv
278.875 8.66597 278.749 8.72197 278.581 8.72197 cv
278.413 8.72197 278.273 8.66597 278.161 8.55397 cv
278.049 8.44197 278.007 8.27397 278.007 8.06397 cv
278.007 7.67197 278.203 7.32197 278.609 6.98597 cv
279.001 6.66397 279.561 6.49597 280.289 6.49597 cv
280.849 6.49597 281.297 6.59397 281.661 6.77597 cv
281.927 6.91597 282.123 7.13997 282.249 7.43397 cv
282.333 7.62997 282.375 8.03597 282.375 8.63797 cv
282.375 10.766 li
282.375 11.368 282.375 11.732 282.403 11.858 cv
282.431 11.998 282.459 12.082 282.515 12.124 cv
282.697 12.194 li
282.893 12.152 li
282.991 12.096 283.173 11.928 283.453 11.648 cv
283.453 12.04 li
282.935 12.712 282.445 13.048 281.983 13.048 cv
281.759 13.048 281.577 12.964 281.451 12.824 cv
281.311 12.684 281.255 12.418 281.255 12.04 cv
cp
281.255 11.592 mo
281.255 9.19797 li
280.555 9.47797 280.107 9.67397 279.911 9.78597 cv
279.547 9.98197 279.295 10.192 279.141 10.416 cv
278.987 10.64 278.917 10.878 278.917 11.13 cv
278.917 11.466 279.015 11.732 279.211 11.956 cv
279.407 12.18 279.631 12.278 279.883 12.278 cv
280.219 12.278 280.681 12.054 281.255 11.592 cv
cp
f
287.961 6.49597 mo
287.961 8.62397 li
287.737 8.62397 li
287.569 7.95197 287.345 7.50397 287.079 7.25197 cv
286.799 7.01397 286.463 6.88797 286.043 6.88797 cv
285.707 6.88797 285.455 6.97197 285.259 7.13997 cv
285.063 7.30797 284.965 7.50397 284.965 7.69997 cv
284.965 7.96597 285.035 8.18997 285.189 8.35797 cv
285.329 8.55397 285.609 8.74997 286.057 8.95997 cv
287.051 9.43597 li
287.975 9.89797 288.437 10.5 288.437 11.228 cv
288.437 11.802 288.213 12.264 287.793 12.6 cv
287.359 12.936 286.883 13.118 286.351 13.118 cv
285.959 13.118 285.525 13.048 285.035 12.922 cv
284.881 12.88 284.755 12.852 284.657 12.852 cv
284.545 12.852 284.475 12.908 284.419 13.02 cv
284.195 13.02 li
284.195 10.794 li
284.419 10.794 li
284.545 11.438 284.783 11.928 285.147 12.25 cv
285.511 12.572 285.917 12.726 286.365 12.726 cv
286.673 12.726 286.925 12.642 287.121 12.446 cv
287.317 12.264 287.429 12.04 287.429 11.774 cv
287.429 11.466 287.317 11.214 287.093 10.99 cv
286.869 10.78 286.421 10.514 285.763 10.178 cv
285.105 9.85597 284.671 9.56197 284.475 9.28197 cv
284.265 9.02997 284.167 8.69397 284.167 8.30197 cv
284.167 7.79797 284.335 7.36397 284.699 7.01397 cv
285.049 6.67797 285.511 6.49597 286.071 6.49597 cv
286.309 6.49597 286.603 6.55197 286.967 6.64997 cv
287.191 6.71997 287.345 6.74797 287.429 6.74797 cv
287.597 6.70597 li
287.625 6.67797 287.681 6.60797 287.737 6.49597 cv
287.961 6.49597 li
cp
f
290.411 9.02997 mo
290.411 9.96797 290.635 10.696 291.097 11.228 cv
291.545 11.76 292.091 12.012 292.707 12.012 cv
293.099 12.012 293.449 11.9 293.757 11.676 cv
294.065 11.452 294.317 11.074 294.527 10.514 cv
294.751 10.654 li
294.639 11.284 294.359 11.858 293.911 12.362 cv
293.449 12.866 292.875 13.118 292.175 13.118 cv
291.419 13.118 290.775 12.838 290.243 12.25 cv
289.711 11.662 289.445 10.878 289.445 9.88397 cv
289.445 8.81997 289.711 7.97997 290.271 7.37797 cv
290.817 6.78997 291.503 6.48197 292.343 6.48197 cv
293.043 6.48197 293.617 6.71997 294.065 7.18197 cv
294.513 7.64397 294.751 8.25997 294.751 9.02997 cv
290.411 9.02997 li
cp
290.411 8.63797 mo
293.309 8.63797 li
293.281 8.24597 293.239 7.95197 293.169 7.78397 cv
293.057 7.53197 292.889 7.33597 292.665 7.19597 cv
292.441 7.05597 292.203 6.97197 291.951 6.97197 cv
291.573 6.97197 291.237 7.12597 290.943 7.41997 cv
290.635 7.71397 290.467 8.11997 290.411 8.63797 cv
cp
f
297.397 4.61997 mo
297.397 6.67797 li
298.867 6.67797 li
298.867 7.15397 li
297.397 7.15397 li
297.397 11.214 li
297.397 11.62 297.453 11.9 297.565 12.04 cv
297.677 12.18 297.831 12.25 298.027 12.25 cv
298.167 12.25 298.321 12.208 298.461 12.11 cv
298.601 12.026 298.699 11.886 298.783 11.69 cv
299.049 11.69 li
298.881 12.138 298.657 12.474 298.377 12.698 cv
298.083 12.922 297.789 13.02 297.481 13.02 cv
297.257 13.02 297.047 12.964 296.851 12.852 cv
296.655 12.74 296.501 12.586 296.417 12.362 cv
296.319 12.152 296.277 11.816 296.277 11.368 cv
296.277 7.15397 li
295.283 7.15397 li
295.283 6.92997 li
295.535 6.83197 295.787 6.66397 296.053 6.42597 cv
296.305 6.18797 296.543 5.90797 296.753 5.57197 cv
296.851 5.40397 296.991 5.08197 297.187 4.61997 cv
297.397 4.61997 li
cp
f
1.5 lw
1 lc
1 lj
323.081 8.23138 mo
335.081 8.23138 li
347.081 8.23138 li
0 .550439 .957794 0 cmyk
@
335.081 11.2314 mo
335.877 11.2314 336.64 10.9154 337.202 10.3524 cv
337.765 9.79037 338.081 9.02737 338.081 8.23138 cv
338.081 7.43539 337.765 6.67239 337.202 6.11038 cv
336.64 5.54739 335.877 5.23138 335.081 5.23138 cv
334.285 5.23138 333.522 5.54739 332.96 6.11038 cv
332.397 6.67239 332.081 7.43539 332.081 8.23138 cv
332.081 9.02737 332.397 9.79037 332.96 10.3524 cv
333.522 10.9154 334.285 11.2314 335.081 11.2314 cv
cp
f
1 lw
0 lc
335.081 11.2314 mo
335.877 11.2314 336.64 10.9154 337.202 10.3524 cv
337.765 9.79037 338.081 9.02737 338.081 8.23138 cv
338.081 7.43539 337.765 6.67239 337.202 6.11038 cv
336.64 5.54739 335.877 5.23138 335.081 5.23138 cv
334.285 5.23138 333.522 5.54739 332.96 6.11038 cv
332.397 6.67239 332.081 7.43539 332.081 8.23138 cv
332.081 9.02737 332.397 9.79037 332.96 10.3524 cv
333.522 10.9154 334.285 11.2314 335.081 11.2314 cv
cp
@
140.309 34.247 mo
140.309 34.535 li
139.509 34.135 138.853 33.671 138.341 33.143 cv
137.573 32.375 136.997 31.495 136.597 30.487 cv
136.181 29.463 135.989 28.407 135.989 27.287 cv
135.989 25.687 136.373 24.215 137.173 22.871 cv
137.973 21.543 139.013 20.599 140.309 20.023 cv
140.309 20.343 li
139.653 20.695 139.125 21.191 138.709 21.799 cv
138.293 22.423 137.989 23.207 137.797 24.135 cv
137.589 25.079 137.493 26.071 137.493 27.095 cv
137.493 28.215 137.573 29.223 137.749 30.119 cv
137.877 30.839 138.053 31.399 138.245 31.831 cv
138.437 32.263 138.693 32.679 139.013 33.095 cv
139.333 33.495 139.765 33.879 140.309 34.247 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
147.989 27.575 mo
143.877 27.575 li
143.157 29.255 li
142.981 29.671 142.901 29.975 142.901 30.167 cv
142.901 30.343 142.965 30.487 143.125 30.615 cv
143.269 30.743 143.605 30.807 144.117 30.839 cv
144.117 31.127 li
140.789 31.127 li
140.789 30.839 li
141.221 30.775 141.509 30.663 141.653 30.535 cv
141.909 30.279 142.197 29.783 142.533 29.015 cv
146.261 20.295 li
146.533 20.295 li
150.213 29.111 li
150.501 29.815 150.773 30.279 151.013 30.487 cv
151.253 30.695 151.589 30.807 152.037 30.839 cv
152.037 31.127 li
147.861 31.127 li
147.861 30.839 li
148.277 30.823 148.549 30.759 148.709 30.631 cv
148.853 30.519 148.933 30.375 148.933 30.183 cv
148.933 29.959 148.821 29.607 148.629 29.111 cv
147.989 27.575 li
cp
147.765 26.999 mo
145.973 22.727 li
144.117 26.999 li
147.765 26.999 li
cp
f
152.565 20.343 mo
152.565 20.023 li
153.365 20.407 154.021 20.871 154.549 21.399 cv
155.285 22.167 155.861 23.047 156.277 24.071 cv
156.677 25.095 156.885 26.167 156.885 27.271 cv
156.885 28.903 156.485 30.375 155.685 31.687 cv
154.885 32.999 153.845 33.959 152.565 34.535 cv
152.565 34.247 li
153.205 33.879 153.733 33.383 154.149 32.775 cv
154.565 32.167 154.869 31.383 155.077 30.455 cv
155.269 29.527 155.381 28.535 155.381 27.511 cv
155.381 26.407 155.285 25.399 155.125 24.471 cv
154.981 23.767 154.821 23.191 154.629 22.759 cv
154.437 22.327 154.165 21.911 153.845 21.495 cv
153.525 21.095 153.093 20.711 152.565 20.343 cv
cp
f
164.82 21.111 mo
164.82 25.271 li
166.74 25.271 li
167.188 25.271 167.508 25.175 167.716 24.983 cv
167.908 24.791 168.052 24.407 168.132 23.815 cv
168.421 23.815 li
168.421 27.415 li
168.132 27.415 li
168.117 26.999 168.052 26.695 167.956 26.503 cv
167.861 26.311 167.716 26.167 167.54 26.071 cv
167.348 25.975 167.092 25.927 166.74 25.927 cv
164.82 25.927 li
164.82 29.255 li
164.82 29.799 164.852 30.151 164.917 30.311 cv
164.964 30.439 165.076 30.551 165.236 30.647 cv
165.46 30.775 165.701 30.839 165.956 30.839 cv
166.34 30.839 li
166.34 31.127 li
161.796 31.127 li
161.796 30.839 li
162.18 30.839 li
162.613 30.839 162.932 30.711 163.124 30.455 cv
163.253 30.295 163.316 29.895 163.316 29.255 cv
163.316 22.407 li
163.316 21.879 163.268 21.527 163.204 21.351 cv
163.156 21.223 163.044 21.111 162.884 21.015 cv
162.66 20.887 162.421 20.823 162.18 20.823 cv
161.796 20.823 li
161.796 20.535 li
169.684 20.535 li
169.781 22.855 li
169.508 22.855 li
169.365 22.375 169.204 22.007 169.029 21.783 cv
168.852 21.559 168.628 21.383 168.372 21.271 cv
168.1 21.175 167.701 21.111 167.156 21.111 cv
164.82 21.111 li
cp
f
172.308 21.575 mo
174.884 20.311 li
175.14 20.311 li
175.14 29.255 li
175.14 29.863 175.156 30.231 175.22 30.375 cv
175.268 30.519 175.364 30.631 175.524 30.711 cv
175.684 30.791 176.004 30.839 176.484 30.839 cv
176.484 31.127 li
172.5 31.127 li
172.5 30.839 li
172.996 30.839 173.316 30.791 173.46 30.711 cv
173.604 30.647 173.701 30.535 173.764 30.407 cv
173.828 30.279 173.86 29.895 173.86 29.255 cv
173.86 23.543 li
173.86 22.775 173.828 22.279 173.78 22.055 cv
173.748 21.895 173.684 21.767 173.588 21.687 cv
173.492 21.623 173.364 21.575 173.236 21.575 cv
173.044 21.575 172.772 21.655 172.436 21.815 cv
172.308 21.575 li
cp
f
189.764 20.295 mo
189.764 23.959 li
189.476 23.959 li
189.38 23.255 189.22 22.695 188.98 22.279 cv
188.724 21.863 188.388 21.543 187.94 21.287 cv
187.492 21.047 187.028 20.919 186.548 20.919 cv
186.004 20.919 185.556 21.095 185.204 21.415 cv
184.852 21.751 184.676 22.119 184.676 22.535 cv
184.676 22.871 184.788 23.175 185.012 23.431 cv
185.332 23.815 186.1 24.343 187.316 24.983 cv
188.308 25.527 188.98 25.927 189.348 26.215 cv
189.701 26.503 189.988 26.839 190.18 27.223 cv
190.372 27.607 190.468 28.007 190.468 28.423 cv
190.468 29.223 190.148 29.911 189.54 30.487 cv
188.916 31.063 188.116 31.351 187.14 31.351 cv
186.82 31.351 186.532 31.319 186.276 31.287 cv
186.116 31.255 185.78 31.159 185.268 31.015 cv
184.757 30.855 184.42 30.775 184.292 30.775 cv
184.164 30.775 184.052 30.823 183.988 30.887 cv
183.908 30.967 183.86 31.127 183.828 31.351 cv
183.54 31.351 li
183.54 27.735 li
183.828 27.735 li
183.956 28.503 184.148 29.063 184.372 29.447 cv
184.596 29.831 184.948 30.135 185.428 30.391 cv
185.892 30.647 186.404 30.759 186.98 30.759 cv
187.62 30.759 188.132 30.599 188.516 30.247 cv
188.9 29.911 189.092 29.511 189.092 29.031 cv
189.092 28.775 189.012 28.503 188.868 28.231 cv
188.724 27.975 188.5 27.719 188.196 27.495 cv
187.988 27.335 187.428 27.015 186.532 26.503 cv
185.62 25.991 184.98 25.591 184.596 25.287 cv
184.212 24.983 183.924 24.647 183.732 24.279 cv
183.54 23.927 183.444 23.527 183.444 23.079 cv
183.444 22.327 183.732 21.671 184.308 21.127 cv
184.884 20.583 185.636 20.295 186.532 20.295 cv
187.092 20.295 187.684 20.439 188.324 20.711 cv
188.612 20.839 188.82 20.903 188.948 20.903 cv
189.076 20.903 189.173 20.871 189.268 20.791 cv
189.364 20.711 189.428 20.551 189.476 20.295 cv
189.764 20.295 li
cp
f
197.908 28.407 mo
197.716 29.351 197.332 30.071 196.772 30.583 cv
196.212 31.095 195.588 31.335 194.916 31.335 cv
194.084 31.335 193.38 30.999 192.772 30.327 cv
192.164 29.655 191.876 28.727 191.876 27.559 cv
191.876 26.439 192.212 25.527 192.884 24.823 cv
193.556 24.119 194.356 23.767 195.3 23.767 cv
195.988 23.767 196.564 23.959 197.012 24.327 cv
197.46 24.695 197.7 25.079 197.7 25.479 cv
197.7 25.687 197.636 25.847 197.508 25.959 cv
197.38 26.087 197.204 26.135 196.98 26.135 cv
196.66 26.135 196.436 26.039 196.292 25.847 cv
196.196 25.751 196.132 25.543 196.1 25.223 cv
196.068 24.919 195.972 24.679 195.796 24.519 cv
195.604 24.359 195.348 24.279 195.028 24.279 cv
194.516 24.279 194.1 24.471 193.78 24.855 cv
193.348 25.367 193.14 26.055 193.14 26.887 cv
193.14 27.751 193.348 28.503 193.764 29.143 cv
194.18 29.799 194.756 30.119 195.476 30.119 cv
195.988 30.119 196.436 29.959 196.852 29.607 cv
197.14 29.367 197.412 28.935 197.684 28.295 cv
197.908 28.407 li
cp
f
202.436 23.767 mo
203.524 23.767 204.388 24.183 205.044 24.999 cv
205.589 25.703 205.876 26.519 205.876 27.415 cv
205.876 28.055 205.716 28.711 205.412 29.367 cv
205.108 30.023 204.692 30.519 204.148 30.839 cv
203.604 31.159 203.012 31.335 202.356 31.335 cv
201.268 31.335 200.42 30.919 199.78 30.055 cv
199.236 29.335 198.98 28.519 198.98 27.623 cv
198.98 26.967 199.14 26.311 199.46 25.671 cv
199.78 25.031 200.212 24.551 200.74 24.231 cv
201.268 23.927 201.828 23.767 202.436 23.767 cv
cp
202.196 24.263 mo
201.908 24.263 201.636 24.359 201.364 24.519 cv
201.076 24.679 200.852 24.967 200.692 25.383 cv
200.516 25.799 200.436 26.327 200.436 26.967 cv
200.436 28.007 200.628 28.903 201.044 29.655 cv
201.46 30.423 202.004 30.791 202.692 30.791 cv
203.188 30.791 203.604 30.583 203.94 30.167 cv
204.26 29.751 204.436 29.047 204.436 28.023 cv
204.436 26.759 204.148 25.751 203.604 25.015 cv
203.236 24.519 202.772 24.263 202.196 24.263 cv
cp
f
209.028 23.767 mo
209.028 25.367 li
209.62 24.311 210.229 23.767 210.868 23.767 cv
211.156 23.767 211.38 23.863 211.572 24.023 cv
211.764 24.199 211.86 24.407 211.86 24.631 cv
211.86 24.839 211.78 25.015 211.652 25.143 cv
211.524 25.287 211.364 25.351 211.172 25.351 cv
210.98 25.351 210.788 25.271 210.564 25.079 cv
210.34 24.903 210.164 24.807 210.068 24.807 cv
209.972 24.807 209.86 24.871 209.764 24.967 cv
209.524 25.191 209.285 25.543 209.028 26.023 cv
209.028 29.463 li
209.028 29.863 209.076 30.167 209.172 30.359 cv
209.236 30.503 209.364 30.615 209.54 30.711 cv
209.701 30.807 209.956 30.839 210.276 30.839 cv
210.276 31.127 li
206.612 31.127 li
206.612 30.839 li
206.964 30.839 207.236 30.791 207.428 30.679 cv
207.556 30.599 207.636 30.471 207.701 30.279 cv
207.732 30.183 207.748 29.927 207.748 29.511 cv
207.748 26.743 li
207.748 25.911 207.716 25.415 207.684 25.255 cv
207.652 25.095 207.588 24.983 207.492 24.903 cv
207.396 24.839 207.285 24.791 207.156 24.791 cv
206.996 24.791 206.804 24.839 206.612 24.919 cv
206.532 24.631 li
208.708 23.767 li
209.028 23.767 li
cp
f
213.46 26.663 mo
213.46 27.735 213.716 28.567 214.244 29.175 cv
214.756 29.783 215.38 30.071 216.084 30.071 cv
216.532 30.071 216.932 29.943 217.284 29.687 cv
217.636 29.431 217.924 28.999 218.164 28.359 cv
218.42 28.519 li
218.292 29.239 217.972 29.895 217.46 30.471 cv
216.932 31.047 216.276 31.335 215.476 31.335 cv
214.612 31.335 213.876 31.015 213.268 30.343 cv
212.66 29.671 212.356 28.775 212.356 27.639 cv
212.356 26.423 212.66 25.463 213.3 24.775 cv
213.924 24.103 214.708 23.751 215.668 23.751 cv
216.468 23.751 217.124 24.023 217.636 24.551 cv
218.148 25.079 218.42 25.783 218.42 26.663 cv
213.46 26.663 li
cp
213.46 26.215 mo
216.772 26.215 li
216.74 25.767 216.692 25.431 216.612 25.239 cv
216.484 24.951 216.292 24.727 216.036 24.567 cv
215.78 24.407 215.508 24.311 215.22 24.311 cv
214.788 24.311 214.404 24.487 214.068 24.823 cv
213.716 25.159 213.524 25.623 213.46 26.215 cv
cp
f
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
1 /0 /CSD get_res sepcs
0 sep
f
gsave
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
clp
332.371 160.986 mo
332.371 37.586 li
332.371 37.3651 332.55 37.186 332.771 37.186 cv
332.992 37.186 333.171 37.3651 333.171 37.586 cv
333.171 160.986 li
333.171 161.207 332.992 161.386 332.771 161.386 cv
332.55 161.386 332.371 161.207 332.371 160.986 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
gsave
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
clp
417.173 160.986 mo
417.173 37.586 li
417.173 37.3651 417.352 37.186 417.573 37.186 cv
417.794 37.186 417.973 37.3651 417.973 37.586 cv
417.973 160.986 li
417.973 161.207 417.794 161.386 417.573 161.386 cv
417.352 161.386 417.173 161.207 417.173 160.986 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
gsave
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
clp
501.975 160.986 mo
501.975 37.586 li
501.975 37.3651 502.154 37.186 502.375 37.186 cv
502.596 37.186 502.775 37.3651 502.775 37.586 cv
502.775 160.986 li
502.775 161.207 502.596 161.386 502.375 161.386 cv
502.154 161.386 501.975 161.207 501.975 160.986 cv
1 /0 /CSD get_res sepcs
.2 sep
f
586.777 160.986 mo
586.777 37.586 li
586.777 37.3651 586.957 37.186 587.177 37.186 cv
587.398 37.186 587.577 37.3651 587.577 37.586 cv
587.578 160.986 li
587.577 161.207 587.398 161.386 587.177 161.386 cv
586.957 161.386 586.777 161.207 586.777 160.986 cv
f
grestore
gsave
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
clp
.8 lw
1 lc
320.051 160.986 mo
599.898 160.986 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
gsave
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
clp
.8 lw
1 lc
320.051 136.306 mo
599.898 136.306 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
gsave
320.051 160.986 mo
599.898 160.986 li
599.898 37.586 li
320.051 37.586 li
320.051 160.986 li
clp
.8 lw
1 lc
320.051 111.626 mo
599.898 111.626 li
1 /0 /CSD get_res sepcs
.2 sep
@
320.051 86.946 mo
599.898 86.946 li
@
320.051 61.866 mo
599.898 61.866 li
600.119 61.866 600.298 62.045 600.298 62.266 cv
600.298 62.487 600.119 62.666 599.898 62.666 cv
320.051 62.666 li
319.83 62.666 319.651 62.487 319.651 62.266 cv
319.651 62.045 319.83 61.866 320.051 61.866 cv
f
320.051 37.586 mo
599.898 37.586 li
@
grestore
583.716 75.3811 mo
550.467 62.666 li
554.667 62.666 li
584.252 73.98 li
583.975 74.402 583.792 74.8801 583.716 75.3811 cv
.811765 .192157 .784314 .0666667 cmyk
f
421.06 69.7333 mo
421.015 69.227 420.861 68.7389 420.611 68.302 cv
438.601 62.666 li
443.618 62.666 li
421.06 69.7333 li
414.088 69.7259 mo
391.719 62.666 li
396.703 62.666 li
414.539 68.2956 li
414.288 68.732 414.133 69.2197 414.088 69.7259 cv
f
552.575 61.866 mo
548.375 61.866 li
505.301 45.3934 li
505.578 44.9714 505.761 44.4933 505.836 43.9923 cv
552.575 61.866 li
446.172 61.866 mo
441.154 61.866 li
498.889 43.778 li
498.933 44.2843 499.087 44.7726 499.337 45.2095 cv
446.172 61.866 li
f
394.168 61.866 mo
389.184 61.866 li
335.806 45.0188 li
336.057 44.5823 336.212 44.0946 336.257 43.5884 cv
394.168 61.866 li
f
554.667 62.666 mo
550.467 62.666 li
548.375 61.866 li
552.575 61.866 li
554.667 62.666 li
443.618 62.666 mo
438.601 62.666 li
441.154 61.866 li
446.172 61.866 li
443.618 62.666 li
396.703 62.666 mo
391.719 62.666 li
389.184 61.866 li
394.168 61.866 li
396.703 62.666 li
.811765 .192157 .784314 .0862745 cmyk
f
332.371 45.7426 mo
331.856 45.6592 331.377 45.4161 331.004 45.0425 cv
331.004 45.0419 li
330.535 44.5738 330.271 43.9382 330.271 43.2747 cv
330.271 42.6112 330.535 41.9757 331.004 41.5075 cv
331.004 41.5069 li
331.377 41.1334 331.856 40.8903 332.371 40.8069 cv
332.371 42.6402 li
332.226 42.7315 332.112 42.8728 332.056 43.049 cv
331.951 43.3812 332.09 43.7321 332.371 43.9093 cv
332.371 45.7426 li
333.171 45.7425 mo
333.171 44.1873 li
334.82 44.7076 li
334.737 44.8262 334.643 44.9382 334.539 45.0419 cv
334.539 45.0425 li
334.166 45.4161 333.686 45.6591 333.171 45.7425 cv
335.271 43.2772 mo
333.171 42.6144 li
333.171 40.8069 li
333.686 40.8903 334.166 41.1334 334.539 41.5069 cv
334.539 41.5075 li
335.008 41.9757 335.271 42.6112 335.271 43.2747 cv
335.271 43.2756 335.271 43.2764 335.271 43.2772 cv
.811765 .188235 .780392 .0627451 cmyk
f
332.771 45.7747 mo
332.637 45.7747 332.503 45.7638 332.371 45.7426 cv
332.371 43.9093 li
332.425 43.9427 332.483 43.97 332.546 43.9898 cv
333.171 44.1873 li
333.171 45.7425 li
333.04 45.7638 332.906 45.7747 332.771 45.7747 cv
332.771 45.7747 li
332.371 42.6402 mo
332.371 40.8069 li
332.503 40.7856 332.637 40.7747 332.771 40.7747 cv
332.906 40.7747 333.04 40.7856 333.171 40.8069 cv
333.171 42.6144 li
332.997 42.5594 li
332.922 42.5357 332.846 42.5244 332.771 42.5244 cv
332.628 42.5244 332.49 42.5657 332.371 42.6402 cv
.811765 .188235 .780392 .0823529 cmyk
f
334.82 44.7076 mo
333.171 44.1873 li
333.171 42.6144 li
335.271 43.2772 li
335.271 43.7928 335.111 44.2915 334.82 44.7076 cv
332.371 43.9093 mo
332.09 43.7321 331.951 43.3812 332.056 43.049 cv
332.112 42.8728 332.226 42.7315 332.371 42.6402 cv
332.371 43.9093 li
.894118 .207843 .866667 .0745098 cmyk
f
333.171 44.1873 mo
332.546 43.9898 li
332.483 43.97 332.425 43.9427 332.371 43.9093 cv
332.371 42.6402 li
332.49 42.5657 332.628 42.5244 332.771 42.5244 cv
332.846 42.5244 332.922 42.5357 332.997 42.5594 cv
333.171 42.6144 li
333.171 44.1873 li
.894118 .207843 .866667 .0705882 cmyk
f
332.371 46.7518 mo
331.59 46.662 330.858 46.3111 330.297 45.7493 cv
329.64 45.0933 329.271 44.203 329.271 43.2747 cv
329.271 42.3464 329.64 41.4561 330.297 40.8002 cv
330.858 40.2383 331.59 39.8874 332.371 39.7976 cv
332.371 40.8069 li
331.856 40.8903 331.377 41.1334 331.004 41.5069 cv
331.004 41.5075 li
330.535 41.9757 330.271 42.6112 330.271 43.2747 cv
330.271 43.9382 330.535 44.5738 331.004 45.0419 cv
331.004 45.0425 li
331.377 45.4161 331.856 45.6592 332.371 45.7426 cv
332.371 46.7518 li
333.171 46.7518 mo
333.171 45.7425 li
333.686 45.6591 334.166 45.4161 334.539 45.0425 cv
334.539 45.0419 li
334.643 44.9382 334.737 44.8262 334.82 44.7076 cv
335.806 45.0188 li
335.654 45.2837 335.466 45.5296 335.246 45.7493 cv
334.685 46.3111 333.953 46.662 333.171 46.7518 cv
336.257 43.5884 mo
335.271 43.2772 li
335.271 43.2764 335.271 43.2756 335.271 43.2747 cv
335.271 42.6112 335.008 41.9757 334.539 41.5075 cv
334.539 41.5069 li
334.166 41.1334 333.686 40.8903 333.171 40.8069 cv
333.171 39.7976 li
333.953 39.8874 334.685 40.2383 335.246 40.8002 cv
335.903 41.4561 336.271 42.3464 336.271 43.2747 cv
336.271 43.3798 336.267 43.4845 336.257 43.5884 cv
.811765 .188235 .780392 .0627451 cmyk
f
332.771 46.7747 mo
332.771 46.7747 li
332.637 46.7747 332.504 46.767 332.371 46.7518 cv
332.371 45.7426 li
332.503 45.7638 332.637 45.7747 332.771 45.7747 cv
332.771 45.7747 li
332.906 45.7747 333.04 45.7638 333.171 45.7425 cv
333.171 46.7518 li
333.039 46.767 332.906 46.7747 332.771 46.7747 cv
333.171 40.8069 mo
333.04 40.7856 332.906 40.7747 332.771 40.7747 cv
332.637 40.7747 332.503 40.7856 332.371 40.8069 cv
332.371 39.7976 li
332.504 39.7825 332.637 39.7747 332.771 39.7747 cv
332.906 39.7747 333.039 39.7825 333.171 39.7976 cv
333.171 40.8069 li
.811765 .188235 .780392 .0823529 cmyk
f
335.806 45.0188 mo
334.82 44.7076 li
335.111 44.2915 335.271 43.7928 335.271 43.2772 cv
336.257 43.5884 li
336.212 44.0946 336.057 44.5823 335.806 45.0188 cv
.894118 .207843 .866667 .0745098 cmyk
f
335.246 45.7496 mo
335.246 45.7495 335.246 45.7494 335.246 45.7493 cv
335.246 45.7491 335.246 45.7491 335.246 45.7489 cv
335.246 45.7496 li
330.297 45.7496 mo
330.297 45.7489 li
330.297 45.7491 330.297 45.7491 330.297 45.7493 cv
330.297 45.7494 330.297 45.7495 330.297 45.7496 cv
335.246 40.8005 mo
335.246 40.8004 335.246 40.8003 335.246 40.8002 cv
335.246 40.8 335.246 40.7999 335.246 40.7998 cv
335.246 40.8005 li
330.297 40.8005 mo
330.297 40.7998 li
330.297 40.7999 330.297 40.8 330.297 40.8002 cv
330.297 40.8003 330.297 40.8004 330.297 40.8005 cv
.811765 .188235 .780392 .0627451 cmyk
f
417.973 72.5081 mo
417.973 70.7003 li
420.073 70.0424 li
420.073 70.7051 419.81 71.3397 419.341 71.8074 cv
419.341 71.8079 li
418.968 72.1815 418.488 72.4247 417.973 72.5081 cv
417.173 72.5081 mo
416.658 72.4247 416.179 72.1815 415.806 71.8079 cv
415.806 71.8074 li
415.337 71.3392 415.073 70.7038 415.073 70.0402 cv
415.073 70.0392 415.073 70.0381 415.073 70.037 cv
417.173 70.6998 li
417.173 72.5081 li
417.973 69.1284 mo
417.973 67.5724 li
418.488 67.6558 418.968 67.8989 419.341 68.2724 cv
419.341 68.2731 li
419.446 68.3779 419.541 68.4911 419.625 68.6111 cv
417.973 69.1284 li
417.173 69.127 mo
415.525 68.6068 li
415.608 68.4884 415.702 68.3766 415.806 68.2731 cv
415.806 68.2724 li
416.179 67.8989 416.658 67.6558 417.173 67.5724 cv
417.173 69.127 li
f
417.573 72.5402 mo
417.439 72.5402 417.305 72.5294 417.173 72.5081 cv
417.173 70.6998 li
417.348 70.7549 li
417.421 70.778 417.497 70.7896 417.573 70.7896 cv
417.649 70.7896 417.725 70.7782 417.798 70.7553 cv
417.973 70.7003 li
417.973 72.5081 li
417.842 72.5294 417.708 72.5402 417.573 72.5402 cv
417.573 72.5402 li
417.574 69.2535 mo
417.173 69.127 li
417.173 67.5724 li
417.305 67.5511 417.439 67.5402 417.573 67.5402 cv
417.708 67.5402 417.842 67.5511 417.973 67.5724 cv
417.973 69.1284 li
417.574 69.2535 li
.811765 .188235 .780392 .0823529 cmyk
f
417.973 70.7003 mo
417.973 69.1284 li
419.625 68.6111 li
419.915 69.0271 420.073 69.5253 420.073 70.0402 cv
420.073 70.041 420.073 70.0416 420.073 70.0424 cv
417.973 70.7003 li
417.173 70.6998 mo
415.073 70.037 li
415.074 69.5214 415.234 69.0229 415.525 68.6068 cv
417.173 69.127 li
417.173 70.6998 li
.894118 .207843 .866667 .0745098 cmyk
f
417.573 70.7896 mo
417.497 70.7896 417.421 70.778 417.348 70.7549 cv
417.173 70.6998 li
417.173 69.127 li
417.574 69.2535 li
417.973 69.1284 li
417.973 70.7003 li
417.798 70.7553 li
417.725 70.7782 417.649 70.7896 417.573 70.7896 cv
.894118 .207843 .866667 .0705882 cmyk
f
417.173 73.5173 mo
416.392 73.4275 415.66 73.0766 415.099 72.5148 cv
414.442 71.8588 414.073 70.9686 414.073 70.0402 cv
414.073 69.9349 414.078 69.83 414.088 69.7259 cv
415.073 70.037 li
415.073 70.0381 415.073 70.0392 415.073 70.0402 cv
415.073 70.7038 415.337 71.3392 415.806 71.8074 cv
415.806 71.8079 li
416.179 72.1815 416.658 72.4247 417.173 72.5081 cv
417.173 73.5173 li
417.973 73.5173 mo
417.973 72.5081 li
418.488 72.4247 418.968 72.1815 419.341 71.8079 cv
419.341 71.8074 li
419.81 71.3397 420.073 70.7051 420.073 70.0424 cv
421.06 69.7333 li
421.069 69.8349 421.073 69.9374 421.073 70.0402 cv
421.073 70.9686 420.705 71.8588 420.048 72.5148 cv
419.487 73.0766 418.755 73.4275 417.973 73.5173 cv
419.625 68.6111 mo
419.541 68.4911 419.446 68.3779 419.341 68.2731 cv
419.341 68.2724 li
418.968 67.8989 418.488 67.6558 417.973 67.5724 cv
417.973 66.5632 li
418.755 66.6529 419.487 67.0038 420.048 67.5657 cv
420.27 67.787 420.458 68.0349 420.611 68.302 cv
419.625 68.6111 li
415.525 68.6068 mo
414.539 68.2956 li
414.691 68.031 414.879 67.7852 415.099 67.5657 cv
415.66 67.0038 416.392 66.6529 417.173 66.5632 cv
417.173 67.5724 li
416.658 67.6558 416.179 67.8989 415.806 68.2724 cv
415.806 68.2731 li
415.702 68.3766 415.608 68.4884 415.525 68.6068 cv
.811765 .188235 .780392 .0627451 cmyk
f
417.573 73.5402 mo
417.573 73.5402 li
417.439 73.5402 417.306 73.5325 417.173 73.5173 cv
417.173 72.5081 li
417.305 72.5294 417.439 72.5402 417.573 72.5402 cv
417.573 72.5402 li
417.708 72.5402 417.842 72.5294 417.973 72.5081 cv
417.973 73.5173 li
417.841 73.5325 417.708 73.5402 417.573 73.5402 cv
417.173 67.5724 mo
417.173 66.5632 li
417.306 66.548 417.439 66.5402 417.573 66.5402 cv
417.708 66.5402 417.841 66.548 417.973 66.5632 cv
417.973 67.5724 li
417.842 67.5511 417.708 67.5402 417.573 67.5402 cv
417.439 67.5402 417.305 67.5511 417.173 67.5724 cv
.811765 .188235 .780392 .0823529 cmyk
f
420.073 70.0424 mo
420.073 70.0416 420.073 70.041 420.073 70.0402 cv
420.073 69.5253 419.915 69.0271 419.625 68.6111 cv
420.611 68.302 li
420.861 68.7389 421.015 69.227 421.06 69.7333 cv
420.073 70.0424 li
415.073 70.037 mo
414.088 69.7259 li
414.133 69.2197 414.288 68.732 414.539 68.2956 cv
415.525 68.6068 li
415.234 69.0229 415.074 69.5214 415.073 70.037 cv
.894118 .207843 .866667 .0745098 cmyk
f
420.048 72.5151 mo
420.048 72.515 420.048 72.5149 420.048 72.5148 cv
420.048 72.5147 420.048 72.5146 420.048 72.5145 cv
420.048 72.5151 li
415.099 72.5151 mo
415.099 72.5145 li
415.099 72.5146 415.099 72.5147 415.099 72.5148 cv
415.099 72.5149 415.099 72.515 415.099 72.5151 cv
420.048 67.566 mo
420.048 67.5659 420.048 67.5658 420.048 67.5657 cv
420.048 67.5656 420.048 67.5655 420.048 67.5653 cv
420.048 67.566 li
415.099 67.566 mo
415.099 67.5653 li
415.099 67.5655 415.099 67.5656 415.099 67.5657 cv
415.099 67.5658 415.099 67.5659 415.099 67.566 cv
.811765 .188235 .780392 .0627451 cmyk
f
502.775 45.94 mo
502.775 44.4277 li
504.335 45.0241 li
504.276 45.0992 504.212 45.171 504.143 45.2393 cv
504.143 45.24 li
503.77 45.6135 503.29 45.8566 502.775 45.94 cv
501.975 45.94 mo
501.46 45.8566 500.981 45.6135 500.608 45.24 cv
500.608 45.2393 li
500.502 45.1343 500.408 45.0208 500.324 44.9004 cv
501.975 44.383 li
501.975 45.94 li
504.871 43.623 mo
502.775 42.8217 li
502.775 41.0043 li
503.29 41.0877 503.77 41.3308 504.143 41.7043 cv
504.143 41.705 li
504.612 42.173 504.875 42.8086 504.875 43.4722 cv
504.875 43.5226 504.874 43.573 504.871 43.623 cv
499.875 43.4689 mo
499.876 42.8066 500.139 42.1723 500.608 41.705 cv
500.608 41.7043 li
500.981 41.3308 501.46 41.0877 501.975 41.0043 cv
501.975 42.811 li
499.875 43.4689 li
f
502.375 45.9722 mo
502.24 45.9722 502.107 45.9613 501.975 45.94 cv
501.975 44.383 li
502.351 44.2653 li
502.775 44.4277 li
502.775 45.94 li
502.644 45.9613 502.51 45.9722 502.375 45.9722 cv
502.375 45.9722 li
502.775 42.8217 mo
502.643 42.7712 li
502.557 42.738 502.466 42.7214 502.376 42.7214 cv
502.3 42.7214 502.225 42.7329 502.151 42.7559 cv
501.975 42.811 li
501.975 41.0043 li
502.107 40.983 502.24 40.9722 502.375 40.9722 cv
502.51 40.9722 502.644 40.983 502.775 41.0043 cv
502.775 42.8217 li
.811765 .188235 .780392 .0823529 cmyk
f
504.335 45.0241 mo
502.775 44.4277 li
502.775 42.8217 li
504.871 43.623 li
504.84 44.1353 504.652 44.6242 504.335 45.0241 cv
500.324 44.9004 mo
500.034 44.4845 499.875 43.9868 499.875 43.4722 cv
499.875 43.4711 499.875 43.47 499.875 43.4689 cv
501.975 42.811 li
501.975 44.383 li
500.324 44.9004 li
.894118 .207843 .866667 .0745098 cmyk
f
502.775 44.4277 mo
502.351 44.2653 li
501.975 44.383 li
501.975 42.811 li
502.151 42.7559 li
502.225 42.7329 502.3 42.7214 502.376 42.7214 cv
502.466 42.7214 502.557 42.738 502.643 42.7712 cv
502.775 42.8217 li
502.775 44.4277 li
.894118 .207843 .866667 .0705882 cmyk
f
502.775 46.9492 mo
502.775 45.94 li
503.29 45.8566 503.77 45.6135 504.143 45.24 cv
504.143 45.2393 li
504.212 45.171 504.276 45.0992 504.335 45.0241 cv
505.301 45.3934 li
505.171 45.5913 505.02 45.7769 504.85 45.9467 cv
504.289 46.5086 503.557 46.8595 502.775 46.9492 cv
501.975 46.9492 mo
501.194 46.8595 500.462 46.5086 499.901 45.9467 cv
499.679 45.7252 499.49 45.4769 499.337 45.2095 cv
500.324 44.9004 li
500.408 45.0208 500.502 45.1343 500.608 45.2393 cv
500.608 45.24 li
500.981 45.6135 501.46 45.8566 501.975 45.94 cv
501.975 46.9492 li
505.836 43.9923 mo
504.871 43.623 li
504.874 43.573 504.875 43.5226 504.875 43.4722 cv
504.875 42.8086 504.612 42.173 504.143 41.705 cv
504.143 41.7043 li
503.77 41.3308 503.29 41.0877 502.775 41.0043 cv
502.775 39.9951 li
503.557 40.0849 504.289 40.4358 504.85 40.9976 cv
505.507 41.6535 505.875 42.5438 505.875 43.4722 cv
505.875 43.6473 505.862 43.8212 505.836 43.9923 cv
498.889 43.778 mo
498.88 43.6767 498.875 43.5747 498.875 43.4722 cv
498.875 42.5438 499.244 41.6536 499.901 40.9976 cv
500.462 40.4358 501.194 40.0849 501.975 39.9951 cv
501.975 41.0043 li
501.46 41.0877 500.981 41.3308 500.608 41.7043 cv
500.608 41.705 li
500.139 42.1723 499.876 42.8066 499.875 43.4689 cv
498.889 43.778 li
.811765 .188235 .780392 .0627451 cmyk
f
502.375 46.9722 mo
502.375 46.9722 li
502.241 46.9722 502.107 46.9644 501.975 46.9492 cv
501.975 45.94 li
502.107 45.9613 502.24 45.9722 502.375 45.9722 cv
502.375 45.9722 li
502.51 45.9722 502.644 45.9613 502.775 45.94 cv
502.775 46.9492 li
502.643 46.9644 502.51 46.9722 502.375 46.9722 cv
501.975 41.0043 mo
501.975 39.9951 li
502.107 39.9799 502.241 39.9722 502.375 39.9722 cv
502.51 39.9722 502.643 39.9799 502.775 39.9951 cv
502.775 41.0043 li
502.644 40.983 502.51 40.9722 502.375 40.9722 cv
502.24 40.9722 502.107 40.983 501.975 41.0043 cv
.811765 .188235 .780392 .0823529 cmyk
f
505.301 45.3934 mo
504.335 45.0241 li
504.652 44.6242 504.84 44.1353 504.871 43.623 cv
505.836 43.9923 li
505.761 44.4933 505.578 44.9714 505.301 45.3934 cv
499.337 45.2095 mo
499.087 44.7726 498.933 44.2843 498.889 43.778 cv
499.875 43.4689 li
499.875 43.47 499.875 43.4711 499.875 43.4722 cv
499.875 43.9868 500.034 44.4845 500.324 44.9004 cv
499.337 45.2095 li
.894118 .207843 .866667 .0745098 cmyk
f
504.85 45.9471 mo
504.85 45.9469 504.85 45.9469 504.85 45.9467 cv
504.85 45.9466 504.85 45.9465 504.85 45.9464 cv
504.85 45.9471 li
499.901 45.9471 mo
499.901 45.9464 li
499.901 45.9465 499.901 45.9466 499.901 45.9467 cv
499.901 45.9468 499.901 45.9469 499.901 45.9471 cv
504.85 40.9979 mo
504.85 40.9978 504.85 40.9977 504.85 40.9976 cv
504.85 40.9975 504.85 40.9974 504.85 40.9973 cv
504.85 40.9979 li
499.901 40.9979 mo
499.901 40.9973 li
499.901 40.9974 499.901 40.9975 499.901 40.9976 cv
499.901 40.9977 499.901 40.9978 499.901 40.9979 cv
.811765 .188235 .780392 .0627451 cmyk
f
587.577 78.3695 mo
587.577 76.5361 li
587.71 76.4527 587.818 76.3271 587.878 76.1695 cv
588.008 75.8296 587.874 75.4537 587.577 75.2671 cv
587.577 73.4339 li
588.092 73.5173 588.572 73.7604 588.944 74.1339 cv
588.945 74.1346 li
589.414 74.6026 589.677 75.2382 589.677 75.9017 cv
589.677 76.5651 589.414 77.2007 588.945 77.6687 cv
588.944 77.6694 li
588.572 78.043 588.092 78.2861 587.577 78.3695 cv
586.777 78.3694 mo
586.263 78.286 585.783 78.0429 585.41 77.6694 cv
585.41 77.6687 li
584.941 77.2007 584.677 76.5651 584.677 75.9017 cv
584.677 75.8511 584.679 75.8006 584.682 75.7504 cv
586.777 76.5517 li
586.777 78.3694 li
586.777 74.9457 mo
585.218 74.3494 li
585.277 74.2745 585.341 74.2028 585.41 74.1346 cv
585.41 74.1339 li
585.783 73.7604 586.263 73.5173 586.777 73.4339 cv
586.777 74.9457 li
f
587.177 78.4016 mo
587.043 78.4016 586.909 78.3907 586.777 78.3694 cv
586.777 76.5517 li
586.91 76.6022 li
586.998 76.6359 587.088 76.6519 587.177 76.6519 cv
587.32 76.6519 587.459 76.6109 587.577 76.5361 cv
587.577 78.3695 li
587.446 78.3907 587.312 78.4016 587.177 78.4016 cv
587.177 78.4016 li
587.577 75.2671 mo
587.536 75.2413 587.492 75.2191 587.445 75.2011 cv
586.777 74.9457 li
586.777 73.4339 li
586.909 73.4126 587.043 73.4017 587.177 73.4017 cv
587.312 73.4017 587.446 73.4126 587.577 73.4339 cv
587.577 75.2671 li
.811765 .188235 .780392 .0823529 cmyk
f
586.777 76.5517 mo
584.682 75.7504 li
584.713 75.2381 584.901 74.7492 585.218 74.3494 cv
586.777 74.9457 li
586.777 76.5517 li
587.577 76.5361 mo
587.577 75.2671 li
587.874 75.4537 588.008 75.8296 587.878 76.1695 cv
587.818 76.3271 587.71 76.4527 587.577 76.5361 cv
.894118 .207843 .866667 .0745098 cmyk
f
587.177 76.6519 mo
587.088 76.6519 586.998 76.6359 586.91 76.6022 cv
586.777 76.5517 li
586.777 74.9457 li
587.445 75.2011 li
587.492 75.2191 587.536 75.2413 587.577 75.2671 cv
587.577 76.5361 li
587.459 76.6109 587.32 76.6519 587.177 76.6519 cv
.894118 .207843 .866667 .0705882 cmyk
f
587.577 79.3788 mo
587.577 78.3695 li
588.092 78.2861 588.572 78.043 588.944 77.6694 cv
588.945 77.6687 li
589.414 77.2007 589.677 76.5651 589.677 75.9017 cv
589.677 75.2382 589.414 74.6026 588.945 74.1346 cv
588.944 74.1339 li
588.572 73.7604 588.092 73.5173 587.577 73.4339 cv
587.577 72.4245 li
588.358 72.5143 589.091 72.8653 589.652 73.4272 cv
590.309 74.083 590.677 74.9734 590.677 75.9017 cv
590.677 76.8299 590.309 77.7204 589.652 78.3763 cv
589.091 78.938 588.358 79.289 587.577 79.3788 cv
586.777 79.3788 mo
585.996 79.289 585.264 78.938 584.703 78.3763 cv
584.046 77.7204 583.677 76.8299 583.677 75.9017 cv
583.677 75.7264 583.691 75.5524 583.716 75.3811 cv
584.682 75.7504 li
584.679 75.8006 584.677 75.8511 584.677 75.9017 cv
584.677 76.5651 584.941 77.2007 585.41 77.6687 cv
585.41 77.6694 li
585.783 78.0429 586.263 78.286 586.777 78.3694 cv
586.777 79.3788 li
585.218 74.3494 mo
584.252 73.98 li
584.382 73.7823 584.533 73.5969 584.703 73.4272 cv
585.264 72.8653 585.996 72.5143 586.777 72.4245 cv
586.777 73.4339 li
586.263 73.5173 585.783 73.7604 585.41 74.1339 cv
585.41 74.1346 li
585.341 74.2028 585.277 74.2745 585.218 74.3494 cv
.811765 .188235 .780392 .0627451 cmyk
f
587.177 79.4017 mo
587.177 79.4017 li
587.043 79.4017 586.91 79.394 586.777 79.3788 cv
586.777 78.3694 li
586.909 78.3907 587.043 78.4016 587.177 78.4016 cv
587.177 78.4016 li
587.312 78.4016 587.446 78.3907 587.577 78.3695 cv
587.577 79.3788 li
587.445 79.394 587.312 79.4017 587.177 79.4017 cv
586.777 73.4339 mo
586.777 72.4245 li
586.91 72.4093 587.043 72.4016 587.177 72.4016 cv
587.312 72.4016 587.445 72.4093 587.577 72.4245 cv
587.577 73.4339 li
587.446 73.4126 587.312 73.4017 587.177 73.4017 cv
587.043 73.4017 586.909 73.4126 586.777 73.4339 cv
.811765 .188235 .780392 .0823529 cmyk
f
584.682 75.7504 mo
583.716 75.3811 li
583.792 74.8801 583.975 74.402 584.252 73.98 cv
585.218 74.3494 li
584.901 74.7492 584.713 75.2381 584.682 75.7504 cv
.894118 .207843 .866667 .0745098 cmyk
f
589.652 78.3766 mo
589.652 78.3765 589.652 78.3764 589.652 78.3763 cv
589.652 78.3762 589.652 78.3761 589.652 78.376 cv
589.652 78.3766 li
584.703 78.3766 mo
584.703 78.376 li
584.703 78.3761 584.703 78.3762 584.703 78.3763 cv
584.703 78.3764 584.703 78.3765 584.703 78.3766 cv
589.652 73.4275 mo
589.652 73.4274 589.652 73.4273 589.652 73.4272 cv
589.652 73.4271 589.652 73.427 589.652 73.4269 cv
589.652 73.4275 li
584.703 73.4275 mo
584.703 73.4269 li
584.703 73.427 584.703 73.4271 584.703 73.4272 cv
584.703 73.4273 584.703 73.4274 584.703 73.4275 cv
.811765 .188235 .780392 .0627451 cmyk
f
1.5 lw
1 lc
332.771 122.954 mo
417.573 107.258 li
502.375 122.744 li
587.177 105.098 li
0 .550439 .957794 0 cmyk
@
332.771 125.954 mo
333.567 125.954 334.33 125.638 334.892 125.075 cv
335.455 124.513 335.771 123.75 335.771 122.954 cv
335.771 122.158 335.455 121.395 334.892 120.833 cv
334.33 120.27 333.567 119.954 332.771 119.954 cv
331.975 119.954 331.212 120.27 330.65 120.833 cv
330.087 121.395 329.771 122.158 329.771 122.954 cv
329.771 123.75 330.087 124.513 330.65 125.075 cv
331.212 125.638 331.975 125.954 332.771 125.954 cv
cp
f
1 lw
0 lc
332.771 125.954 mo
333.567 125.954 334.33 125.638 334.892 125.075 cv
335.455 124.513 335.771 123.75 335.771 122.954 cv
335.771 122.158 335.455 121.395 334.892 120.833 cv
334.33 120.27 333.567 119.954 332.771 119.954 cv
331.975 119.954 331.212 120.27 330.65 120.833 cv
330.087 121.395 329.771 122.158 329.771 122.954 cv
329.771 123.75 330.087 124.513 330.65 125.075 cv
331.212 125.638 331.975 125.954 332.771 125.954 cv
cp
@
417.573 110.258 mo
418.369 110.258 419.132 109.942 419.694 109.379 cv
420.257 108.817 420.573 108.054 420.573 107.258 cv
420.573 106.462 420.257 105.699 419.694 105.137 cv
419.132 104.574 418.369 104.258 417.573 104.258 cv
416.777 104.258 416.014 104.574 415.452 105.137 cv
414.889 105.699 414.573 106.462 414.573 107.258 cv
414.573 108.054 414.889 108.817 415.452 109.379 cv
416.014 109.942 416.777 110.258 417.573 110.258 cv
cp
f
417.573 110.258 mo
418.369 110.258 419.132 109.942 419.694 109.379 cv
420.257 108.817 420.573 108.054 420.573 107.258 cv
420.573 106.462 420.257 105.699 419.694 105.137 cv
419.132 104.574 418.369 104.258 417.573 104.258 cv
416.777 104.258 416.014 104.574 415.452 105.137 cv
414.889 105.699 414.573 106.462 414.573 107.258 cv
414.573 108.054 414.889 108.817 415.452 109.379 cv
416.014 109.942 416.777 110.258 417.573 110.258 cv
cp
@
502.375 125.744 mo
503.171 125.744 503.934 125.428 504.496 124.865 cv
505.059 124.303 505.375 123.54 505.375 122.744 cv
505.375 121.948 505.059 121.185 504.496 120.623 cv
503.934 120.06 503.171 119.744 502.375 119.744 cv
501.579 119.744 500.816 120.06 500.254 120.623 cv
499.691 121.185 499.375 121.948 499.375 122.744 cv
499.375 123.54 499.691 124.303 500.254 124.865 cv
500.816 125.428 501.579 125.744 502.375 125.744 cv
cp
f
502.375 125.744 mo
503.171 125.744 503.934 125.428 504.496 124.865 cv
505.059 124.303 505.375 123.54 505.375 122.744 cv
505.375 121.948 505.059 121.185 504.496 120.623 cv
503.934 120.06 503.171 119.744 502.375 119.744 cv
501.579 119.744 500.816 120.06 500.254 120.623 cv
499.691 121.185 499.375 121.948 499.375 122.744 cv
499.375 123.54 499.691 124.303 500.254 124.865 cv
500.816 125.428 501.579 125.744 502.375 125.744 cv
cp
@
587.177 108.098 mo
587.973 108.098 588.736 107.782 589.298 107.219 cv
589.861 106.657 590.177 105.894 590.177 105.098 cv
590.177 104.302 589.861 103.539 589.298 102.977 cv
588.736 102.414 587.973 102.098 587.177 102.098 cv
586.381 102.098 585.618 102.414 585.056 102.977 cv
584.493 103.539 584.177 104.302 584.177 105.098 cv
584.177 105.894 584.493 106.657 585.056 107.219 cv
585.618 107.782 586.381 108.098 587.177 108.098 cv
cp
f
587.177 108.098 mo
587.973 108.098 588.736 107.782 589.298 107.219 cv
589.861 106.657 590.177 105.894 590.177 105.098 cv
590.177 104.302 589.861 103.539 589.298 102.977 cv
588.736 102.414 587.973 102.098 587.177 102.098 cv
586.381 102.098 585.618 102.414 585.056 102.977 cv
584.493 103.539 584.177 104.302 584.177 105.098 cv
584.177 105.894 584.493 106.657 585.056 107.219 cv
585.618 107.782 586.381 108.098 587.177 108.098 cv
cp
@
.8 lw
2 lc
0 lj
320.051 160.986 mo
320.051 37.586 li
1 /0 /CSD get_res sepcs
.2 sep
@
599.898 160.986 mo
599.898 37.586 li
@
320.051 160.986 mo
599.898 160.986 li
@
320.051 37.586 mo
599.898 37.586 li
@
439.091 35.617 mo
439.091 35.905 li
438.291 35.505 437.635 35.041 437.123 34.513 cv
436.355 33.745 435.779 32.865 435.379 31.857 cv
434.963 30.833 434.771 29.777 434.771 28.657 cv
434.771 27.057 435.155 25.585 435.955 24.241 cv
436.755 22.913 437.795 21.969 439.091 21.393 cv
439.091 21.713 li
438.435 22.065 437.907 22.561 437.491 23.169 cv
437.075 23.793 436.771 24.577 436.579 25.505 cv
436.371 26.449 436.275 27.441 436.275 28.465 cv
436.275 29.585 436.355 30.593 436.531 31.489 cv
436.659 32.209 436.835 32.769 437.027 33.201 cv
437.219 33.633 437.475 34.049 437.795 34.465 cv
438.115 34.865 438.547 35.249 439.091 35.617 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
446.835 27.089 mo
447.571 27.249 448.115 27.505 448.483 27.841 cv
448.979 28.321 449.235 28.913 449.235 29.601 cv
449.235 30.129 449.059 30.625 448.739 31.105 cv
448.403 31.585 447.939 31.937 447.363 32.161 cv
446.787 32.385 445.891 32.497 444.707 32.497 cv
439.715 32.497 li
439.715 32.209 li
440.115 32.209 li
440.547 32.209 440.867 32.081 441.059 31.793 cv
441.171 31.601 441.235 31.217 441.235 30.625 cv
441.235 23.777 li
441.235 23.137 441.155 22.721 441.011 22.529 cv
440.803 22.305 440.499 22.193 440.115 22.193 cv
439.715 22.193 li
439.715 21.905 li
444.291 21.905 li
445.139 21.905 445.827 21.969 446.339 22.097 cv
447.107 22.289 447.715 22.609 448.131 23.089 cv
448.547 23.569 448.755 24.129 448.755 24.737 cv
448.755 25.265 448.579 25.745 448.259 26.161 cv
447.939 26.577 447.459 26.897 446.835 27.089 cv
cp
442.739 26.673 mo
442.931 26.705 443.139 26.737 443.395 26.753 cv
443.651 26.785 443.923 26.785 444.211 26.785 cv
444.979 26.785 445.539 26.705 445.923 26.545 cv
446.307 26.385 446.595 26.129 446.803 25.777 cv
446.995 25.441 447.107 25.073 447.107 24.673 cv
447.107 24.065 446.851 23.537 446.355 23.089 cv
445.843 22.657 445.107 22.433 444.147 22.433 cv
443.619 22.433 443.155 22.497 442.739 22.593 cv
442.739 26.673 li
cp
442.739 31.729 mo
443.347 31.873 443.939 31.937 444.531 31.937 cv
445.459 31.937 446.179 31.729 446.675 31.313 cv
447.171 30.897 447.427 30.369 447.427 29.729 cv
447.427 29.329 447.315 28.929 447.091 28.545 cv
446.867 28.161 446.499 27.873 445.987 27.649 cv
445.475 27.425 444.851 27.313 444.115 27.313 cv
443.795 27.313 443.507 27.329 443.283 27.329 cv
443.059 27.345 442.867 27.361 442.739 27.393 cv
442.739 31.729 li
cp
f
450.467 21.713 mo
450.467 21.393 li
451.267 21.777 451.923 22.241 452.451 22.769 cv
453.187 23.537 453.763 24.417 454.179 25.441 cv
454.579 26.465 454.787 27.537 454.787 28.641 cv
454.787 30.273 454.387 31.745 453.587 33.057 cv
452.787 34.369 451.747 35.329 450.467 35.905 cv
450.467 35.617 li
451.107 35.249 451.635 34.753 452.051 34.145 cv
452.467 33.537 452.771 32.753 452.979 31.825 cv
453.171 30.897 453.283 29.905 453.283 28.881 cv
453.283 27.777 453.187 26.769 453.027 25.841 cv
452.883 25.137 452.723 24.561 452.531 24.129 cv
452.339 23.697 452.067 23.281 451.747 22.865 cv
451.427 22.465 450.995 22.081 450.467 21.713 cv
cp
f
466.771 28.945 mo
462.659 28.945 li
461.939 30.625 li
461.763 31.041 461.683 31.345 461.683 31.537 cv
461.683 31.713 461.747 31.857 461.907 31.985 cv
462.051 32.113 462.387 32.177 462.899 32.209 cv
462.899 32.497 li
459.571 32.497 li
459.571 32.209 li
460.003 32.145 460.291 32.033 460.435 31.905 cv
460.691 31.649 460.979 31.153 461.315 30.385 cv
465.043 21.665 li
465.315 21.665 li
468.995 30.481 li
469.283 31.185 469.555 31.649 469.795 31.857 cv
470.035 32.065 470.371 32.177 470.819 32.209 cv
470.819 32.497 li
466.643 32.497 li
466.643 32.209 li
467.059 32.193 467.331 32.129 467.491 32.001 cv
467.635 31.889 467.715 31.745 467.715 31.553 cv
467.715 31.329 467.603 30.977 467.411 30.481 cv
466.771 28.945 li
cp
466.547 28.369 mo
464.755 24.097 li
462.899 28.369 li
466.547 28.369 li
cp
f
478.627 22.193 mo
478.627 21.905 li
482.371 21.905 li
482.371 22.193 li
481.987 22.193 li
481.555 22.193 481.235 22.369 481.011 22.721 cv
480.899 22.881 480.851 23.265 480.851 23.841 cv
480.851 28.145 li
480.851 29.201 480.739 30.033 480.531 30.609 cv
480.323 31.201 479.907 31.697 479.299 32.113 cv
478.675 32.529 477.827 32.737 476.771 32.737 cv
475.619 32.737 474.739 32.529 474.147 32.145 cv
473.539 31.745 473.123 31.201 472.867 30.529 cv
472.707 30.065 472.627 29.201 472.627 27.921 cv
472.627 23.777 li
472.627 23.137 472.531 22.705 472.355 22.497 cv
472.163 22.305 471.875 22.193 471.475 22.193 cv
471.075 22.193 li
471.075 21.905 li
475.667 21.905 li
475.667 22.193 li
475.251 22.193 li
474.803 22.193 474.499 22.337 474.323 22.609 cv
474.179 22.801 474.115 23.185 474.115 23.777 cv
474.115 28.401 li
474.115 28.817 474.147 29.281 474.227 29.809 cv
474.291 30.353 474.435 30.769 474.643 31.057 cv
474.835 31.345 475.123 31.601 475.491 31.793 cv
475.859 31.985 476.323 32.081 476.867 32.081 cv
477.555 32.081 478.179 31.937 478.723 31.633 cv
479.267 31.329 479.651 30.945 479.843 30.465 cv
480.035 30.001 480.147 29.201 480.147 28.065 cv
480.147 23.777 li
480.147 23.121 480.067 22.705 479.939 22.529 cv
479.731 22.305 479.427 22.193 479.027 22.193 cv
478.627 22.193 li
cp
f
492.179 21.665 mo
492.419 25.265 li
492.179 25.265 li
491.859 24.193 491.395 23.425 490.787 22.945 cv
490.179 22.465 489.475 22.225 488.643 22.225 cv
487.939 22.225 487.299 22.417 486.723 22.769 cv
486.147 23.121 485.699 23.697 485.379 24.465 cv
485.059 25.249 484.899 26.225 484.899 27.377 cv
484.899 28.337 485.043 29.169 485.363 29.873 cv
485.667 30.577 486.131 31.121 486.755 31.489 cv
487.363 31.873 488.067 32.049 488.867 32.049 cv
489.539 32.049 490.147 31.905 490.675 31.617 cv
491.203 31.329 491.779 30.737 492.419 29.857 cv
492.659 30.017 li
492.131 30.961 491.507 31.649 490.803 32.081 cv
490.099 32.497 489.251 32.721 488.275 32.721 cv
486.515 32.721 485.171 32.081 484.211 30.785 cv
483.475 29.825 483.123 28.673 483.123 27.361 cv
483.123 26.305 483.347 25.345 483.827 24.449 cv
484.307 23.569 484.963 22.881 485.795 22.401 cv
486.627 21.921 487.523 21.665 488.515 21.665 cv
489.283 21.665 490.035 21.857 490.787 22.225 cv
490.995 22.353 491.155 22.401 491.251 22.401 cv
491.379 22.401 491.507 22.353 491.619 22.241 cv
491.747 22.113 491.843 21.921 491.907 21.665 cv
492.179 21.665 li
cp
f
22.324 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.324 191.826 li
22.324 315.226 li
1 /0 /CSD get_res sepcs
0 sep
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
34.6443 315.226 mo
34.6443 191.826 li
34.6443 191.605 34.8234 191.426 35.0444 191.426 cv
35.2653 191.426 35.4444 191.605 35.4444 191.826 cv
35.4444 315.226 li
35.4444 315.447 35.2653 315.626 35.0444 315.626 cv
34.8234 315.626 34.6443 315.447 34.6443 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
22.3547 320.597 mo
22.5647 323.747 li
22.3547 323.747 li
22.0747 322.809 21.6687 322.137 21.1367 321.717 cv
20.6047 321.297 19.9887 321.087 19.2607 321.087 cv
18.6447 321.087 18.0847 321.255 17.5807 321.563 cv
17.0767 321.871 16.6847 322.375 16.4047 323.047 cv
16.1247 323.733 15.9847 324.587 15.9847 325.595 cv
15.9847 326.435 16.1107 327.163 16.3907 327.779 cv
16.6567 328.395 17.0627 328.871 17.6087 329.193 cv
18.1407 329.529 18.7567 329.683 19.4567 329.683 cv
20.0447 329.683 20.5767 329.557 21.0387 329.305 cv
21.5007 329.053 22.0047 328.535 22.5647 327.765 cv
22.7747 327.905 li
22.3127 328.731 21.7667 329.333 21.1507 329.711 cv
20.5347 330.075 19.7927 330.271 18.9387 330.271 cv
17.3987 330.271 16.2227 329.711 15.3827 328.577 cv
14.7387 327.737 14.4307 326.729 14.4307 325.581 cv
14.4307 324.657 14.6267 323.817 15.0467 323.033 cv
15.4667 322.263 16.0407 321.661 16.7687 321.241 cv
17.4967 320.821 18.2807 320.597 19.1487 320.597 cv
19.8207 320.597 20.4787 320.765 21.1367 321.087 cv
21.3187 321.199 21.4587 321.241 21.5427 321.241 cv
21.6547 321.241 21.7667 321.199 21.8647 321.101 cv
21.9767 320.989 22.0607 320.821 22.1167 320.597 cv
22.3547 320.597 li
cp
1 /0 /CSD get_res sepcs
.85 sep
f
29.7328 325.343 mo
30.3768 325.483 30.8528 325.707 31.1748 326.001 cv
31.6088 326.421 31.8328 326.939 31.8328 327.541 cv
31.8328 328.003 31.6788 328.437 31.3988 328.857 cv
31.1048 329.277 30.6988 329.585 30.1948 329.781 cv
29.6908 329.977 28.9068 330.075 27.8708 330.075 cv
23.5028 330.075 li
23.5028 329.823 li
23.8528 329.823 li
24.2308 329.823 24.5108 329.711 24.6788 329.459 cv
24.7768 329.291 24.8328 328.955 24.8328 328.437 cv
24.8328 322.445 li
24.8328 321.885 24.7628 321.521 24.6368 321.353 cv
24.4548 321.157 24.1888 321.059 23.8528 321.059 cv
23.5028 321.059 li
23.5028 320.807 li
27.5068 320.807 li
28.2488 320.807 28.8508 320.863 29.2988 320.975 cv
29.9708 321.143 30.5028 321.423 30.8668 321.843 cv
31.2308 322.263 31.4128 322.753 31.4128 323.285 cv
31.4128 323.747 31.2588 324.167 30.9788 324.531 cv
30.6988 324.895 30.2788 325.175 29.7328 325.343 cv
cp
26.1488 324.979 mo
26.3168 325.007 26.4988 325.035 26.7228 325.049 cv
26.9468 325.077 27.1848 325.077 27.4368 325.077 cv
28.1088 325.077 28.5988 325.007 28.9348 324.867 cv
29.2708 324.727 29.5228 324.503 29.7048 324.195 cv
29.8728 323.901 29.9708 323.579 29.9708 323.229 cv
29.9708 322.697 29.7468 322.235 29.3128 321.843 cv
28.8648 321.465 28.2208 321.269 27.3808 321.269 cv
26.9188 321.269 26.5128 321.325 26.1488 321.409 cv
26.1488 324.979 li
cp
26.1488 329.403 mo
26.6808 329.529 27.1988 329.585 27.7168 329.585 cv
28.5288 329.585 29.1588 329.403 29.5928 329.039 cv
30.0268 328.675 30.2508 328.213 30.2508 327.653 cv
30.2508 327.303 30.1528 326.953 29.9568 326.617 cv
29.7608 326.281 29.4388 326.029 28.9908 325.833 cv
28.5428 325.637 27.9968 325.539 27.3528 325.539 cv
27.0728 325.539 26.8208 325.553 26.6248 325.553 cv
26.4288 325.567 26.2608 325.581 26.1488 325.609 cv
26.1488 329.403 li
cp
f
40.6249 327.513 mo
40.8489 327.555 li
40.0649 330.075 li
32.8829 330.075 li
32.8829 329.823 li
33.2329 329.823 li
33.6249 329.823 33.9049 329.697 34.0729 329.445 cv
34.1569 329.305 34.2129 328.955 34.2129 328.423 cv
34.2129 322.445 li
34.2129 321.871 34.1429 321.507 34.0309 321.353 cv
33.8489 321.157 33.5829 321.059 33.2329 321.059 cv
32.8829 321.059 li
32.8829 320.807 li
37.0829 320.807 li
37.0829 321.059 li
36.5789 321.059 36.2429 321.101 36.0469 321.199 cv
35.8509 321.297 35.7109 321.423 35.6409 321.563 cv
35.5569 321.703 35.5289 322.053 35.5289 322.599 cv
35.5289 328.423 li
35.5289 328.815 35.5569 329.067 35.6409 329.207 cv
35.6969 329.305 35.7809 329.375 35.8929 329.417 cv
36.0049 329.473 36.3549 329.487 36.9569 329.487 cv
37.6289 329.487 li
38.3429 329.487 38.8469 329.445 39.1269 329.333 cv
39.4069 329.235 39.6729 329.053 39.9109 328.773 cv
40.1489 328.507 40.3869 328.087 40.6249 327.513 cv
cp
f
46.2808 320.597 mo
47.4848 320.597 48.5208 321.059 49.4028 321.969 cv
50.2848 322.893 50.7328 324.027 50.7328 325.385 cv
50.7328 326.799 50.2848 327.961 49.3888 328.885 cv
48.4928 329.809 47.4288 330.271 46.1688 330.271 cv
44.8808 330.271 43.8168 329.823 42.9488 328.927 cv
42.0808 328.031 41.6468 326.855 41.6468 325.413 cv
41.6468 323.943 42.1508 322.739 43.1588 321.801 cv
44.0268 321.003 45.0628 320.597 46.2808 320.597 cv
cp
46.1408 321.087 mo
45.3148 321.087 44.6568 321.395 44.1528 322.011 cv
43.5228 322.781 43.2148 323.901 43.2148 325.385 cv
43.2148 326.897 43.5368 328.059 44.1808 328.871 cv
44.6848 329.487 45.3428 329.795 46.1548 329.795 cv
47.0228 329.795 47.7368 329.459 48.3108 328.787 cv
48.8708 328.115 49.1648 327.037 49.1648 325.567 cv
49.1648 323.985 48.8428 322.809 48.2268 322.025 cv
47.7228 321.409 47.0228 321.087 46.1408 321.087 cv
cp
f
54.1348 321.311 mo
54.1348 324.951 li
55.8148 324.951 li
56.2068 324.951 56.4868 324.867 56.6688 324.699 cv
56.8368 324.531 56.9628 324.195 57.0328 323.677 cv
57.2848 323.677 li
57.2848 326.827 li
57.0328 326.827 li
57.0188 326.463 56.9628 326.197 56.8788 326.029 cv
56.7948 325.861 56.6688 325.735 56.5148 325.651 cv
56.3468 325.567 56.1228 325.525 55.8148 325.525 cv
54.1348 325.525 li
54.1348 328.437 li
54.1348 328.913 54.1628 329.221 54.2188 329.361 cv
54.2608 329.473 54.3588 329.571 54.4988 329.655 cv
54.6948 329.767 54.9048 329.823 55.1288 329.823 cv
55.4648 329.823 li
55.4648 330.075 li
51.4888 330.075 li
51.4888 329.823 li
51.8248 329.823 li
52.2028 329.823 52.4828 329.711 52.6508 329.487 cv
52.7628 329.347 52.8188 328.997 52.8188 328.437 cv
52.8188 322.445 li
52.8188 321.983 52.7768 321.675 52.7208 321.521 cv
52.6788 321.409 52.5808 321.311 52.4408 321.227 cv
52.2448 321.115 52.0348 321.059 51.8248 321.059 cv
51.4888 321.059 li
51.4888 320.807 li
58.3908 320.807 li
58.4748 322.837 li
58.2368 322.837 li
58.1108 322.417 57.9708 322.095 57.8168 321.899 cv
57.6628 321.703 57.4668 321.549 57.2428 321.451 cv
57.0048 321.367 56.6548 321.311 56.1788 321.311 cv
54.1348 321.311 li
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
119.446 315.226 mo
119.446 191.826 li
119.446 191.605 119.625 191.426 119.846 191.426 cv
120.067 191.426 120.246 191.605 120.246 191.826 cv
120.246 315.226 li
120.246 315.447 120.067 315.626 119.846 315.626 cv
119.625 315.626 119.446 315.447 119.446 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
104.395 325.105 mo
108.693 325.105 li
108.693 322.459 li
108.693 321.983 108.665 321.675 108.609 321.521 cv
108.553 321.409 108.455 321.311 108.315 321.227 cv
108.119 321.115 107.909 321.059 107.699 321.059 cv
107.363 321.059 li
107.363 320.807 li
111.339 320.807 li
111.339 321.059 li
111.003 321.059 li
110.779 321.059 110.583 321.115 110.387 321.213 cv
110.233 321.297 110.135 321.409 110.079 321.549 cv
110.023 321.703 110.009 322.011 110.009 322.459 cv
110.009 328.437 li
110.009 328.913 110.037 329.221 110.093 329.361 cv
110.135 329.473 110.233 329.571 110.373 329.655 cv
110.569 329.767 110.779 329.823 111.003 329.823 cv
111.339 329.823 li
111.339 330.075 li
107.363 330.075 li
107.363 329.823 li
107.699 329.823 li
108.063 329.823 108.343 329.711 108.525 329.487 cv
108.637 329.347 108.693 328.997 108.693 328.437 cv
108.693 325.609 li
104.395 325.609 li
104.395 328.437 li
104.395 328.913 104.423 329.221 104.479 329.361 cv
104.521 329.473 104.619 329.571 104.759 329.655 cv
104.955 329.767 105.165 329.823 105.389 329.823 cv
105.725 329.823 li
105.725 330.075 li
101.749 330.075 li
101.749 329.823 li
102.085 329.823 li
102.463 329.823 102.743 329.711 102.911 329.487 cv
103.023 329.347 103.079 328.997 103.079 328.437 cv
103.079 322.459 li
103.079 321.983 103.037 321.675 102.981 321.521 cv
102.939 321.409 102.841 321.311 102.701 321.227 cv
102.505 321.115 102.295 321.059 102.085 321.059 cv
101.749 321.059 li
101.749 320.807 li
105.725 320.807 li
105.725 321.059 li
105.389 321.059 li
105.165 321.059 104.955 321.115 104.759 321.213 cv
104.619 321.297 104.521 321.409 104.465 321.549 cv
104.409 321.703 104.395 322.011 104.395 322.459 cv
104.395 325.105 li
cp
f
118.087 325.343 mo
118.731 325.483 119.207 325.707 119.529 326.001 cv
119.963 326.421 120.187 326.939 120.187 327.541 cv
120.187 328.003 120.033 328.437 119.753 328.857 cv
119.459 329.277 119.053 329.585 118.549 329.781 cv
118.045 329.977 117.261 330.075 116.225 330.075 cv
111.857 330.075 li
111.857 329.823 li
112.207 329.823 li
112.585 329.823 112.865 329.711 113.033 329.459 cv
113.131 329.291 113.187 328.955 113.187 328.437 cv
113.187 322.445 li
113.187 321.885 113.117 321.521 112.991 321.353 cv
112.809 321.157 112.543 321.059 112.207 321.059 cv
111.857 321.059 li
111.857 320.807 li
115.861 320.807 li
116.603 320.807 117.205 320.863 117.653 320.975 cv
118.325 321.143 118.857 321.423 119.221 321.843 cv
119.585 322.263 119.767 322.753 119.767 323.285 cv
119.767 323.747 119.613 324.167 119.333 324.531 cv
119.053 324.895 118.633 325.175 118.087 325.343 cv
cp
114.503 324.979 mo
114.671 325.007 114.853 325.035 115.077 325.049 cv
115.301 325.077 115.539 325.077 115.791 325.077 cv
116.463 325.077 116.953 325.007 117.289 324.867 cv
117.625 324.727 117.877 324.503 118.059 324.195 cv
118.227 323.901 118.325 323.579 118.325 323.229 cv
118.325 322.697 118.101 322.235 117.667 321.843 cv
117.219 321.465 116.575 321.269 115.735 321.269 cv
115.273 321.269 114.867 321.325 114.503 321.409 cv
114.503 324.979 li
cp
114.503 329.403 mo
115.035 329.529 115.553 329.585 116.071 329.585 cv
116.883 329.585 117.513 329.403 117.947 329.039 cv
118.381 328.675 118.605 328.213 118.605 327.653 cv
118.605 327.303 118.507 326.953 118.311 326.617 cv
118.115 326.281 117.793 326.029 117.345 325.833 cv
116.897 325.637 116.351 325.539 115.707 325.539 cv
115.427 325.539 115.175 325.553 114.979 325.553 cv
114.783 325.567 114.615 325.581 114.503 325.609 cv
114.503 329.403 li
cp
f
126.081 320.597 mo
127.285 320.597 128.321 321.059 129.203 321.969 cv
130.085 322.893 130.533 324.027 130.533 325.385 cv
130.533 326.799 130.085 327.961 129.189 328.885 cv
128.293 329.809 127.229 330.271 125.969 330.271 cv
124.681 330.271 123.617 329.823 122.749 328.927 cv
121.881 328.031 121.447 326.855 121.447 325.413 cv
121.447 323.943 121.951 322.739 122.959 321.801 cv
123.827 321.003 124.863 320.597 126.081 320.597 cv
cp
125.941 321.087 mo
125.115 321.087 124.457 321.395 123.953 322.011 cv
123.323 322.781 123.015 323.901 123.015 325.385 cv
123.015 326.897 123.337 328.059 123.981 328.871 cv
124.485 329.487 125.143 329.795 125.955 329.795 cv
126.823 329.795 127.537 329.459 128.111 328.787 cv
128.671 328.115 128.965 327.037 128.965 325.567 cv
128.965 323.985 128.643 322.809 128.027 322.025 cv
127.523 321.409 126.823 321.087 125.941 321.087 cv
cp
f
137.477 320.597 mo
137.477 323.803 li
137.225 323.803 li
137.141 323.187 137.001 322.697 136.791 322.333 cv
136.567 321.969 136.273 321.689 135.881 321.465 cv
135.489 321.255 135.083 321.143 134.663 321.143 cv
134.187 321.143 133.795 321.297 133.487 321.577 cv
133.179 321.871 133.025 322.193 133.025 322.557 cv
133.025 322.851 133.123 323.117 133.319 323.341 cv
133.599 323.677 134.271 324.139 135.335 324.699 cv
136.203 325.175 136.791 325.525 137.113 325.777 cv
137.421 326.029 137.673 326.323 137.841 326.659 cv
138.009 326.995 138.093 327.345 138.093 327.709 cv
138.093 328.409 137.813 329.011 137.281 329.515 cv
136.735 330.019 136.035 330.271 135.181 330.271 cv
134.901 330.271 134.649 330.243 134.425 330.215 cv
134.285 330.187 133.991 330.103 133.543 329.977 cv
133.095 329.837 132.801 329.767 132.689 329.767 cv
132.577 329.767 132.479 329.809 132.423 329.865 cv
132.353 329.935 132.311 330.075 132.283 330.271 cv
132.031 330.271 li
132.031 327.107 li
132.283 327.107 li
132.395 327.779 132.563 328.269 132.759 328.605 cv
132.955 328.941 133.263 329.207 133.683 329.431 cv
134.089 329.655 134.537 329.753 135.041 329.753 cv
135.601 329.753 136.049 329.613 136.385 329.305 cv
136.721 329.011 136.889 328.661 136.889 328.241 cv
136.889 328.017 136.819 327.779 136.693 327.541 cv
136.567 327.317 136.371 327.093 136.105 326.897 cv
135.923 326.757 135.433 326.477 134.649 326.029 cv
133.851 325.581 133.291 325.231 132.955 324.965 cv
132.619 324.699 132.367 324.405 132.199 324.083 cv
132.031 323.775 131.947 323.425 131.947 323.033 cv
131.947 322.375 132.199 321.801 132.703 321.325 cv
133.207 320.849 133.865 320.597 134.649 320.597 cv
135.139 320.597 135.657 320.723 136.217 320.961 cv
136.469 321.073 136.651 321.129 136.763 321.129 cv
136.875 321.129 136.959 321.101 137.043 321.031 cv
137.127 320.961 137.183 320.821 137.225 320.597 cv
137.477 320.597 li
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
204.248 315.226 mo
204.248 191.826 li
204.248 191.605 204.427 191.426 204.648 191.426 cv
204.869 191.426 205.048 191.605 205.048 191.826 cv
205.048 315.226 li
205.048 315.447 204.869 315.626 204.648 315.626 cv
204.427 315.626 204.248 315.447 204.248 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
187.788 320.359 mo
187.984 320.359 188.138 320.429 188.278 320.555 cv
188.404 320.695 188.474 320.849 188.474 321.045 cv
188.474 321.241 188.404 321.395 188.278 321.535 cv
188.138 321.675 187.984 321.745 187.788 321.745 cv
187.592 321.745 187.438 321.675 187.298 321.535 cv
187.158 321.395 187.088 321.241 187.088 321.045 cv
187.088 320.849 187.144 320.695 187.284 320.555 cv
187.424 320.429 187.592 320.359 187.788 320.359 cv
cp
188.362 323.635 mo
188.362 328.661 li
188.362 329.053 188.39 329.319 188.446 329.445 cv
188.502 329.585 188.586 329.683 188.698 329.739 cv
188.81 329.795 189.006 329.823 189.3 329.823 cv
189.3 330.075 li
186.262 330.075 li
186.262 329.823 li
186.57 329.823 186.766 329.795 186.878 329.739 cv
186.976 329.683 187.06 329.585 187.116 329.445 cv
187.172 329.305 187.214 329.053 187.214 328.661 cv
187.214 326.253 li
187.214 325.581 187.186 325.133 187.158 324.923 cv
187.13 324.783 187.074 324.685 187.004 324.629 cv
186.934 324.573 186.836 324.531 186.724 324.531 cv
186.598 324.531 186.444 324.573 186.262 324.643 cv
186.164 324.391 li
188.054 323.635 li
188.362 323.635 li
cp
f
192.52 321.311 mo
192.52 324.951 li
194.2 324.951 li
194.592 324.951 194.872 324.867 195.054 324.699 cv
195.222 324.531 195.348 324.195 195.418 323.677 cv
195.67 323.677 li
195.67 326.827 li
195.418 326.827 li
195.404 326.463 195.348 326.197 195.264 326.029 cv
195.18 325.861 195.054 325.735 194.9 325.651 cv
194.732 325.567 194.508 325.525 194.2 325.525 cv
192.52 325.525 li
192.52 328.437 li
192.52 328.913 192.548 329.221 192.604 329.361 cv
192.646 329.473 192.744 329.571 192.884 329.655 cv
193.08 329.767 193.29 329.823 193.514 329.823 cv
193.85 329.823 li
193.85 330.075 li
189.874 330.075 li
189.874 329.823 li
190.21 329.823 li
190.588 329.823 190.868 329.711 191.036 329.487 cv
191.148 329.347 191.204 328.997 191.204 328.437 cv
191.204 322.445 li
191.204 321.983 191.162 321.675 191.106 321.521 cv
191.064 321.409 190.966 321.311 190.826 321.227 cv
190.63 321.115 190.42 321.059 190.21 321.059 cv
189.874 321.059 li
189.874 320.807 li
196.776 320.807 li
196.86 322.837 li
196.622 322.837 li
196.496 322.417 196.356 322.095 196.202 321.899 cv
196.048 321.703 195.852 321.549 195.628 321.451 cv
195.39 321.367 195.04 321.311 194.564 321.311 cv
192.52 321.311 li
cp
f
200.934 323.635 mo
201.886 323.635 202.642 323.999 203.216 324.713 cv
203.692 325.329 203.944 326.043 203.944 326.827 cv
203.944 327.387 203.804 327.961 203.538 328.535 cv
203.272 329.109 202.908 329.543 202.432 329.823 cv
201.956 330.103 201.438 330.257 200.864 330.257 cv
199.912 330.257 199.17 329.893 198.61 329.137 cv
198.134 328.507 197.91 327.793 197.91 327.009 cv
197.91 326.435 198.05 325.861 198.33 325.301 cv
198.61 324.741 198.988 324.321 199.45 324.041 cv
199.912 323.775 200.402 323.635 200.934 323.635 cv
cp
200.724 324.069 mo
200.472 324.069 200.234 324.153 199.996 324.293 cv
199.744 324.433 199.548 324.685 199.408 325.049 cv
199.254 325.413 199.184 325.875 199.184 326.435 cv
199.184 327.345 199.352 328.129 199.716 328.787 cv
200.08 329.459 200.556 329.781 201.158 329.781 cv
201.592 329.781 201.956 329.599 202.25 329.235 cv
202.53 328.871 202.684 328.255 202.684 327.359 cv
202.684 326.253 202.432 325.371 201.956 324.727 cv
201.634 324.293 201.228 324.069 200.724 324.069 cv
cp
f
206.702 323.635 mo
206.702 325.035 li
207.22 324.111 207.752 323.635 208.312 323.635 cv
208.564 323.635 208.76 323.719 208.928 323.859 cv
209.096 324.013 209.18 324.195 209.18 324.391 cv
209.18 324.573 209.11 324.727 208.998 324.839 cv
208.886 324.965 208.746 325.021 208.578 325.021 cv
208.41 325.021 208.242 324.951 208.046 324.783 cv
207.85 324.629 207.696 324.545 207.612 324.545 cv
207.346 324.685 li
207.136 324.881 206.926 325.189 206.702 325.609 cv
206.702 328.619 li
206.702 328.969 206.744 329.235 206.828 329.403 cv
206.884 329.529 206.996 329.627 207.15 329.711 cv
207.29 329.795 207.514 329.823 207.794 329.823 cv
207.794 330.075 li
204.588 330.075 li
204.588 329.823 li
204.896 329.823 205.134 329.781 205.302 329.683 cv
205.414 329.613 205.484 329.501 205.54 329.333 cv
205.568 329.249 205.582 329.025 205.582 328.661 cv
205.582 326.239 li
205.582 325.511 205.554 325.077 205.526 324.937 cv
205.498 324.797 205.442 324.699 205.358 324.629 cv
205.274 324.573 205.176 324.531 205.064 324.531 cv
204.924 324.531 204.756 324.573 204.588 324.643 cv
204.518 324.391 li
206.422 323.635 li
206.702 323.635 li
cp
f
210.58 326.169 mo
210.58 327.107 210.804 327.835 211.266 328.367 cv
211.714 328.899 212.26 329.151 212.876 329.151 cv
213.268 329.151 213.618 329.039 213.926 328.815 cv
214.234 328.591 214.486 328.213 214.696 327.653 cv
214.92 327.793 li
214.808 328.423 214.528 328.997 214.08 329.501 cv
213.618 330.005 213.044 330.257 212.344 330.257 cv
211.588 330.257 210.944 329.977 210.412 329.389 cv
209.88 328.801 209.614 328.017 209.614 327.023 cv
209.614 325.959 209.88 325.119 210.44 324.517 cv
210.986 323.929 211.672 323.621 212.512 323.621 cv
213.212 323.621 213.786 323.859 214.234 324.321 cv
214.682 324.783 214.92 325.399 214.92 326.169 cv
210.58 326.169 li
cp
210.58 325.777 mo
213.478 325.777 li
213.45 325.385 213.408 325.091 213.338 324.923 cv
213.226 324.671 213.058 324.475 212.834 324.335 cv
212.61 324.195 212.372 324.111 212.12 324.111 cv
211.742 324.111 211.406 324.265 211.112 324.559 cv
210.804 324.853 210.636 325.259 210.58 325.777 cv
cp
f
219.792 323.635 mo
219.792 325.763 li
219.568 325.763 li
219.4 325.091 219.176 324.643 218.91 324.391 cv
218.63 324.153 218.294 324.027 217.874 324.027 cv
217.538 324.027 217.286 324.111 217.09 324.279 cv
216.894 324.447 216.796 324.643 216.796 324.839 cv
216.796 325.105 216.866 325.329 217.02 325.497 cv
217.16 325.693 217.44 325.889 217.888 326.099 cv
218.882 326.575 li
219.806 327.037 220.268 327.639 220.268 328.367 cv
220.268 328.941 220.044 329.403 219.624 329.739 cv
219.19 330.075 218.714 330.257 218.182 330.257 cv
217.79 330.257 217.356 330.187 216.866 330.061 cv
216.712 330.019 216.586 329.991 216.488 329.991 cv
216.376 329.991 216.306 330.047 216.25 330.159 cv
216.026 330.159 li
216.026 327.933 li
216.25 327.933 li
216.376 328.577 216.614 329.067 216.978 329.389 cv
217.342 329.711 217.748 329.865 218.196 329.865 cv
218.504 329.865 218.756 329.781 218.952 329.585 cv
219.148 329.403 219.26 329.179 219.26 328.913 cv
219.26 328.605 219.148 328.353 218.924 328.129 cv
218.7 327.919 218.252 327.653 217.594 327.317 cv
216.936 326.995 216.502 326.701 216.306 326.421 cv
216.096 326.169 215.998 325.833 215.998 325.441 cv
215.998 324.937 216.166 324.503 216.53 324.153 cv
216.88 323.817 217.342 323.635 217.902 323.635 cv
218.14 323.635 218.434 323.691 218.798 323.789 cv
219.022 323.859 219.176 323.887 219.26 323.887 cv
219.428 323.845 li
219.456 323.817 219.512 323.747 219.568 323.635 cv
219.792 323.635 li
cp
f
223.012 321.759 mo
223.012 323.817 li
224.482 323.817 li
224.482 324.293 li
223.012 324.293 li
223.012 328.353 li
223.012 328.759 223.068 329.039 223.18 329.179 cv
223.292 329.319 223.446 329.389 223.642 329.389 cv
223.782 329.389 223.936 329.347 224.076 329.249 cv
224.216 329.165 224.314 329.025 224.398 328.829 cv
224.664 328.829 li
224.496 329.277 224.272 329.613 223.992 329.837 cv
223.698 330.061 223.404 330.159 223.096 330.159 cv
222.872 330.159 222.662 330.103 222.466 329.991 cv
222.27 329.879 222.116 329.725 222.032 329.501 cv
221.934 329.291 221.892 328.955 221.892 328.507 cv
221.892 324.293 li
220.898 324.293 li
220.898 324.069 li
221.15 323.971 221.402 323.803 221.668 323.565 cv
221.92 323.327 222.158 323.047 222.368 322.711 cv
222.466 322.543 222.606 322.221 222.802 321.759 cv
223.012 321.759 li
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
289.05 315.226 mo
289.05 191.826 li
289.05 191.605 289.229 191.426 289.45 191.426 cv
289.671 191.426 289.85 191.605 289.85 191.826 cv
289.85 315.226 li
289.85 315.447 289.671 315.626 289.45 315.626 cv
289.229 315.626 289.05 315.447 289.05 315.226 cv
289.05 315.226 li
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
274.817 320.359 mo
275.013 320.359 275.167 320.429 275.307 320.555 cv
275.433 320.695 275.503 320.849 275.503 321.045 cv
275.503 321.241 275.433 321.395 275.307 321.535 cv
275.167 321.675 275.013 321.745 274.817 321.745 cv
274.621 321.745 274.467 321.675 274.327 321.535 cv
274.187 321.395 274.117 321.241 274.117 321.045 cv
274.117 320.849 274.173 320.695 274.313 320.555 cv
274.453 320.429 274.621 320.359 274.817 320.359 cv
cp
275.391 323.635 mo
275.391 328.661 li
275.391 329.053 275.419 329.319 275.475 329.445 cv
275.531 329.585 275.615 329.683 275.727 329.739 cv
275.839 329.795 276.035 329.823 276.329 329.823 cv
276.329 330.075 li
273.291 330.075 li
273.291 329.823 li
273.599 329.823 273.795 329.795 273.907 329.739 cv
274.005 329.683 274.089 329.585 274.145 329.445 cv
274.201 329.305 274.243 329.053 274.243 328.661 cv
274.243 326.253 li
274.243 325.581 274.215 325.133 274.187 324.923 cv
274.159 324.783 274.103 324.685 274.033 324.629 cv
273.963 324.573 273.865 324.531 273.753 324.531 cv
273.627 324.531 273.473 324.573 273.291 324.643 cv
273.193 324.391 li
275.083 323.635 li
275.391 323.635 li
cp
f
276.511 320.807 mo
279.017 320.807 li
284.673 327.751 li
284.673 322.417 li
284.673 321.857 284.603 321.493 284.491 321.339 cv
284.323 321.157 284.043 321.059 283.679 321.059 cv
283.371 321.059 li
283.371 320.807 li
286.591 320.807 li
286.591 321.059 li
286.269 321.059 li
285.877 321.059 285.597 321.185 285.429 321.409 cv
285.317 321.563 285.275 321.899 285.275 322.417 cv
285.275 330.215 li
285.037 330.215 li
278.919 322.767 li
278.919 328.465 li
278.919 329.039 278.975 329.389 279.101 329.529 cv
279.269 329.725 279.535 329.823 279.899 329.823 cv
280.235 329.823 li
280.235 330.075 li
277.001 330.075 li
277.001 329.823 li
277.323 329.823 li
277.715 329.823 277.995 329.711 278.163 329.473 cv
278.261 329.333 278.317 328.997 278.317 328.465 cv
278.317 322.025 li
278.037 321.717 277.841 321.507 277.701 321.409 cv
277.561 321.311 277.365 321.213 277.099 321.115 cv
276.959 321.087 276.763 321.059 276.511 321.059 cv
276.511 320.807 li
cp
f
286.619 320.807 mo
289.125 320.807 li
294.781 327.751 li
294.781 322.417 li
294.781 321.857 294.711 321.493 294.599 321.339 cv
294.431 321.157 294.151 321.059 293.787 321.059 cv
293.479 321.059 li
293.479 320.807 li
296.699 320.807 li
296.699 321.059 li
296.377 321.059 li
295.985 321.059 295.705 321.185 295.537 321.409 cv
295.425 321.563 295.383 321.899 295.383 322.417 cv
295.383 330.215 li
295.145 330.215 li
289.027 322.767 li
289.027 328.465 li
289.027 329.039 289.083 329.389 289.209 329.529 cv
289.377 329.725 289.643 329.823 290.007 329.823 cv
290.343 329.823 li
290.343 330.075 li
287.109 330.075 li
287.109 329.823 li
287.431 329.823 li
287.823 329.823 288.103 329.711 288.271 329.473 cv
288.369 329.333 288.425 328.997 288.425 328.465 cv
288.425 322.025 li
288.145 321.717 287.949 321.507 287.809 321.409 cv
287.669 321.311 287.473 321.213 287.207 321.115 cv
287.067 321.087 286.871 321.059 286.619 321.059 cv
286.619 320.807 li
cp
f
299.821 321.311 mo
299.821 324.979 li
301.851 324.979 li
302.383 324.979 302.733 324.909 302.915 324.741 cv
303.153 324.531 303.279 324.167 303.307 323.635 cv
303.573 323.635 li
303.573 326.855 li
303.307 326.855 li
303.251 326.407 303.181 326.127 303.125 325.987 cv
303.041 325.833 302.901 325.707 302.719 325.609 cv
302.523 325.525 302.243 325.469 301.851 325.469 cv
299.821 325.469 li
299.821 328.535 li
299.821 328.955 299.835 329.207 299.877 329.291 cv
300.059 329.501 li
300.143 329.557 300.325 329.571 300.591 329.571 cv
302.159 329.571 li
302.677 329.571 303.055 329.543 303.293 329.459 cv
303.531 329.389 303.755 329.249 303.979 329.025 cv
304.259 328.745 304.553 328.325 304.847 327.751 cv
305.127 327.751 li
304.329 330.075 li
297.189 330.075 li
297.189 329.823 li
297.511 329.823 li
297.721 329.823 297.931 329.781 298.127 329.669 cv
298.267 329.599 298.365 329.487 298.421 329.347 cv
298.477 329.207 298.505 328.899 298.505 328.437 cv
298.505 322.417 li
298.505 321.829 298.449 321.465 298.337 321.325 cv
298.169 321.157 297.889 321.059 297.511 321.059 cv
297.189 321.059 li
297.189 320.807 li
304.329 320.807 li
304.427 322.837 li
304.161 322.837 li
304.063 322.361 303.951 322.025 303.839 321.843 cv
303.727 321.661 303.545 321.521 303.321 321.409 cv
303.139 321.353 302.817 321.311 302.369 321.311 cv
299.821 321.311 li
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
22.324 314.826 mo
302.171 314.826 li
302.392 314.826 302.571 315.005 302.571 315.226 cv
302.571 315.447 302.392 315.626 302.171 315.626 cv
22.324 315.626 li
22.1032 315.626 21.9239 315.447 21.9239 315.226 cv
21.9239 315.005 22.1032 314.826 22.324 314.826 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
10.6837 315.425 mo
10.6837 314.675 10.7937 314.025 11.0237 313.475 cv
11.2437 312.935 11.5537 312.525 11.9337 312.255 cv
12.2237 312.045 12.5237 311.935 12.8437 311.935 cv
13.3437 311.935 13.8037 312.195 14.2137 312.715 cv
14.7137 313.355 14.9637 314.225 14.9637 315.325 cv
14.9637 316.095 14.8537 316.745 14.6337 317.285 cv
14.4137 317.825 14.1237 318.205 13.7837 318.445 cv
13.4437 318.685 13.1137 318.805 12.7937 318.805 cv
12.1537 318.805 11.6337 318.435 11.2137 317.695 cv
10.8537 317.075 10.6837 316.315 10.6837 315.425 cv
cp
11.6437 315.545 mo
11.6437 316.465 11.7537 317.205 11.9837 317.775 cv
12.1637 318.265 12.4337 318.505 12.8137 318.505 cv
12.9837 318.505 13.1637 318.435 13.3537 318.275 cv
13.5437 318.115 13.6837 317.855 13.7837 317.475 cv
13.9337 316.915 14.0137 316.125 14.0137 315.105 cv
14.0137 314.355 13.9337 313.725 13.7737 313.215 cv
13.6537 312.845 13.5037 312.585 13.3237 312.425 cv
13.1837 312.315 13.0237 312.255 12.8337 312.255 cv
12.6137 312.255 12.4137 312.355 12.2437 312.555 cv
12.0037 312.835 11.8437 313.255 11.7637 313.835 cv
11.6837 314.415 11.6437 314.985 11.6437 315.545 cv
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
1 lc
1 lj
22.324 287.804 mo
302.171 287.804 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
9.90373 290.003 mo
9.44373 291.273 li
5.53373 291.273 li
5.53373 291.093 li
6.68373 290.053 7.49373 289.193 7.96373 288.523 cv
8.42373 287.863 8.66373 287.253 8.66373 286.703 cv
8.66373 286.283 8.53373 285.943 8.27373 285.673 cv
8.01373 285.403 7.71373 285.263 7.36373 285.263 cv
7.03373 285.263 6.74373 285.363 6.48373 285.553 cv
6.22373 285.743 6.03373 286.023 5.91373 286.383 cv
5.73373 286.383 li
5.81373 285.783 6.01373 285.323 6.35373 285.003 cv
6.69373 284.683 7.11373 284.513 7.61373 284.513 cv
8.15373 284.513 8.60373 284.693 8.96373 285.033 cv
9.32373 285.383 9.50373 285.793 9.50373 286.253 cv
9.50373 286.593 9.42373 286.923 9.27373 287.263 cv
9.02373 287.793 8.63373 288.353 8.09373 288.933 cv
7.28373 289.823 6.77373 290.353 6.57373 290.533 cv
8.30373 290.533 li
8.65373 290.533 8.90373 290.523 9.04373 290.493 cv
9.18373 290.473 9.31373 290.423 9.43373 290.343 cv
9.54373 290.263 9.64373 290.153 9.72373 290.003 cv
9.90373 290.003 li
cp
f
10.6837 288.003 mo
10.6837 287.253 10.7937 286.603 11.0237 286.053 cv
11.2437 285.513 11.5537 285.103 11.9337 284.833 cv
12.2237 284.623 12.5237 284.513 12.8437 284.513 cv
13.3437 284.513 13.8037 284.773 14.2137 285.293 cv
14.7137 285.933 14.9637 286.803 14.9637 287.903 cv
14.9637 288.673 14.8537 289.323 14.6337 289.863 cv
14.4137 290.403 14.1237 290.783 13.7837 291.023 cv
13.4437 291.263 13.1137 291.383 12.7937 291.383 cv
12.1537 291.383 11.6337 291.013 11.2137 290.273 cv
10.8537 289.653 10.6837 288.893 10.6837 288.003 cv
cp
11.6437 288.123 mo
11.6437 289.043 11.7537 289.783 11.9837 290.353 cv
12.1637 290.843 12.4337 291.083 12.8137 291.083 cv
12.9837 291.083 13.1637 291.013 13.3537 290.853 cv
13.5437 290.693 13.6837 290.433 13.7837 290.053 cv
13.9337 289.493 14.0137 288.703 14.0137 287.683 cv
14.0137 286.933 13.9337 286.303 13.7737 285.793 cv
13.6537 285.423 13.5037 285.163 13.3237 285.003 cv
13.1837 284.893 13.0237 284.833 12.8337 284.833 cv
12.6137 284.833 12.4137 284.933 12.2437 285.133 cv
12.0037 285.413 11.8437 285.833 11.7637 286.413 cv
11.6837 286.993 11.6437 287.563 11.6437 288.123 cv
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
1 lc
1 lj
22.324 260.382 mo
302.171 260.382 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
9.97373 261.41 mo
9.97373 262.1 li
9.08372 262.1 li
9.08372 263.85 li
8.28373 263.85 li
8.28373 262.1 li
5.48373 262.1 li
5.48373 261.48 li
8.55373 257.09 li
9.08372 257.09 li
9.08372 261.41 li
9.97373 261.41 li
cp
8.28373 261.41 mo
8.28373 258.12 li
5.95373 261.41 li
8.28373 261.41 li
cp
f
10.6837 260.58 mo
10.6837 259.83 10.7937 259.18 11.0237 258.63 cv
11.2437 258.09 11.5537 257.68 11.9337 257.41 cv
12.2237 257.2 12.5237 257.09 12.8437 257.09 cv
13.3437 257.09 13.8037 257.35 14.2137 257.87 cv
14.7137 258.51 14.9637 259.38 14.9637 260.48 cv
14.9637 261.25 14.8537 261.9 14.6337 262.44 cv
14.4137 262.98 14.1237 263.36 13.7837 263.6 cv
13.4437 263.84 13.1137 263.96 12.7937 263.96 cv
12.1537 263.96 11.6337 263.59 11.2137 262.85 cv
10.8537 262.23 10.6837 261.47 10.6837 260.58 cv
cp
11.6437 260.7 mo
11.6437 261.62 11.7537 262.36 11.9837 262.93 cv
12.1637 263.42 12.4337 263.66 12.8137 263.66 cv
12.9837 263.66 13.1637 263.59 13.3537 263.43 cv
13.5437 263.27 13.6837 263.01 13.7837 262.63 cv
13.9337 262.07 14.0137 261.28 14.0137 260.26 cv
14.0137 259.51 13.9337 258.88 13.7737 258.37 cv
13.6537 258 13.5037 257.74 13.3237 257.58 cv
13.1837 257.47 13.0237 257.41 12.8337 257.41 cv
12.6137 257.41 12.4137 257.51 12.2437 257.71 cv
12.0037 257.99 11.8437 258.41 11.7637 258.99 cv
11.6837 259.57 11.6437 260.14 11.6437 260.7 cv
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
1 lc
1 lj
22.324 232.959 mo
302.171 232.959 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
9.80373 229.668 mo
9.80373 229.848 li
9.37373 229.898 9.02373 229.988 8.75373 230.108 cv
8.47373 230.238 8.20373 230.438 7.94373 230.698 cv
7.68373 230.958 7.46373 231.258 7.28373 231.578 cv
7.10373 231.898 6.96373 232.288 6.85373 232.728 cv
7.31373 232.408 7.78373 232.248 8.26373 232.248 cv
8.71373 232.248 9.10373 232.438 9.43373 232.798 cv
9.76373 233.158 9.93373 233.628 9.93373 234.198 cv
9.93373 234.758 9.76373 235.258 9.43373 235.718 cv
9.03373 236.268 8.49373 236.538 7.83372 236.538 cv
7.37373 236.538 6.99373 236.398 6.68373 236.098 cv
6.06373 235.518 5.75373 234.758 5.75373 233.828 cv
5.75373 233.238 5.86373 232.678 6.10373 232.138 cv
6.34373 231.608 6.68373 231.138 7.12373 230.718 cv
7.56373 230.308 7.99373 230.028 8.39373 229.888 cv
8.79373 229.748 9.17373 229.668 9.52373 229.668 cv
9.80373 229.668 li
cp
6.77373 233.088 mo
6.71373 233.528 6.68373 233.888 6.68373 234.148 cv
6.68373 234.468 6.73373 234.808 6.85373 235.168 cv
6.96373 235.538 7.13373 235.828 7.37373 236.038 cv
7.53373 236.198 7.73373 236.268 7.97373 236.268 cv
8.25373 236.268 8.51373 236.138 8.73373 235.868 cv
8.95373 235.608 9.07373 235.228 9.07373 234.728 cv
9.07373 234.178 8.95373 233.698 8.73373 233.288 cv
8.51373 232.888 8.19373 232.678 7.79373 232.678 cv
7.67373 232.678 7.53373 232.708 7.39373 232.758 cv
7.25373 232.808 7.04373 232.918 6.77373 233.088 cv
cp
f
10.6837 233.158 mo
10.6837 232.408 10.7937 231.758 11.0237 231.208 cv
11.2437 230.668 11.5537 230.258 11.9337 229.988 cv
12.2237 229.778 12.5237 229.668 12.8437 229.668 cv
13.3437 229.668 13.8037 229.928 14.2137 230.448 cv
14.7137 231.088 14.9637 231.958 14.9637 233.058 cv
14.9637 233.828 14.8537 234.478 14.6337 235.018 cv
14.4137 235.558 14.1237 235.938 13.7837 236.178 cv
13.4437 236.418 13.1137 236.538 12.7937 236.538 cv
12.1537 236.538 11.6337 236.168 11.2137 235.428 cv
10.8537 234.808 10.6837 234.048 10.6837 233.158 cv
cp
11.6437 233.278 mo
11.6437 234.198 11.7537 234.938 11.9837 235.508 cv
12.1637 235.998 12.4337 236.238 12.8137 236.238 cv
12.9837 236.238 13.1637 236.168 13.3537 236.008 cv
13.5437 235.848 13.6837 235.588 13.7837 235.208 cv
13.9337 234.648 14.0137 233.858 14.0137 232.838 cv
14.0137 232.088 13.9337 231.458 13.7737 230.948 cv
13.6537 230.578 13.5037 230.318 13.3237 230.158 cv
13.1837 230.048 13.0237 229.988 12.8337 229.988 cv
12.6137 229.988 12.4137 230.088 12.2437 230.288 cv
12.0037 230.568 11.8437 230.988 11.7637 231.568 cv
11.6837 232.148 11.6437 232.718 11.6437 233.278 cv
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
1 lc
1 lj
22.324 205.537 mo
302.171 205.537 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
7.24373 205.676 mo
6.71373 205.246 6.37373 204.896 6.22373 204.636 cv
6.07373 204.376 6.00373 204.106 6.00373 203.826 cv
6.00373 203.396 6.16373 203.026 6.49373 202.716 cv
6.82373 202.406 7.26373 202.246 7.82373 202.246 cv
8.35373 202.246 8.78373 202.396 9.11373 202.686 cv
9.43373 202.976 9.60373 203.306 9.60373 203.676 cv
9.60373 203.926 9.51373 204.176 9.33372 204.436 cv
9.15373 204.696 8.79373 204.996 8.24373 205.336 cv
8.80373 205.786 9.18373 206.136 9.37373 206.386 cv
9.61373 206.726 9.74373 207.076 9.74373 207.436 cv
9.74373 207.906 9.56373 208.306 9.21373 208.626 cv
8.85373 208.956 8.39373 209.116 7.82373 209.116 cv
7.18373 209.116 6.69373 208.926 6.35373 208.536 cv
6.07373 208.216 5.93373 207.876 5.93373 207.496 cv
5.93373 207.206 6.02373 206.916 6.22373 206.626 cv
6.42373 206.346 6.76373 206.026 7.24373 205.676 cv
cp
8.01373 205.146 mo
8.39373 204.806 8.64373 204.526 8.74373 204.316 cv
8.84373 204.116 8.90373 203.886 8.90373 203.626 cv
8.90373 203.286 8.80373 203.026 8.61373 202.826 cv
8.42373 202.636 8.16373 202.536 7.83372 202.536 cv
7.49373 202.536 7.22373 202.636 7.02373 202.826 cv
6.81373 203.016 6.71373 203.236 6.71373 203.496 cv
6.71373 203.666 6.75373 203.836 6.84373 204.006 cv
6.92373 204.176 7.04373 204.336 7.20373 204.486 cv
8.01373 205.146 li
cp
7.47373 205.856 mo
7.19373 206.086 6.99373 206.336 6.86373 206.606 cv
6.73373 206.876 6.67373 207.166 6.67373 207.476 cv
6.67373 207.896 6.78373 208.236 7.01373 208.486 cv
7.24373 208.736 7.53373 208.856 7.89373 208.856 cv
8.24373 208.856 8.52373 208.766 8.74373 208.566 cv
8.95373 208.366 9.06373 208.126 9.06373 207.836 cv
9.06373 207.606 8.99373 207.396 8.87373 207.206 cv
8.63373 206.866 8.17373 206.416 7.47373 205.856 cv
cp
f
10.6837 205.736 mo
10.6837 204.986 10.7937 204.336 11.0237 203.786 cv
11.2437 203.246 11.5537 202.836 11.9337 202.566 cv
12.2237 202.356 12.5237 202.246 12.8437 202.246 cv
13.3437 202.246 13.8037 202.506 14.2137 203.026 cv
14.7137 203.666 14.9637 204.536 14.9637 205.636 cv
14.9637 206.406 14.8537 207.056 14.6337 207.596 cv
14.4137 208.136 14.1237 208.516 13.7837 208.756 cv
13.4437 208.996 13.1137 209.116 12.7937 209.116 cv
12.1537 209.116 11.6337 208.746 11.2137 208.006 cv
10.8537 207.386 10.6837 206.626 10.6837 205.736 cv
cp
11.6437 205.856 mo
11.6437 206.776 11.7537 207.516 11.9837 208.086 cv
12.1637 208.576 12.4337 208.816 12.8137 208.816 cv
12.9837 208.816 13.1637 208.746 13.3537 208.586 cv
13.5437 208.426 13.6837 208.166 13.7837 207.786 cv
13.9337 207.226 14.0137 206.436 14.0137 205.416 cv
14.0137 204.666 13.9337 204.036 13.7737 203.526 cv
13.6537 203.156 13.5037 202.896 13.3237 202.736 cv
13.1837 202.626 13.0237 202.566 12.8337 202.566 cv
12.6137 202.566 12.4137 202.666 12.2437 202.866 cv
12.0037 203.146 11.8437 203.566 11.7637 204.146 cv
11.6837 204.726 11.6437 205.296 11.6437 205.856 cv
cp
f
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
208.084 312.303 mo
208.126 312.084 208.148 311.86 208.148 311.633 cv
208.148 311.351 208.114 311.073 208.049 310.804 cv
286.015 308.973 li
285.972 309.192 285.95 309.416 285.95 309.643 cv
285.95 309.925 285.984 310.203 286.05 310.473 cv
208.084 312.303 li
201.152 311.799 mo
123.091 298.514 li
123.258 298.101 123.346 297.655 123.346 297.201 cv
123.346 297.145 123.345 297.09 123.342 297.035 cv
201.404 310.321 li
201.237 310.734 201.148 311.179 201.148 311.633 cv
201.148 311.689 201.15 311.744 201.152 311.799 cv
38.5363 310.111 mo
38.5417 310.033 38.5443 309.954 38.5443 309.875 cv
38.5443 309.444 38.4651 309.022 38.3147 308.628 cv
116.354 296.964 li
116.349 297.043 116.346 297.122 116.346 297.201 cv
116.346 297.631 116.426 298.053 116.576 298.448 cv
38.5363 310.111 li
.811765 .192157 .784314 .0666667 cmyk
f
34.6443 312.342 mo
34.1293 312.259 33.6501 312.016 33.2772 311.642 cv
33.2765 311.642 li
32.8077 311.174 32.5443 310.538 32.5443 309.875 cv
32.5443 309.211 32.8077 308.576 33.2765 308.107 cv
33.2772 308.107 li
33.6501 307.733 34.1293 307.49 34.6443 307.407 cv
34.6443 309.24 li
34.4005 309.394 34.2572 309.682 34.3026 309.986 cv
34.3362 310.21 34.4661 310.397 34.6443 310.509 cv
34.6443 312.342 li
35.4444 312.342 mo
35.4444 310.573 li
37.5138 310.264 li
37.432 310.783 37.1883 311.266 36.812 311.642 cv
36.8115 311.642 li
36.4385 312.016 35.9593 312.259 35.4444 312.342 cv
35.4444 309.057 mo
35.4444 307.407 li
35.9593 307.49 36.4385 307.733 36.8115 308.107 cv
36.812 308.107 li
37.0103 308.305 37.1717 308.533 37.2921 308.78 cv
35.4444 309.057 li
.811765 .188235 .780392 .0627451 cmyk
f
35.0444 312.375 mo
34.9095 312.375 34.7757 312.364 34.6443 312.342 cv
34.6443 310.509 li
34.7612 310.583 34.8989 310.625 35.0436 310.625 cv
35.0804 310.625 35.1177 310.622 35.1552 310.617 cv
35.4444 310.573 li
35.4444 312.342 li
35.313 312.364 35.1792 312.375 35.0444 312.375 cv
35.0444 312.375 li
34.6443 309.24 mo
34.6443 307.407 li
34.7757 307.385 34.9095 307.375 35.0444 307.375 cv
35.1792 307.375 35.313 307.385 35.4444 307.407 cv
35.4444 309.057 li
34.9335 309.133 li
34.8273 309.149 34.7296 309.186 34.6443 309.24 cv
.811765 .188235 .780392 .0823529 cmyk
f
35.4444 310.573 mo
35.4444 309.057 li
37.2921 308.78 li
37.4565 309.118 37.5443 309.492 37.5444 309.875 cv
37.5443 310.006 37.534 310.136 37.5138 310.264 cv
35.4444 310.573 li
34.6443 310.509 mo
34.4661 310.397 34.3362 310.21 34.3026 309.986 cv
34.2572 309.682 34.4005 309.394 34.6443 309.24 cv
34.6443 310.509 li
.894118 .207843 .866667 .0745098 cmyk
f
35.0436 310.625 mo
34.8989 310.625 34.7612 310.583 34.6443 310.509 cv
34.6443 309.24 li
34.7296 309.186 34.8273 309.149 34.9335 309.133 cv
35.4444 309.057 li
35.4444 310.573 li
35.1552 310.617 li
35.1177 310.622 35.0804 310.625 35.0436 310.625 cv
.894118 .207843 .866667 .0705882 cmyk
f
34.6443 313.352 mo
33.8632 313.262 33.1308 312.911 32.5698 312.349 cv
31.9129 311.693 31.5444 310.803 31.5444 309.875 cv
31.5444 308.946 31.9129 308.056 32.5698 307.4 cv
33.1308 306.838 33.8632 306.487 34.6443 306.398 cv
34.6443 307.407 li
34.1293 307.49 33.6501 307.733 33.2772 308.107 cv
33.2765 308.107 li
32.8077 308.576 32.5443 309.211 32.5443 309.875 cv
32.5443 310.538 32.8077 311.174 33.2765 311.642 cv
33.2772 311.642 li
33.6501 312.016 34.1293 312.259 34.6443 312.342 cv
34.6443 313.352 li
35.4444 313.352 mo
35.4444 312.342 li
35.9593 312.259 36.4385 312.016 36.8115 311.642 cv
36.812 311.642 li
37.1883 311.266 37.432 310.783 37.5138 310.264 cv
38.5363 310.111 li
38.4794 310.953 38.1198 311.749 37.5189 312.349 cv
36.9579 312.911 36.2255 313.262 35.4444 313.352 cv
37.2921 308.78 mo
37.1717 308.533 37.0103 308.305 36.812 308.107 cv
36.8115 308.107 li
36.4385 307.733 35.9593 307.49 35.4444 307.407 cv
35.4444 306.398 li
36.2255 306.487 36.9579 306.838 37.5189 307.4 cv
37.8713 307.752 38.1407 308.171 38.3147 308.628 cv
37.2921 308.78 li
.811765 .188235 .780392 .0627451 cmyk
f
35.0444 313.375 mo
35.0444 313.375 li
34.91 313.375 34.7765 313.367 34.6443 313.352 cv
34.6443 312.342 li
34.7757 312.364 34.9095 312.375 35.0444 312.375 cv
35.0444 312.375 li
35.1792 312.375 35.313 312.364 35.4444 312.342 cv
35.4444 313.352 li
35.3123 313.367 35.1787 313.375 35.0444 313.375 cv
35.4444 307.407 mo
35.313 307.385 35.1792 307.375 35.0444 307.375 cv
34.9095 307.375 34.7757 307.385 34.6443 307.407 cv
34.6443 306.398 li
34.7765 306.382 34.91 306.375 35.0444 306.375 cv
35.1787 306.375 35.3123 306.382 35.4444 306.398 cv
35.4444 307.407 li
.811765 .188235 .780392 .0823529 cmyk
f
37.5186 312.35 mo
37.5187 312.349 37.5188 312.349 37.5189 312.349 cv
37.519 312.349 37.5191 312.349 37.5192 312.349 cv
37.5186 312.35 li
32.5701 312.35 mo
32.5695 312.349 li
32.5696 312.349 32.5697 312.349 32.5698 312.349 cv
32.5699 312.349 32.57 312.349 32.5701 312.35 cv
37.5192 307.4 mo
37.5191 307.4 37.519 307.4 37.5189 307.4 cv
37.5188 307.4 37.5187 307.4 37.5186 307.4 cv
37.5192 307.4 li
32.5695 307.4 mo
32.5701 307.4 li
32.57 307.4 32.5699 307.4 32.5698 307.4 cv
32.5697 307.4 32.5696 307.4 32.5695 307.4 cv
.811765 .188235 .780392 .0627451 cmyk
f
37.5138 310.264 mo
37.534 310.136 37.5443 310.006 37.5444 309.875 cv
37.5443 309.492 37.4565 309.118 37.2921 308.78 cv
38.3147 308.628 li
38.4651 309.022 38.5443 309.444 38.5443 309.875 cv
38.5443 309.954 38.5417 310.033 38.5363 310.111 cv
37.5138 310.264 li
.894118 .207843 .866667 .0745098 cmyk
f
119.446 299.669 mo
118.931 299.585 118.452 299.342 118.079 298.968 cv
118.078 298.968 li
117.88 298.77 117.719 298.542 117.598 298.295 cv
119.446 298.019 li
119.446 299.669 li
120.246 299.669 mo
120.246 298.03 li
122.072 298.34 li
121.954 298.57 121.8 298.782 121.614 298.968 cv
121.613 298.968 li
121.241 299.342 120.761 299.585 120.246 299.669 cv
.811765 .188235 .780392 .0627451 cmyk
f
119.846 299.701 mo
119.711 299.701 119.578 299.69 119.446 299.669 cv
119.446 298.019 li
119.839 297.96 li
120.246 298.03 li
120.246 299.669 li
120.115 299.69 119.981 299.701 119.846 299.701 cv
119.846 299.701 li
.811765 .188235 .780392 .0823529 cmyk
f
122.323 296.861 mo
120.246 296.508 li
120.246 294.733 li
120.761 294.816 121.241 295.059 121.613 295.433 cv
121.614 295.434 li
122.002 295.821 122.25 296.323 122.323 296.861 cv
117.377 296.812 mo
117.458 296.292 117.702 295.809 118.078 295.434 cv
118.079 295.433 li
118.452 295.059 118.931 294.816 119.446 294.733 cv
119.446 296.502 li
117.377 296.812 li
.811765 .188235 .780392 .0627451 cmyk
f
120.246 296.508 mo
119.972 296.461 li
119.735 296.459 li
119.446 296.502 li
119.446 294.733 li
119.578 294.712 119.711 294.701 119.846 294.701 cv
119.981 294.701 120.115 294.712 120.246 294.733 cv
120.246 296.508 li
.811765 .188235 .780392 .0823529 cmyk
f
122.072 298.34 mo
120.246 298.03 li
120.246 296.508 li
122.323 296.861 li
122.339 296.973 122.346 297.087 122.346 297.201 cv
122.346 297.601 122.25 297.991 122.072 298.34 cv
117.598 298.295 mo
117.434 297.957 117.346 297.584 117.346 297.201 cv
117.346 297.07 117.357 296.939 117.377 296.812 cv
119.446 296.502 li
119.446 298.019 li
117.598 298.295 li
.894118 .207843 .866667 .0745098 cmyk
f
120.246 298.03 mo
119.839 297.96 li
119.446 298.019 li
119.446 296.502 li
119.735 296.459 li
119.972 296.461 li
120.246 296.508 li
120.246 298.03 li
.894118 .207843 .866667 .0705882 cmyk
f
119.446 300.678 mo
118.665 300.588 117.933 300.237 117.372 299.675 cv
117.019 299.323 116.75 298.904 116.576 298.448 cv
117.598 298.295 li
117.719 298.542 117.88 298.77 118.078 298.968 cv
118.079 298.968 li
118.452 299.342 118.931 299.585 119.446 299.669 cv
119.446 300.678 li
120.246 300.678 mo
120.246 299.669 li
120.761 299.585 121.241 299.342 121.613 298.968 cv
121.614 298.968 li
121.8 298.782 121.954 298.57 122.072 298.34 cv
123.091 298.514 li
122.916 298.945 122.656 299.34 122.321 299.675 cv
121.76 300.237 121.027 300.588 120.246 300.678 cv
.811765 .188235 .780392 .0627451 cmyk
f
119.846 300.701 mo
119.846 300.701 li
119.712 300.701 119.578 300.693 119.446 300.678 cv
119.446 299.669 li
119.578 299.69 119.711 299.701 119.846 299.701 cv
119.846 299.701 li
119.981 299.701 120.115 299.69 120.246 299.669 cv
120.246 300.678 li
120.114 300.693 119.981 300.701 119.846 300.701 cv
.811765 .188235 .780392 .0823529 cmyk
f
123.342 297.035 mo
122.323 296.861 li
122.25 296.323 122.002 295.821 121.614 295.434 cv
121.613 295.433 li
121.241 295.059 120.761 294.816 120.246 294.733 cv
120.246 293.724 li
121.027 293.813 121.76 294.164 122.321 294.726 cv
122.939 295.343 123.301 296.167 123.342 297.035 cv
116.354 296.964 mo
116.411 296.122 116.771 295.326 117.372 294.726 cv
117.933 294.164 118.665 293.813 119.446 293.724 cv
119.446 294.733 li
118.931 294.816 118.452 295.059 118.079 295.433 cv
118.078 295.434 li
117.702 295.809 117.458 296.292 117.377 296.812 cv
116.354 296.964 li
.811765 .188235 .780392 .0627451 cmyk
f
120.246 294.733 mo
120.115 294.712 119.981 294.701 119.846 294.701 cv
119.711 294.701 119.578 294.712 119.446 294.733 cv
119.446 293.724 li
119.578 293.708 119.712 293.701 119.846 293.701 cv
119.981 293.701 120.114 293.708 120.246 293.724 cv
120.246 294.733 li
.811765 .188235 .780392 .0823529 cmyk
f
123.091 298.514 mo
122.072 298.34 li
122.25 297.991 122.346 297.601 122.346 297.201 cv
122.346 297.087 122.339 296.973 122.323 296.861 cv
123.342 297.035 li
123.345 297.09 123.346 297.145 123.346 297.201 cv
123.346 297.655 123.258 298.101 123.091 298.514 cv
116.576 298.448 mo
116.426 298.053 116.346 297.631 116.346 297.201 cv
116.346 297.122 116.349 297.043 116.354 296.964 cv
117.377 296.812 li
117.357 296.939 117.346 297.07 117.346 297.201 cv
117.346 297.584 117.434 297.957 117.598 298.295 cv
116.576 298.448 li
.894118 .207843 .866667 .0745098 cmyk
f
122.321 299.676 mo
122.321 299.675 122.321 299.675 122.321 299.675 cv
122.321 299.675 122.321 299.675 122.321 299.675 cv
122.321 299.676 li
117.372 299.676 mo
117.371 299.675 li
117.372 299.675 117.372 299.675 117.372 299.675 cv
117.372 299.675 117.372 299.675 117.372 299.676 cv
122.321 294.727 mo
122.321 294.726 122.321 294.726 122.321 294.726 cv
122.321 294.726 122.321 294.726 122.321 294.726 cv
122.321 294.727 li
117.371 294.727 mo
117.372 294.726 li
117.372 294.726 117.372 294.726 117.372 294.726 cv
117.372 294.726 117.372 294.726 117.371 294.727 cv
.811765 .188235 .780392 .0627451 cmyk
f
205.048 314.101 mo
205.048 312.375 li
207.05 312.328 li
206.934 312.73 206.717 313.1 206.416 313.4 cv
206.415 313.401 li
206.043 313.775 205.563 314.018 205.048 314.101 cv
204.248 314.101 mo
203.733 314.018 203.254 313.775 202.881 313.401 cv
202.881 313.4 li
202.492 313.013 202.245 312.511 202.172 311.973 cv
204.248 312.326 li
204.248 314.101 li
f
204.648 314.133 mo
204.513 314.133 204.38 314.122 204.248 314.101 cv
204.248 312.326 li
204.522 312.373 li
204.666 312.384 li
205.048 312.375 li
205.048 314.101 li
204.917 314.122 204.783 314.133 204.648 314.133 cv
204.648 314.133 li
.811765 .188235 .780392 .0823529 cmyk
f
205.048 310.874 mo
205.048 309.165 li
205.563 309.249 206.043 309.492 206.415 309.866 cv
206.416 309.866 li
206.689 310.139 206.893 310.469 207.015 310.828 cv
205.048 310.874 li
204.248 310.805 mo
202.423 310.494 li
202.541 310.264 202.694 310.052 202.881 309.866 cv
202.881 309.866 li
203.254 309.492 203.733 309.249 204.248 309.165 cv
204.248 310.805 li
.811765 .188235 .780392 .0627451 cmyk
f
204.703 310.882 mo
204.248 310.805 li
204.248 309.165 li
204.38 309.144 204.513 309.133 204.648 309.133 cv
204.783 309.133 204.917 309.144 205.048 309.165 cv
205.048 310.874 li
204.703 310.882 li
.811765 .188235 .780392 .0823529 cmyk
f
205.048 312.375 mo
205.048 310.874 li
207.015 310.828 li
207.102 311.085 207.148 311.357 207.148 311.633 cv
207.148 311.87 207.115 312.104 207.05 312.328 cv
205.048 312.375 li
204.248 312.326 mo
202.172 311.973 li
202.156 311.861 202.148 311.748 202.148 311.633 cv
202.148 311.233 202.244 310.843 202.423 310.494 cv
204.248 310.805 li
204.248 312.326 li
.894118 .207843 .866667 .0745098 cmyk
f
204.666 312.384 mo
204.522 312.373 li
204.248 312.326 li
204.248 310.805 li
204.703 310.882 li
205.048 310.874 li
205.048 312.375 li
204.666 312.384 li
.894118 .207843 .866667 .0705882 cmyk
f
206.082 314.826 mo
205.048 314.826 li
205.048 314.101 li
205.563 314.018 206.043 313.775 206.415 313.401 cv
206.416 313.4 li
206.717 313.1 206.934 312.73 207.05 312.328 cv
208.084 312.303 li
207.951 312.982 207.619 313.612 207.123 314.108 cv
207.123 314.107 li
206.82 314.411 206.467 314.653 206.082 314.826 cv
204.248 314.826 mo
203.214 314.826 li
202.83 314.654 202.477 314.411 202.174 314.108 cv
201.556 313.491 201.193 312.667 201.152 311.799 cv
202.172 311.973 li
202.245 312.511 202.492 313.013 202.881 313.4 cv
202.881 313.401 li
203.254 313.775 203.733 314.018 204.248 314.101 cv
204.248 314.826 li
.811765 .188235 .780392 .0627451 cmyk
f
205.048 314.826 mo
204.248 314.826 li
204.248 314.101 li
204.38 314.122 204.513 314.133 204.648 314.133 cv
204.648 314.133 li
204.783 314.133 204.917 314.122 205.048 314.101 cv
205.048 314.826 li
.811765 .188235 .780392 .0823529 cmyk
f
204.648 315.133 mo
204.648 315.133 li
204.149 315.133 203.661 315.027 203.214 314.826 cv
204.248 314.826 li
205.048 314.826 li
206.082 314.826 li
205.636 315.027 205.147 315.133 204.648 315.133 cv
f
207.015 310.828 mo
206.893 310.469 206.689 310.139 206.416 309.866 cv
206.415 309.866 li
206.043 309.492 205.563 309.249 205.048 309.165 cv
205.048 308.156 li
205.83 308.246 206.562 308.597 207.123 309.159 cv
207.123 309.158 li
207.58 309.615 207.898 310.186 208.049 310.804 cv
207.015 310.828 li
202.423 310.494 mo
201.404 310.321 li
201.578 309.89 201.838 309.494 202.174 309.159 cv
202.735 308.597 203.467 308.246 204.248 308.156 cv
204.248 309.165 li
203.733 309.249 203.254 309.492 202.881 309.866 cv
202.881 309.866 li
202.694 310.052 202.541 310.264 202.423 310.494 cv
.811765 .188235 .780392 .0627451 cmyk
f
204.248 309.165 mo
204.248 308.156 li
204.38 308.141 204.514 308.133 204.648 308.133 cv
204.783 308.133 204.916 308.141 205.048 308.156 cv
205.048 309.165 li
204.917 309.144 204.783 309.133 204.648 309.133 cv
204.513 309.133 204.38 309.144 204.248 309.165 cv
.811765 .188235 .780392 .0823529 cmyk
f
207.05 312.328 mo
207.115 312.104 207.148 311.87 207.148 311.633 cv
207.148 311.357 207.102 311.085 207.015 310.828 cv
208.049 310.804 li
208.114 311.073 208.148 311.351 208.148 311.633 cv
208.148 311.86 208.126 312.084 208.084 312.303 cv
207.05 312.328 li
202.172 311.973 mo
201.152 311.799 li
201.15 311.744 201.148 311.689 201.148 311.633 cv
201.148 311.179 201.237 310.734 201.404 310.321 cv
202.423 310.494 li
202.244 310.843 202.148 311.233 202.148 311.633 cv
202.148 311.748 202.156 311.861 202.172 311.973 cv
.894118 .207843 .866667 .0745098 cmyk
f
202.174 314.108 mo
202.173 314.107 li
202.174 314.108 202.174 314.108 202.174 314.108 cv
202.174 314.108 202.174 314.108 202.174 314.108 cv
202.173 309.159 mo
202.174 309.158 li
202.174 309.158 202.174 309.159 202.174 309.159 cv
202.174 309.159 202.174 309.159 202.173 309.159 cv
.811765 .188235 .780392 .0627451 cmyk
f
289.85 312.111 mo
289.85 310.277 li
290.066 310.141 290.207 309.898 290.2 309.625 cv
290.194 309.364 290.055 309.138 289.85 309.008 cv
289.85 307.175 li
290.365 307.259 290.845 307.502 291.218 307.875 cv
291.218 307.876 li
291.687 308.344 291.95 308.979 291.95 309.643 cv
291.95 310.306 291.687 310.942 291.218 311.41 cv
291.218 311.411 li
290.845 311.784 290.365 312.027 289.85 312.111 cv
289.05 312.111 mo
288.535 312.027 288.056 311.784 287.683 311.411 cv
287.683 311.41 li
287.409 311.137 287.206 310.807 287.084 310.448 cv
289.05 310.402 li
289.05 312.111 li
287.049 308.949 mo
287.165 308.547 287.381 308.177 287.683 307.876 cv
287.683 307.875 li
288.056 307.502 288.535 307.259 289.05 307.175 cv
289.05 308.902 li
287.049 308.949 li
f
289.45 312.143 mo
289.315 312.143 289.182 312.132 289.05 312.111 cv
289.05 310.402 li
289.468 310.392 li
289.609 310.389 289.739 310.347 289.85 310.277 cv
289.85 312.111 li
289.719 312.132 289.585 312.143 289.45 312.143 cv
289.45 312.143 li
289.85 309.008 mo
289.734 308.935 289.597 308.893 289.451 308.893 cv
289.445 308.893 289.439 308.893 289.433 308.893 cv
289.05 308.902 li
289.05 307.175 li
289.182 307.154 289.315 307.143 289.45 307.143 cv
289.585 307.143 289.719 307.154 289.85 307.175 cv
289.85 309.008 li
.811765 .188235 .780392 .0823529 cmyk
f
287.084 310.448 mo
286.996 310.191 286.95 309.92 286.95 309.643 cv
286.95 309.406 286.984 309.172 287.049 308.949 cv
289.05 308.902 li
289.05 310.402 li
287.084 310.448 li
289.85 310.277 mo
289.85 309.008 li
290.055 309.138 290.194 309.364 290.2 309.625 cv
290.207 309.898 290.066 310.141 289.85 310.277 cv
.894118 .207843 .866667 .0745098 cmyk
f
289.05 310.402 mo
289.05 308.902 li
289.433 308.893 li
289.439 308.893 289.445 308.893 289.451 308.893 cv
289.597 308.893 289.734 308.935 289.85 309.008 cv
289.85 310.277 li
289.739 310.347 289.609 310.389 289.468 310.392 cv
289.05 310.402 li
.894118 .207843 .866667 .0705882 cmyk
f
289.85 313.12 mo
289.85 312.111 li
290.365 312.027 290.845 311.784 291.218 311.411 cv
291.218 311.41 li
291.687 310.942 291.95 310.306 291.95 309.643 cv
291.95 308.979 291.687 308.344 291.218 307.876 cv
291.218 307.875 li
290.845 307.502 290.365 307.259 289.85 307.175 cv
289.85 306.166 li
290.632 306.256 291.364 306.607 291.925 307.169 cv
291.925 307.168 li
292.582 307.824 292.95 308.714 292.95 309.643 cv
292.95 310.572 292.582 311.462 291.925 312.118 cv
291.925 312.117 li
291.364 312.679 290.632 313.03 289.85 313.12 cv
289.05 313.12 mo
288.269 313.03 287.537 312.679 286.976 312.118 cv
286.518 311.661 286.201 311.09 286.05 310.473 cv
287.084 310.448 li
287.206 310.807 287.409 311.137 287.683 311.41 cv
287.683 311.411 li
288.056 311.784 288.535 312.027 289.05 312.111 cv
289.05 313.12 li
286.015 308.973 mo
286.147 308.294 286.479 307.664 286.976 307.168 cv
287.537 306.607 288.269 306.256 289.05 306.166 cv
289.05 307.175 li
288.535 307.259 288.056 307.502 287.683 307.875 cv
287.683 307.876 li
287.381 308.177 287.165 308.547 287.049 308.949 cv
286.015 308.973 li
.811765 .188235 .780392 .0627451 cmyk
f
289.45 313.143 mo
289.45 313.143 li
289.316 313.143 289.183 313.135 289.05 313.12 cv
289.05 312.111 li
289.182 312.132 289.315 312.143 289.45 312.143 cv
289.45 312.143 li
289.585 312.143 289.719 312.132 289.85 312.111 cv
289.85 313.12 li
289.718 313.135 289.585 313.143 289.45 313.143 cv
289.05 307.175 mo
289.05 306.166 li
289.183 306.151 289.316 306.143 289.45 306.143 cv
289.585 306.143 289.718 306.151 289.85 306.166 cv
289.85 307.175 li
289.719 307.154 289.585 307.143 289.45 307.143 cv
289.315 307.143 289.182 307.154 289.05 307.175 cv
.811765 .188235 .780392 .0823529 cmyk
f
286.05 310.473 mo
285.984 310.203 285.95 309.925 285.95 309.643 cv
285.95 309.416 285.972 309.192 286.015 308.973 cv
287.049 308.949 li
286.984 309.172 286.95 309.406 286.95 309.643 cv
286.95 309.92 286.996 310.191 287.084 310.448 cv
286.05 310.473 li
.894118 .207843 .866667 .0745098 cmyk
f
286.976 312.118 mo
286.976 312.117 li
286.976 312.117 286.976 312.117 286.976 312.118 cv
286.976 312.118 286.976 312.118 286.976 312.118 cv
286.976 307.169 mo
286.976 307.168 li
286.976 307.168 286.976 307.168 286.976 307.168 cv
286.976 307.169 286.976 307.169 286.976 307.169 cv
.811765 .188235 .780392 .0627451 cmyk
f
grestore
gsave
22.3238 315.226 mo
302.171 315.226 li
302.171 191.826 li
22.3238 191.826 li
22.3238 315.226 li
clp
1.5 lw
1 lc
1 lj
35.0443 200.857 mo
119.846 211.726 li
204.648 205.652 li
289.45 195.732 li
0 .550439 .957794 0 cmyk
@
35.0443 203.857 mo
35.8403 203.857 36.6033 203.541 37.1653 202.978 cv
37.7283 202.416 38.0443 201.653 38.0443 200.857 cv
38.0443 200.061 37.7283 199.298 37.1653 198.736 cv
36.6033 198.173 35.8403 197.857 35.0443 197.857 cv
34.2483 197.857 33.4853 198.173 32.9233 198.736 cv
32.3603 199.298 32.0443 200.061 32.0443 200.857 cv
32.0443 201.653 32.3603 202.416 32.9233 202.978 cv
33.4853 203.541 34.2483 203.857 35.0443 203.857 cv
cp
f
1 lw
0 lc
35.0443 203.857 mo
35.8403 203.857 36.6033 203.541 37.1653 202.978 cv
37.7283 202.416 38.0443 201.653 38.0443 200.857 cv
38.0443 200.061 37.7283 199.298 37.1653 198.736 cv
36.6033 198.173 35.8403 197.857 35.0443 197.857 cv
34.2483 197.857 33.4853 198.173 32.9233 198.736 cv
32.3603 199.298 32.0443 200.061 32.0443 200.857 cv
32.0443 201.653 32.3603 202.416 32.9233 202.978 cv
33.4853 203.541 34.2483 203.857 35.0443 203.857 cv
cp
@
119.846 214.726 mo
120.642 214.726 121.405 214.41 121.967 213.847 cv
122.53 213.285 122.846 212.522 122.846 211.726 cv
122.846 210.93 122.53 210.167 121.967 209.605 cv
121.405 209.042 120.642 208.726 119.846 208.726 cv
119.05 208.726 118.287 209.042 117.725 209.605 cv
117.162 210.167 116.846 210.93 116.846 211.726 cv
116.846 212.522 117.162 213.285 117.725 213.847 cv
118.287 214.41 119.05 214.726 119.846 214.726 cv
cp
f
119.846 214.726 mo
120.642 214.726 121.405 214.41 121.967 213.847 cv
122.53 213.285 122.846 212.522 122.846 211.726 cv
122.846 210.93 122.53 210.167 121.967 209.605 cv
121.405 209.042 120.642 208.726 119.846 208.726 cv
119.05 208.726 118.287 209.042 117.725 209.605 cv
117.162 210.167 116.846 210.93 116.846 211.726 cv
116.846 212.522 117.162 213.285 117.725 213.847 cv
118.287 214.41 119.05 214.726 119.846 214.726 cv
cp
@
204.648 208.652 mo
205.444 208.652 206.207 208.336 206.769 207.773 cv
207.332 207.211 207.648 206.448 207.648 205.652 cv
207.648 204.856 207.332 204.093 206.769 203.531 cv
206.207 202.968 205.444 202.652 204.648 202.652 cv
203.852 202.652 203.089 202.968 202.527 203.531 cv
201.964 204.093 201.648 204.856 201.648 205.652 cv
201.648 206.448 201.964 207.211 202.527 207.773 cv
203.089 208.336 203.852 208.652 204.648 208.652 cv
cp
f
204.648 208.652 mo
205.444 208.652 206.207 208.336 206.769 207.773 cv
207.332 207.211 207.648 206.448 207.648 205.652 cv
207.648 204.856 207.332 204.093 206.769 203.531 cv
206.207 202.968 205.444 202.652 204.648 202.652 cv
203.852 202.652 203.089 202.968 202.527 203.531 cv
201.964 204.093 201.648 204.856 201.648 205.652 cv
201.648 206.448 201.964 207.211 202.527 207.773 cv
203.089 208.336 203.852 208.652 204.648 208.652 cv
cp
@
289.45 198.732 mo
290.246 198.732 291.009 198.416 291.571 197.853 cv
292.134 197.291 292.45 196.528 292.45 195.732 cv
292.45 194.936 292.134 194.173 291.571 193.611 cv
291.009 193.048 290.246 192.732 289.45 192.732 cv
288.654 192.732 287.891 193.048 287.329 193.611 cv
286.766 194.173 286.45 194.936 286.45 195.732 cv
286.45 196.528 286.766 197.291 287.329 197.853 cv
287.891 198.416 288.654 198.732 289.45 198.732 cv
cp
f
289.45 198.732 mo
290.246 198.732 291.009 198.416 291.571 197.853 cv
292.134 197.291 292.45 196.528 292.45 195.732 cv
292.45 194.936 292.134 194.173 291.571 193.611 cv
291.009 193.048 290.246 192.732 289.45 192.732 cv
288.654 192.732 287.891 193.048 287.329 193.611 cv
286.766 194.173 286.45 194.936 286.45 195.732 cv
286.45 196.528 286.766 197.291 287.329 197.853 cv
287.891 198.416 288.654 198.732 289.45 198.732 cv
cp
@
grestore
22.324 315.226 mo
22.324 191.826 li
1 /0 /CSD get_res sepcs
.2 sep
@
302.171 315.226 mo
302.171 191.826 li
@
22.324 315.226 mo
302.171 315.226 li
@
22.324 191.826 mo
302.171 191.826 li
@
136.552 189.857 mo
136.552 190.145 li
135.752 189.745 135.096 189.281 134.584 188.753 cv
133.816 187.985 133.24 187.105 132.84 186.097 cv
132.424 185.073 132.232 184.017 132.232 182.897 cv
132.232 181.297 132.616 179.825 133.416 178.481 cv
134.216 177.153 135.256 176.209 136.552 175.633 cv
136.552 175.953 li
135.896 176.305 135.368 176.801 134.952 177.409 cv
134.536 178.033 134.232 178.817 134.04 179.745 cv
133.832 180.689 133.736 181.681 133.736 182.705 cv
133.736 183.825 133.816 184.833 133.992 185.729 cv
134.12 186.449 134.296 187.009 134.488 187.441 cv
134.68 187.873 134.936 188.289 135.256 188.705 cv
135.576 189.105 136.008 189.489 136.552 189.857 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
146.536 175.905 mo
146.776 179.505 li
146.536 179.505 li
146.216 178.433 145.752 177.665 145.144 177.185 cv
144.536 176.705 143.832 176.465 143 176.465 cv
142.296 176.465 141.656 176.657 141.08 177.009 cv
140.504 177.361 140.056 177.937 139.736 178.705 cv
139.416 179.489 139.256 180.465 139.256 181.617 cv
139.256 182.577 139.4 183.409 139.72 184.113 cv
140.024 184.817 140.488 185.361 141.112 185.729 cv
141.72 186.113 142.424 186.289 143.224 186.289 cv
143.896 186.289 144.504 186.145 145.032 185.857 cv
145.56 185.569 146.136 184.977 146.776 184.097 cv
147.016 184.257 li
146.488 185.201 145.864 185.889 145.16 186.321 cv
144.456 186.737 143.608 186.961 142.632 186.961 cv
140.872 186.961 139.528 186.321 138.568 185.025 cv
137.832 184.065 137.48 182.913 137.48 181.601 cv
137.48 180.545 137.704 179.585 138.184 178.689 cv
138.664 177.809 139.32 177.121 140.152 176.641 cv
140.984 176.161 141.88 175.905 142.872 175.905 cv
143.64 175.905 144.392 176.097 145.144 176.465 cv
145.352 176.593 145.512 176.641 145.608 176.641 cv
145.736 176.641 145.864 176.593 145.976 176.481 cv
146.104 176.353 146.2 176.161 146.264 175.905 cv
146.536 175.905 li
cp
f
147.928 175.953 mo
147.928 175.633 li
148.728 176.017 149.384 176.481 149.912 177.009 cv
150.648 177.777 151.224 178.657 151.64 179.681 cv
152.04 180.705 152.248 181.777 152.248 182.881 cv
152.248 184.513 151.848 185.985 151.048 187.297 cv
150.248 188.609 149.208 189.569 147.928 190.145 cv
147.928 189.857 li
148.568 189.489 149.096 188.993 149.512 188.385 cv
149.928 187.777 150.232 186.993 150.44 186.065 cv
150.632 185.137 150.744 184.145 150.744 183.121 cv
150.744 182.017 150.648 181.009 150.488 180.081 cv
150.344 179.377 150.184 178.801 149.992 178.369 cv
149.8 177.937 149.528 177.521 149.208 177.105 cv
148.888 176.705 148.456 176.321 147.928 175.953 cv
cp
f
160.184 176.721 mo
160.184 180.881 li
162.104 180.881 li
162.552 180.881 162.872 180.785 163.08 180.593 cv
163.272 180.401 163.416 180.017 163.496 179.425 cv
163.784 179.425 li
163.784 183.025 li
163.496 183.025 li
163.48 182.609 163.416 182.305 163.32 182.113 cv
163.224 181.921 163.08 181.777 162.904 181.681 cv
162.712 181.585 162.456 181.537 162.104 181.537 cv
160.184 181.537 li
160.184 184.865 li
160.184 185.409 160.216 185.761 160.28 185.921 cv
160.328 186.049 160.44 186.161 160.6 186.257 cv
160.824 186.385 161.064 186.449 161.32 186.449 cv
161.704 186.449 li
161.704 186.737 li
157.16 186.737 li
157.16 186.449 li
157.544 186.449 li
157.976 186.449 158.296 186.321 158.488 186.065 cv
158.616 185.905 158.68 185.505 158.68 184.865 cv
158.68 178.017 li
158.68 177.489 158.632 177.137 158.568 176.961 cv
158.52 176.833 158.408 176.721 158.248 176.625 cv
158.024 176.497 157.784 176.433 157.544 176.433 cv
157.16 176.433 li
157.16 176.145 li
165.048 176.145 li
165.144 178.465 li
164.872 178.465 li
164.728 177.985 164.568 177.617 164.392 177.393 cv
164.216 177.169 163.992 176.993 163.736 176.881 cv
163.464 176.785 163.064 176.721 162.52 176.721 cv
160.184 176.721 li
cp
f
169.08 181.777 mo
169.08 184.865 li
169.08 185.537 169.144 185.937 169.304 186.097 cv
169.496 186.337 169.784 186.449 170.2 186.449 cv
170.6 186.449 li
170.6 186.737 li
166.072 186.737 li
166.072 186.449 li
166.472 186.449 li
166.904 186.449 167.224 186.305 167.432 186.017 cv
167.528 185.857 167.576 185.473 167.576 184.865 cv
167.576 178.017 li
167.576 177.361 167.496 176.945 167.368 176.769 cv
167.16 176.545 166.856 176.433 166.472 176.433 cv
166.072 176.433 li
166.072 176.145 li
169.944 176.145 li
170.888 176.145 171.64 176.257 172.184 176.449 cv
172.728 176.641 173.192 176.977 173.576 177.425 cv
173.944 177.889 174.136 178.433 174.136 179.073 cv
174.136 179.937 173.848 180.641 173.272 181.185 cv
172.696 181.729 171.896 182.001 170.856 182.001 cv
170.6 182.001 170.312 181.985 170.024 181.953 cv
169.736 181.921 169.416 181.857 169.08 181.777 cv
cp
169.08 181.329 mo
169.352 181.393 169.592 181.425 169.816 181.457 cv
170.024 181.489 170.2 181.489 170.36 181.489 cv
170.904 181.489 171.368 181.281 171.768 180.865 cv
172.152 180.449 172.36 179.905 172.36 179.233 cv
172.36 178.785 172.264 178.353 172.072 177.953 cv
171.88 177.569 171.624 177.265 171.272 177.073 cv
170.92 176.881 170.536 176.769 170.104 176.769 cv
169.832 176.769 169.496 176.833 169.08 176.929 cv
169.08 181.329 li
cp
f
185.512 186.737 mo
182.68 186.737 li
179.096 181.777 li
178.824 181.793 178.6 181.793 178.44 181.793 cv
178.216 181.793 li
177.992 181.777 li
177.992 184.865 li
177.992 185.537 178.056 185.937 178.2 186.097 cv
178.392 186.337 178.696 186.449 179.096 186.449 cv
179.512 186.449 li
179.512 186.737 li
174.968 186.737 li
174.968 186.449 li
175.368 186.449 li
175.816 186.449 176.136 186.305 176.328 186.017 cv
176.424 185.857 176.488 185.473 176.488 184.865 cv
176.488 178.017 li
176.488 177.361 176.408 176.945 176.28 176.769 cv
176.072 176.545 175.768 176.433 175.368 176.433 cv
174.968 176.433 li
174.968 176.145 li
178.824 176.145 li
179.944 176.145 180.776 176.241 181.32 176.401 cv
181.848 176.561 182.296 176.865 182.68 177.297 cv
183.048 177.745 183.24 178.257 183.24 178.865 cv
183.24 179.521 183.016 180.081 182.6 180.561 cv
182.168 181.041 181.512 181.393 180.632 181.585 cv
182.808 184.625 li
183.304 185.329 183.736 185.793 184.104 186.017 cv
184.456 186.241 184.936 186.385 185.512 186.449 cv
185.512 186.737 li
cp
177.992 181.297 mo
178.088 181.297 178.168 181.297 178.248 181.297 cv
178.424 181.297 li
179.432 181.297 180.2 181.089 180.712 180.641 cv
181.224 180.209 181.48 179.649 181.48 178.977 cv
181.48 178.321 181.272 177.777 180.856 177.361 cv
180.44 176.945 179.88 176.737 179.208 176.737 cv
178.904 176.737 178.504 176.785 177.992 176.881 cv
177.992 181.297 li
cp
f
200.248 175.905 mo
192.52 187.153 li
191.832 187.153 li
199.544 175.905 li
200.248 175.905 li
cp
192.216 175.905 mo
192.92 175.905 193.464 176.209 193.848 176.785 cv
194.232 177.361 194.424 178.033 194.424 178.785 cv
194.424 179.697 194.2 180.401 193.768 180.897 cv
193.32 181.393 192.808 181.633 192.2 181.633 cv
191.784 181.633 191.4 181.521 191.064 181.297 cv
190.712 181.073 190.44 180.721 190.232 180.273 cv
190.024 179.825 189.928 179.329 189.928 178.785 cv
189.928 178.241 190.024 177.745 190.232 177.281 cv
190.44 176.817 190.728 176.465 191.096 176.241 cv
191.448 176.017 191.832 175.905 192.216 175.905 cv
cp
192.184 176.337 mo
191.912 176.337 191.672 176.497 191.48 176.817 cv
191.272 177.137 191.176 177.777 191.176 178.769 cv
191.176 179.505 191.224 180.049 191.352 180.433 cv
191.432 180.721 191.56 180.945 191.752 181.089 cv
191.864 181.185 192.008 181.233 192.168 181.233 cv
192.408 181.233 192.616 181.105 192.808 180.833 cv
193.064 180.433 193.192 179.761 193.192 178.817 cv
193.192 177.841 193.064 177.153 192.808 176.737 cv
192.648 176.481 192.44 176.337 192.184 176.337 cv
cp
199.88 181.473 mo
200.248 181.473 200.616 181.601 200.984 181.825 cv
201.352 182.065 201.64 182.401 201.832 182.849 cv
202.024 183.297 202.136 183.793 202.136 184.337 cv
202.136 185.265 201.912 185.953 201.464 186.433 cv
201.016 186.913 200.504 187.153 199.912 187.153 cv
199.528 187.153 199.144 187.025 198.792 186.801 cv
198.44 186.577 198.152 186.257 197.96 185.825 cv
197.752 185.393 197.656 184.897 197.656 184.337 cv
197.656 183.793 197.752 183.281 197.96 182.833 cv
198.152 182.385 198.44 182.033 198.792 181.809 cv
199.144 181.585 199.512 181.473 199.88 181.473 cv
cp
199.896 181.889 mo
199.64 181.889 199.416 182.033 199.24 182.321 cv
199 182.689 198.888 183.377 198.888 184.385 cv
198.888 185.313 199 185.969 199.256 186.337 cv
199.416 186.609 199.64 186.737 199.896 186.737 cv
200.12 186.737 200.344 186.593 200.536 186.305 cv
200.776 185.921 200.904 185.281 200.904 184.353 cv
200.904 183.377 200.776 182.689 200.536 182.289 cv
200.36 182.033 200.152 181.889 199.896 181.889 cv
cp
f
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
1 /0 /CSD get_res sepcs
0 sep
f
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
332.371 315.226 mo
332.371 191.826 li
332.371 191.605 332.55 191.426 332.771 191.426 cv
332.992 191.426 333.171 191.605 333.171 191.826 cv
333.171 315.226 li
333.171 315.447 332.992 315.626 332.771 315.626 cv
332.55 315.626 332.371 315.447 332.371 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
321.082 320.597 mo
321.292 323.747 li
321.082 323.747 li
320.802 322.809 320.396 322.137 319.864 321.717 cv
319.332 321.297 318.716 321.087 317.988 321.087 cv
317.372 321.087 316.812 321.255 316.308 321.563 cv
315.804 321.871 315.412 322.375 315.132 323.047 cv
314.852 323.733 314.712 324.587 314.712 325.595 cv
314.712 326.435 314.838 327.163 315.118 327.779 cv
315.384 328.395 315.79 328.871 316.336 329.193 cv
316.868 329.529 317.484 329.683 318.184 329.683 cv
318.772 329.683 319.304 329.557 319.766 329.305 cv
320.228 329.053 320.732 328.535 321.292 327.765 cv
321.502 327.905 li
321.04 328.731 320.494 329.333 319.878 329.711 cv
319.262 330.075 318.52 330.271 317.666 330.271 cv
316.126 330.271 314.95 329.711 314.11 328.577 cv
313.466 327.737 313.158 326.729 313.158 325.581 cv
313.158 324.657 313.354 323.817 313.774 323.033 cv
314.194 322.263 314.768 321.661 315.496 321.241 cv
316.224 320.821 317.008 320.597 317.876 320.597 cv
318.548 320.597 319.206 320.765 319.864 321.087 cv
320.046 321.199 320.186 321.241 320.27 321.241 cv
320.382 321.241 320.494 321.199 320.592 321.101 cv
320.704 320.989 320.788 320.821 320.844 320.597 cv
321.082 320.597 li
cp
1 /0 /CSD get_res sepcs
.85 sep
f
328.46 325.343 mo
329.104 325.483 329.58 325.707 329.902 326.001 cv
330.336 326.421 330.56 326.939 330.56 327.541 cv
330.56 328.003 330.406 328.437 330.126 328.857 cv
329.832 329.277 329.426 329.585 328.922 329.781 cv
328.418 329.977 327.634 330.075 326.598 330.075 cv
322.23 330.075 li
322.23 329.823 li
322.58 329.823 li
322.958 329.823 323.238 329.711 323.406 329.459 cv
323.504 329.291 323.56 328.955 323.56 328.437 cv
323.56 322.445 li
323.56 321.885 323.49 321.521 323.364 321.353 cv
323.182 321.157 322.916 321.059 322.58 321.059 cv
322.23 321.059 li
322.23 320.807 li
326.234 320.807 li
326.976 320.807 327.578 320.863 328.026 320.975 cv
328.698 321.143 329.23 321.423 329.594 321.843 cv
329.958 322.263 330.14 322.753 330.14 323.285 cv
330.14 323.747 329.986 324.167 329.706 324.531 cv
329.426 324.895 329.006 325.175 328.46 325.343 cv
cp
324.876 324.979 mo
325.044 325.007 325.226 325.035 325.45 325.049 cv
325.674 325.077 325.912 325.077 326.164 325.077 cv
326.836 325.077 327.326 325.007 327.662 324.867 cv
327.998 324.727 328.25 324.503 328.432 324.195 cv
328.6 323.901 328.698 323.579 328.698 323.229 cv
328.698 322.697 328.474 322.235 328.04 321.843 cv
327.592 321.465 326.948 321.269 326.108 321.269 cv
325.646 321.269 325.24 321.325 324.876 321.409 cv
324.876 324.979 li
cp
324.876 329.403 mo
325.408 329.529 325.926 329.585 326.444 329.585 cv
327.256 329.585 327.886 329.403 328.32 329.039 cv
328.754 328.675 328.978 328.213 328.978 327.653 cv
328.978 327.303 328.88 326.953 328.684 326.617 cv
328.488 326.281 328.166 326.029 327.718 325.833 cv
327.27 325.637 326.724 325.539 326.08 325.539 cv
325.8 325.539 325.548 325.553 325.352 325.553 cv
325.156 325.567 324.988 325.581 324.876 325.609 cv
324.876 329.403 li
cp
f
339.352 327.513 mo
339.576 327.555 li
338.792 330.075 li
331.61 330.075 li
331.61 329.823 li
331.96 329.823 li
332.352 329.823 332.632 329.697 332.8 329.445 cv
332.884 329.305 332.94 328.955 332.94 328.423 cv
332.94 322.445 li
332.94 321.871 332.87 321.507 332.758 321.353 cv
332.576 321.157 332.31 321.059 331.96 321.059 cv
331.61 321.059 li
331.61 320.807 li
335.81 320.807 li
335.81 321.059 li
335.306 321.059 334.97 321.101 334.774 321.199 cv
334.578 321.297 334.438 321.423 334.368 321.563 cv
334.284 321.703 334.256 322.053 334.256 322.599 cv
334.256 328.423 li
334.256 328.815 334.284 329.067 334.368 329.207 cv
334.424 329.305 334.508 329.375 334.62 329.417 cv
334.732 329.473 335.082 329.487 335.684 329.487 cv
336.356 329.487 li
337.07 329.487 337.574 329.445 337.854 329.333 cv
338.134 329.235 338.4 329.053 338.638 328.773 cv
338.876 328.507 339.114 328.087 339.352 327.513 cv
cp
f
345.008 320.597 mo
346.212 320.597 347.248 321.059 348.13 321.969 cv
349.012 322.893 349.46 324.027 349.46 325.385 cv
349.46 326.799 349.012 327.961 348.116 328.885 cv
347.22 329.809 346.156 330.271 344.896 330.271 cv
343.608 330.271 342.544 329.823 341.676 328.927 cv
340.808 328.031 340.374 326.855 340.374 325.413 cv
340.374 323.943 340.878 322.739 341.886 321.801 cv
342.754 321.003 343.79 320.597 345.008 320.597 cv
cp
344.868 321.087 mo
344.042 321.087 343.384 321.395 342.88 322.011 cv
342.25 322.781 341.942 323.901 341.942 325.385 cv
341.942 326.897 342.264 328.059 342.908 328.871 cv
343.412 329.487 344.07 329.795 344.882 329.795 cv
345.75 329.795 346.464 329.459 347.038 328.787 cv
347.598 328.115 347.892 327.037 347.892 325.567 cv
347.892 323.985 347.57 322.809 346.954 322.025 cv
346.45 321.409 345.75 321.087 344.868 321.087 cv
cp
f
352.862 321.311 mo
352.862 324.951 li
354.542 324.951 li
354.934 324.951 355.214 324.867 355.396 324.699 cv
355.564 324.531 355.69 324.195 355.76 323.677 cv
356.012 323.677 li
356.012 326.827 li
355.76 326.827 li
355.746 326.463 355.69 326.197 355.606 326.029 cv
355.522 325.861 355.396 325.735 355.242 325.651 cv
355.074 325.567 354.85 325.525 354.542 325.525 cv
352.862 325.525 li
352.862 328.437 li
352.862 328.913 352.89 329.221 352.946 329.361 cv
352.988 329.473 353.086 329.571 353.226 329.655 cv
353.422 329.767 353.632 329.823 353.856 329.823 cv
354.192 329.823 li
354.192 330.075 li
350.216 330.075 li
350.216 329.823 li
350.552 329.823 li
350.93 329.823 351.21 329.711 351.378 329.487 cv
351.49 329.347 351.546 328.997 351.546 328.437 cv
351.546 322.445 li
351.546 321.983 351.504 321.675 351.448 321.521 cv
351.406 321.409 351.308 321.311 351.168 321.227 cv
350.972 321.115 350.762 321.059 350.552 321.059 cv
350.216 321.059 li
350.216 320.807 li
357.118 320.807 li
357.202 322.837 li
356.964 322.837 li
356.838 322.417 356.698 322.095 356.544 321.899 cv
356.39 321.703 356.194 321.549 355.97 321.451 cv
355.732 321.367 355.382 321.311 354.906 321.311 cv
352.862 321.311 li
cp
f
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
417.173 315.226 mo
417.173 191.826 li
417.173 191.605 417.352 191.426 417.573 191.426 cv
417.794 191.426 417.973 191.605 417.973 191.826 cv
417.973 315.226 li
417.973 315.447 417.794 315.626 417.573 315.626 cv
417.352 315.626 417.173 315.447 417.173 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
403.122 325.105 mo
407.42 325.105 li
407.42 322.459 li
407.42 321.983 407.392 321.675 407.336 321.521 cv
407.28 321.409 407.182 321.311 407.042 321.227 cv
406.846 321.115 406.636 321.059 406.426 321.059 cv
406.09 321.059 li
406.09 320.807 li
410.066 320.807 li
410.066 321.059 li
409.73 321.059 li
409.506 321.059 409.31 321.115 409.114 321.213 cv
408.96 321.297 408.862 321.409 408.806 321.549 cv
408.75 321.703 408.736 322.011 408.736 322.459 cv
408.736 328.437 li
408.736 328.913 408.764 329.221 408.82 329.361 cv
408.862 329.473 408.96 329.571 409.1 329.655 cv
409.296 329.767 409.506 329.823 409.73 329.823 cv
410.066 329.823 li
410.066 330.075 li
406.09 330.075 li
406.09 329.823 li
406.426 329.823 li
406.79 329.823 407.07 329.711 407.252 329.487 cv
407.364 329.347 407.42 328.997 407.42 328.437 cv
407.42 325.609 li
403.122 325.609 li
403.122 328.437 li
403.122 328.913 403.15 329.221 403.206 329.361 cv
403.248 329.473 403.346 329.571 403.486 329.655 cv
403.682 329.767 403.892 329.823 404.116 329.823 cv
404.452 329.823 li
404.452 330.075 li
400.476 330.075 li
400.476 329.823 li
400.812 329.823 li
401.19 329.823 401.47 329.711 401.638 329.487 cv
401.75 329.347 401.806 328.997 401.806 328.437 cv
401.806 322.459 li
401.806 321.983 401.764 321.675 401.708 321.521 cv
401.666 321.409 401.568 321.311 401.428 321.227 cv
401.232 321.115 401.022 321.059 400.812 321.059 cv
400.476 321.059 li
400.476 320.807 li
404.452 320.807 li
404.452 321.059 li
404.116 321.059 li
403.892 321.059 403.682 321.115 403.486 321.213 cv
403.346 321.297 403.248 321.409 403.192 321.549 cv
403.136 321.703 403.122 322.011 403.122 322.459 cv
403.122 325.105 li
cp
f
416.814 325.343 mo
417.458 325.483 417.934 325.707 418.256 326.001 cv
418.69 326.421 418.914 326.939 418.914 327.541 cv
418.914 328.003 418.76 328.437 418.48 328.857 cv
418.186 329.277 417.78 329.585 417.276 329.781 cv
416.772 329.977 415.988 330.075 414.952 330.075 cv
410.584 330.075 li
410.584 329.823 li
410.934 329.823 li
411.312 329.823 411.592 329.711 411.76 329.459 cv
411.858 329.291 411.914 328.955 411.914 328.437 cv
411.914 322.445 li
411.914 321.885 411.844 321.521 411.718 321.353 cv
411.536 321.157 411.27 321.059 410.934 321.059 cv
410.584 321.059 li
410.584 320.807 li
414.588 320.807 li
415.33 320.807 415.932 320.863 416.38 320.975 cv
417.052 321.143 417.584 321.423 417.948 321.843 cv
418.312 322.263 418.494 322.753 418.494 323.285 cv
418.494 323.747 418.34 324.167 418.06 324.531 cv
417.78 324.895 417.36 325.175 416.814 325.343 cv
cp
413.23 324.979 mo
413.398 325.007 413.58 325.035 413.804 325.049 cv
414.028 325.077 414.266 325.077 414.518 325.077 cv
415.19 325.077 415.68 325.007 416.016 324.867 cv
416.352 324.727 416.604 324.503 416.786 324.195 cv
416.954 323.901 417.052 323.579 417.052 323.229 cv
417.052 322.697 416.828 322.235 416.394 321.843 cv
415.946 321.465 415.302 321.269 414.462 321.269 cv
414 321.269 413.594 321.325 413.23 321.409 cv
413.23 324.979 li
cp
413.23 329.403 mo
413.762 329.529 414.28 329.585 414.798 329.585 cv
415.61 329.585 416.24 329.403 416.674 329.039 cv
417.108 328.675 417.332 328.213 417.332 327.653 cv
417.332 327.303 417.234 326.953 417.038 326.617 cv
416.842 326.281 416.52 326.029 416.072 325.833 cv
415.624 325.637 415.078 325.539 414.434 325.539 cv
414.154 325.539 413.902 325.553 413.706 325.553 cv
413.51 325.567 413.342 325.581 413.23 325.609 cv
413.23 329.403 li
cp
f
424.808 320.597 mo
426.012 320.597 427.048 321.059 427.93 321.969 cv
428.812 322.893 429.26 324.027 429.26 325.385 cv
429.26 326.799 428.812 327.961 427.916 328.885 cv
427.02 329.809 425.956 330.271 424.696 330.271 cv
423.408 330.271 422.344 329.823 421.476 328.927 cv
420.608 328.031 420.174 326.855 420.174 325.413 cv
420.174 323.943 420.678 322.739 421.686 321.801 cv
422.554 321.003 423.59 320.597 424.808 320.597 cv
cp
424.668 321.087 mo
423.842 321.087 423.184 321.395 422.68 322.011 cv
422.05 322.781 421.742 323.901 421.742 325.385 cv
421.742 326.897 422.064 328.059 422.708 328.871 cv
423.212 329.487 423.87 329.795 424.682 329.795 cv
425.55 329.795 426.264 329.459 426.838 328.787 cv
427.398 328.115 427.692 327.037 427.692 325.567 cv
427.692 323.985 427.37 322.809 426.754 322.025 cv
426.25 321.409 425.55 321.087 424.668 321.087 cv
cp
f
436.204 320.597 mo
436.204 323.803 li
435.952 323.803 li
435.868 323.187 435.728 322.697 435.518 322.333 cv
435.294 321.969 435 321.689 434.608 321.465 cv
434.216 321.255 433.81 321.143 433.39 321.143 cv
432.914 321.143 432.522 321.297 432.214 321.577 cv
431.906 321.871 431.752 322.193 431.752 322.557 cv
431.752 322.851 431.85 323.117 432.046 323.341 cv
432.326 323.677 432.998 324.139 434.062 324.699 cv
434.93 325.175 435.518 325.525 435.84 325.777 cv
436.148 326.029 436.4 326.323 436.568 326.659 cv
436.736 326.995 436.82 327.345 436.82 327.709 cv
436.82 328.409 436.54 329.011 436.008 329.515 cv
435.462 330.019 434.762 330.271 433.908 330.271 cv
433.628 330.271 433.376 330.243 433.152 330.215 cv
433.012 330.187 432.718 330.103 432.27 329.977 cv
431.822 329.837 431.528 329.767 431.416 329.767 cv
431.304 329.767 431.206 329.809 431.15 329.865 cv
431.08 329.935 431.038 330.075 431.01 330.271 cv
430.758 330.271 li
430.758 327.107 li
431.01 327.107 li
431.122 327.779 431.29 328.269 431.486 328.605 cv
431.682 328.941 431.99 329.207 432.41 329.431 cv
432.816 329.655 433.264 329.753 433.768 329.753 cv
434.328 329.753 434.776 329.613 435.112 329.305 cv
435.448 329.011 435.616 328.661 435.616 328.241 cv
435.616 328.017 435.546 327.779 435.42 327.541 cv
435.294 327.317 435.098 327.093 434.832 326.897 cv
434.65 326.757 434.16 326.477 433.376 326.029 cv
432.578 325.581 432.018 325.231 431.682 324.965 cv
431.346 324.699 431.094 324.405 430.926 324.083 cv
430.758 323.775 430.674 323.425 430.674 323.033 cv
430.674 322.375 430.926 321.801 431.43 321.325 cv
431.934 320.849 432.592 320.597 433.376 320.597 cv
433.866 320.597 434.384 320.723 434.944 320.961 cv
435.196 321.073 435.378 321.129 435.49 321.129 cv
435.602 321.129 435.686 321.101 435.77 321.031 cv
435.854 320.961 435.91 320.821 435.952 320.597 cv
436.204 320.597 li
cp
f
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
501.975 315.226 mo
501.975 191.826 li
501.975 191.605 502.154 191.426 502.375 191.426 cv
502.596 191.426 502.775 191.605 502.775 191.826 cv
502.775 315.226 li
502.775 315.447 502.596 315.626 502.375 315.626 cv
502.154 315.626 501.975 315.447 501.975 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
486.515 320.359 mo
486.711 320.359 486.865 320.429 487.005 320.555 cv
487.131 320.695 487.201 320.849 487.201 321.045 cv
487.201 321.241 487.131 321.395 487.005 321.535 cv
486.865 321.675 486.711 321.745 486.515 321.745 cv
486.319 321.745 486.165 321.675 486.025 321.535 cv
485.885 321.395 485.815 321.241 485.815 321.045 cv
485.815 320.849 485.871 320.695 486.011 320.555 cv
486.151 320.429 486.319 320.359 486.515 320.359 cv
cp
487.089 323.635 mo
487.089 328.661 li
487.089 329.053 487.117 329.319 487.173 329.445 cv
487.229 329.585 487.313 329.683 487.425 329.739 cv
487.537 329.795 487.733 329.823 488.027 329.823 cv
488.027 330.075 li
484.989 330.075 li
484.989 329.823 li
485.297 329.823 485.493 329.795 485.605 329.739 cv
485.703 329.683 485.787 329.585 485.843 329.445 cv
485.899 329.305 485.941 329.053 485.941 328.661 cv
485.941 326.253 li
485.941 325.581 485.913 325.133 485.885 324.923 cv
485.857 324.783 485.801 324.685 485.731 324.629 cv
485.661 324.573 485.563 324.531 485.451 324.531 cv
485.325 324.531 485.171 324.573 484.989 324.643 cv
484.891 324.391 li
486.781 323.635 li
487.089 323.635 li
cp
f
491.247 321.311 mo
491.247 324.951 li
492.927 324.951 li
493.319 324.951 493.599 324.867 493.781 324.699 cv
493.949 324.531 494.075 324.195 494.145 323.677 cv
494.397 323.677 li
494.397 326.827 li
494.145 326.827 li
494.131 326.463 494.075 326.197 493.991 326.029 cv
493.907 325.861 493.781 325.735 493.627 325.651 cv
493.459 325.567 493.235 325.525 492.927 325.525 cv
491.247 325.525 li
491.247 328.437 li
491.247 328.913 491.275 329.221 491.331 329.361 cv
491.373 329.473 491.471 329.571 491.611 329.655 cv
491.807 329.767 492.017 329.823 492.241 329.823 cv
492.577 329.823 li
492.577 330.075 li
488.601 330.075 li
488.601 329.823 li
488.937 329.823 li
489.315 329.823 489.595 329.711 489.763 329.487 cv
489.875 329.347 489.931 328.997 489.931 328.437 cv
489.931 322.445 li
489.931 321.983 489.889 321.675 489.833 321.521 cv
489.791 321.409 489.693 321.311 489.553 321.227 cv
489.357 321.115 489.147 321.059 488.937 321.059 cv
488.601 321.059 li
488.601 320.807 li
495.503 320.807 li
495.587 322.837 li
495.349 322.837 li
495.223 322.417 495.083 322.095 494.929 321.899 cv
494.775 321.703 494.579 321.549 494.355 321.451 cv
494.117 321.367 493.767 321.311 493.291 321.311 cv
491.247 321.311 li
cp
f
499.661 323.635 mo
500.613 323.635 501.369 323.999 501.943 324.713 cv
502.419 325.329 502.671 326.043 502.671 326.827 cv
502.671 327.387 502.531 327.961 502.265 328.535 cv
501.999 329.109 501.635 329.543 501.159 329.823 cv
500.683 330.103 500.165 330.257 499.591 330.257 cv
498.639 330.257 497.897 329.893 497.337 329.137 cv
496.861 328.507 496.637 327.793 496.637 327.009 cv
496.637 326.435 496.777 325.861 497.057 325.301 cv
497.337 324.741 497.715 324.321 498.177 324.041 cv
498.639 323.775 499.129 323.635 499.661 323.635 cv
cp
499.451 324.069 mo
499.199 324.069 498.961 324.153 498.723 324.293 cv
498.471 324.433 498.275 324.685 498.135 325.049 cv
497.981 325.413 497.911 325.875 497.911 326.435 cv
497.911 327.345 498.079 328.129 498.443 328.787 cv
498.807 329.459 499.283 329.781 499.885 329.781 cv
500.319 329.781 500.683 329.599 500.977 329.235 cv
501.257 328.871 501.411 328.255 501.411 327.359 cv
501.411 326.253 501.159 325.371 500.683 324.727 cv
500.361 324.293 499.955 324.069 499.451 324.069 cv
cp
f
505.429 323.635 mo
505.429 325.035 li
505.947 324.111 506.479 323.635 507.039 323.635 cv
507.291 323.635 507.487 323.719 507.655 323.859 cv
507.823 324.013 507.907 324.195 507.907 324.391 cv
507.907 324.573 507.837 324.727 507.725 324.839 cv
507.613 324.965 507.473 325.021 507.305 325.021 cv
507.137 325.021 506.969 324.951 506.773 324.783 cv
506.577 324.629 506.423 324.545 506.339 324.545 cv
506.073 324.685 li
505.863 324.881 505.653 325.189 505.429 325.609 cv
505.429 328.619 li
505.429 328.969 505.471 329.235 505.555 329.403 cv
505.611 329.529 505.723 329.627 505.877 329.711 cv
506.017 329.795 506.241 329.823 506.521 329.823 cv
506.521 330.075 li
503.315 330.075 li
503.315 329.823 li
503.623 329.823 503.861 329.781 504.029 329.683 cv
504.141 329.613 504.211 329.501 504.267 329.333 cv
504.295 329.249 504.309 329.025 504.309 328.661 cv
504.309 326.239 li
504.309 325.511 504.281 325.077 504.253 324.937 cv
504.225 324.797 504.169 324.699 504.085 324.629 cv
504.001 324.573 503.903 324.531 503.791 324.531 cv
503.651 324.531 503.483 324.573 503.315 324.643 cv
503.245 324.391 li
505.149 323.635 li
505.429 323.635 li
cp
f
509.307 326.169 mo
509.307 327.107 509.531 327.835 509.993 328.367 cv
510.441 328.899 510.987 329.151 511.603 329.151 cv
511.995 329.151 512.345 329.039 512.653 328.815 cv
512.961 328.591 513.213 328.213 513.423 327.653 cv
513.647 327.793 li
513.535 328.423 513.255 328.997 512.807 329.501 cv
512.345 330.005 511.771 330.257 511.071 330.257 cv
510.315 330.257 509.671 329.977 509.139 329.389 cv
508.607 328.801 508.341 328.017 508.341 327.023 cv
508.341 325.959 508.607 325.119 509.167 324.517 cv
509.713 323.929 510.399 323.621 511.239 323.621 cv
511.939 323.621 512.513 323.859 512.961 324.321 cv
513.409 324.783 513.647 325.399 513.647 326.169 cv
509.307 326.169 li
cp
509.307 325.777 mo
512.205 325.777 li
512.177 325.385 512.135 325.091 512.065 324.923 cv
511.953 324.671 511.785 324.475 511.561 324.335 cv
511.337 324.195 511.099 324.111 510.847 324.111 cv
510.469 324.111 510.133 324.265 509.839 324.559 cv
509.531 324.853 509.363 325.259 509.307 325.777 cv
cp
f
518.519 323.635 mo
518.519 325.763 li
518.295 325.763 li
518.127 325.091 517.903 324.643 517.637 324.391 cv
517.357 324.153 517.021 324.027 516.601 324.027 cv
516.265 324.027 516.013 324.111 515.817 324.279 cv
515.621 324.447 515.523 324.643 515.523 324.839 cv
515.523 325.105 515.593 325.329 515.747 325.497 cv
515.887 325.693 516.167 325.889 516.615 326.099 cv
517.609 326.575 li
518.533 327.037 518.995 327.639 518.995 328.367 cv
518.995 328.941 518.771 329.403 518.351 329.739 cv
517.917 330.075 517.441 330.257 516.909 330.257 cv
516.517 330.257 516.083 330.187 515.593 330.061 cv
515.439 330.019 515.313 329.991 515.215 329.991 cv
515.103 329.991 515.033 330.047 514.977 330.159 cv
514.753 330.159 li
514.753 327.933 li
514.977 327.933 li
515.103 328.577 515.341 329.067 515.705 329.389 cv
516.069 329.711 516.475 329.865 516.923 329.865 cv
517.231 329.865 517.483 329.781 517.679 329.585 cv
517.875 329.403 517.987 329.179 517.987 328.913 cv
517.987 328.605 517.875 328.353 517.651 328.129 cv
517.427 327.919 516.979 327.653 516.321 327.317 cv
515.663 326.995 515.229 326.701 515.033 326.421 cv
514.823 326.169 514.725 325.833 514.725 325.441 cv
514.725 324.937 514.893 324.503 515.257 324.153 cv
515.607 323.817 516.069 323.635 516.629 323.635 cv
516.867 323.635 517.161 323.691 517.525 323.789 cv
517.749 323.859 517.903 323.887 517.987 323.887 cv
518.155 323.845 li
518.183 323.817 518.239 323.747 518.295 323.635 cv
518.519 323.635 li
cp
f
521.739 321.759 mo
521.739 323.817 li
523.209 323.817 li
523.209 324.293 li
521.739 324.293 li
521.739 328.353 li
521.739 328.759 521.795 329.039 521.907 329.179 cv
522.019 329.319 522.173 329.389 522.369 329.389 cv
522.509 329.389 522.663 329.347 522.803 329.249 cv
522.943 329.165 523.041 329.025 523.125 328.829 cv
523.391 328.829 li
523.223 329.277 522.999 329.613 522.719 329.837 cv
522.425 330.061 522.131 330.159 521.823 330.159 cv
521.599 330.159 521.389 330.103 521.193 329.991 cv
520.997 329.879 520.843 329.725 520.759 329.501 cv
520.661 329.291 520.619 328.955 520.619 328.507 cv
520.619 324.293 li
519.625 324.293 li
519.625 324.069 li
519.877 323.971 520.129 323.803 520.395 323.565 cv
520.647 323.327 520.885 323.047 521.095 322.711 cv
521.193 322.543 521.333 322.221 521.529 321.759 cv
521.739 321.759 li
cp
f
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
586.777 315.226 mo
586.777 191.826 li
586.777 191.605 586.957 191.426 587.177 191.426 cv
587.398 191.426 587.577 191.605 587.577 191.826 cv
587.578 315.226 li
587.577 315.447 587.398 315.626 587.177 315.626 cv
586.957 315.626 586.777 315.447 586.777 315.226 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
1 lc
1 lj
320.051 315.226 mo
599.898 315.226 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
320.051 287.404 mo
599.898 287.404 li
600.119 287.404 600.298 287.583 600.298 287.804 cv
600.298 288.025 600.119 288.204 599.898 288.204 cv
320.051 288.204 li
319.83 288.204 319.651 288.025 319.651 287.804 cv
319.651 287.583 319.83 287.404 320.051 287.404 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
320.051 259.982 mo
599.898 259.982 li
600.119 259.982 600.298 260.161 600.298 260.382 cv
600.298 260.603 600.119 260.782 599.898 260.782 cv
320.051 260.782 li
319.83 260.782 319.651 260.603 319.651 260.382 cv
319.651 260.161 319.83 259.982 320.051 259.982 cv
1 /0 /CSD get_res sepcs
.2 sep
f
320.051 232.559 mo
599.898 232.559 li
600.119 232.559 600.298 232.738 600.298 232.959 cv
600.298 233.18 600.119 233.359 599.898 233.359 cv
320.051 233.359 li
319.83 233.359 319.651 233.18 319.651 232.959 cv
319.651 232.738 319.83 232.559 320.051 232.559 cv
f
1 lc
1 lj
320.051 205.537 mo
599.898 205.537 li
@
grestore
gsave
320.051 315.226 mo
599.898 315.226 li
599.898 191.826 li
320.051 191.826 li
320.051 315.226 li
clp
336.127 306.935 mo
335.984 306.452 335.738 306.004 335.402 305.621 cv
366.959 288.204 li
370.064 288.204 li
336.127 306.935 li
371.513 287.404 mo
368.409 287.404 li
414.218 262.12 li
414.361 262.602 414.607 263.051 414.943 263.433 cv
371.513 287.404 li
.811765 .192157 .784314 .0666667 cmyk
f
370.064 288.204 mo
366.959 288.204 li
368.409 287.404 li
371.513 287.404 li
370.064 288.204 li
.811765 .192157 .784314 .0862745 cmyk
f
499.001 304.799 mo
467.447 288.204 li
470.67 288.204 li
499.699 303.472 li
499.371 303.861 499.134 304.314 499.001 304.799 cv
469.149 287.404 mo
465.926 287.404 li
420.25 263.38 li
420.578 262.991 420.815 262.538 420.948 262.053 cv
469.149 287.404 li
.811765 .192157 .784314 .0666667 cmyk
f
470.67 288.204 mo
467.447 288.204 li
465.926 287.404 li
469.149 287.404 li
470.67 288.204 li
.811765 .192157 .784314 .0862745 cmyk
f
505.488 304.128 mo
505.324 303.808 505.109 303.512 504.85 303.253 cv
504.85 303.253 504.85 303.253 504.85 303.253 cv
504.85 303.253 li
504.85 303.253 li
504.85 303.252 li
504.85 303.253 504.85 303.253 504.85 303.253 cv
504.749 303.152 504.644 303.058 504.533 302.972 cv
522.406 288.204 li
524.76 288.204 li
505.488 304.128 li
525.729 287.404 mo
523.374 287.404 li
555.594 260.782 li
557.948 260.782 li
525.729 287.404 li
558.917 259.982 mo
556.562 259.982 li
584.064 237.257 li
584.229 237.577 584.443 237.873 584.703 238.132 cv
584.703 238.132 584.703 238.132 584.703 238.132 cv
584.703 238.132 li
584.703 238.132 li
584.703 238.132 584.703 238.132 584.703 238.132 cv
584.803 238.233 584.909 238.327 585.02 238.413 cv
558.917 259.982 li
.811765 .192157 .784314 .0666667 cmyk
f
524.76 288.204 mo
522.406 288.204 li
523.374 287.404 li
525.729 287.404 li
524.76 288.204 li
.811765 .192157 .784314 .0862745 cmyk
f
557.948 260.782 mo
555.594 260.782 li
556.562 259.982 li
558.917 259.982 li
557.948 260.782 li
f
332.371 310.398 mo
331.856 310.314 331.377 310.071 331.004 309.698 cv
331.004 309.697 li
330.535 309.229 330.271 308.593 330.271 307.93 cv
330.271 307.266 330.535 306.631 331.004 306.163 cv
331.004 306.162 li
331.377 305.789 331.856 305.545 332.371 305.462 cv
332.371 307.295 li
332.037 307.506 331.922 307.943 332.115 308.292 cv
332.178 308.407 332.268 308.499 332.371 308.564 cv
332.371 310.398 li
333.171 310.398 mo
333.171 308.566 li
335.222 307.434 li
335.255 307.596 335.271 307.762 335.271 307.93 cv
335.271 308.593 335.008 309.229 334.539 309.697 cv
334.539 309.698 li
334.166 310.071 333.686 310.314 333.171 310.398 cv
333.171 306.852 mo
333.171 305.462 li
333.667 305.542 334.13 305.771 334.497 306.121 cv
333.171 306.852 li
.811765 .188235 .780392 .0627451 cmyk
f
332.771 310.43 mo
332.637 310.43 332.503 310.419 332.371 310.398 cv
332.371 308.564 li
332.491 308.64 332.63 308.68 332.772 308.68 cv
332.895 308.68 333.019 308.65 333.134 308.586 cv
333.171 308.566 li
333.171 310.398 li
333.04 310.419 332.906 310.43 332.771 310.43 cv
332.771 310.43 li
332.371 307.295 mo
332.371 305.462 li
332.503 305.441 332.637 305.43 332.771 305.43 cv
332.906 305.43 333.04 305.441 333.171 305.462 cv
333.171 306.852 li
332.409 307.273 li
332.396 307.28 332.384 307.288 332.371 307.295 cv
.811765 .188235 .780392 .0823529 cmyk
f
333.171 308.566 mo
333.171 306.852 li
334.497 306.121 li
334.511 306.135 334.525 306.148 334.539 306.162 cv
334.539 306.163 li
334.889 306.512 335.125 306.956 335.222 307.434 cv
333.171 308.566 li
332.371 308.564 mo
332.268 308.499 332.178 308.407 332.115 308.292 cv
331.922 307.943 332.037 307.506 332.371 307.295 cv
332.371 308.564 li
.894118 .207843 .866667 .0745098 cmyk
f
332.772 308.68 mo
332.63 308.68 332.491 308.64 332.371 308.564 cv
332.371 307.295 li
332.384 307.288 332.396 307.28 332.409 307.273 cv
333.171 306.852 li
333.171 308.566 li
333.134 308.586 li
333.019 308.65 332.895 308.68 332.772 308.68 cv
.894118 .207843 .866667 .0705882 cmyk
f
332.371 311.407 mo
331.59 311.317 330.858 310.966 330.297 310.404 cv
329.64 309.748 329.271 308.858 329.271 307.93 cv
329.271 307.002 329.64 306.111 330.297 305.455 cv
330.858 304.893 331.59 304.543 332.371 304.453 cv
332.371 305.462 li
331.856 305.545 331.377 305.789 331.004 306.162 cv
331.004 306.163 li
330.535 306.631 330.271 307.266 330.271 307.93 cv
330.271 308.593 330.535 309.229 331.004 309.697 cv
331.004 309.698 li
331.377 310.071 331.856 310.314 332.371 310.398 cv
332.371 311.407 li
333.171 311.407 mo
333.171 310.398 li
333.686 310.314 334.166 310.071 334.539 309.698 cv
334.539 309.697 li
335.008 309.229 335.271 308.593 335.271 307.93 cv
335.271 307.762 335.255 307.596 335.222 307.434 cv
336.127 306.935 li
336.222 307.255 336.271 307.59 336.271 307.93 cv
336.271 308.858 335.903 309.748 335.246 310.404 cv
334.685 310.966 333.953 311.317 333.171 311.407 cv
334.497 306.121 mo
334.13 305.771 333.667 305.542 333.171 305.462 cv
333.171 304.453 li
333.953 304.543 334.685 304.893 335.246 305.455 cv
335.3 305.509 335.352 305.565 335.402 305.621 cv
334.497 306.121 li
.811765 .188235 .780392 .0627451 cmyk
f
332.771 311.43 mo
332.771 311.43 li
332.637 311.43 332.504 311.422 332.371 311.407 cv
332.371 310.398 li
332.503 310.419 332.637 310.43 332.771 310.43 cv
332.771 310.43 li
332.906 310.43 333.04 310.419 333.171 310.398 cv
333.171 311.407 li
333.039 311.422 332.906 311.43 332.771 311.43 cv
333.171 305.462 mo
333.04 305.441 332.906 305.43 332.771 305.43 cv
332.637 305.43 332.503 305.441 332.371 305.462 cv
332.371 304.453 li
332.504 304.438 332.637 304.43 332.771 304.43 cv
332.906 304.43 333.039 304.438 333.171 304.453 cv
333.171 305.462 li
.811765 .188235 .780392 .0823529 cmyk
f
335.246 310.405 mo
335.246 310.405 335.246 310.405 335.246 310.404 cv
335.246 310.404 335.246 310.404 335.246 310.404 cv
335.246 310.405 li
330.297 310.405 mo
330.297 310.404 li
330.297 310.404 330.297 310.404 330.297 310.404 cv
330.297 310.405 330.297 310.405 330.297 310.405 cv
335.246 305.456 mo
335.246 305.456 335.246 305.455 335.246 305.455 cv
335.246 305.455 335.246 305.455 335.246 305.455 cv
335.246 305.456 li
330.297 305.456 mo
330.297 305.455 li
330.297 305.455 330.297 305.455 330.297 305.455 cv
330.297 305.455 330.297 305.456 330.297 305.456 cv
.811765 .188235 .780392 .0627451 cmyk
f
335.222 307.434 mo
335.125 306.956 334.889 306.512 334.539 306.163 cv
334.539 306.162 li
334.525 306.148 334.511 306.135 334.497 306.121 cv
335.402 305.621 li
335.738 306.004 335.984 306.452 336.127 306.935 cv
335.222 307.434 li
.894118 .207843 .866667 .0745098 cmyk
f
417.973 263.593 mo
417.973 262.183 li
419.335 262.899 li
418.963 263.269 418.486 263.51 417.973 263.593 cv
417.173 263.593 mo
416.678 263.512 416.215 263.284 415.848 262.934 cv
417.173 262.202 li
417.173 263.593 li
.811765 .188235 .780392 .0627451 cmyk
f
417.573 263.625 mo
417.439 263.625 417.305 263.614 417.173 263.593 cv
417.173 262.202 li
417.582 261.977 li
417.973 262.183 li
417.973 263.593 li
417.842 263.614 417.708 263.625 417.573 263.625 cv
417.573 263.625 li
.811765 .188235 .780392 .0823529 cmyk
f
415.123 261.621 mo
415.09 261.459 415.073 261.293 415.073 261.125 cv
415.073 261.009 415.081 260.895 415.097 260.782 cv
416.643 260.782 li
415.123 261.621 li
420.033 261.571 mo
418.532 260.782 li
420.05 260.782 li
420.065 260.895 420.073 261.009 420.073 261.125 cv
420.073 261.276 420.06 261.425 420.033 261.571 cv
419.797 259.982 mo
417.973 259.982 li
417.973 258.657 li
418.488 258.741 418.968 258.984 419.341 259.357 cv
419.341 259.358 li
419.526 259.543 419.679 259.753 419.797 259.982 cv
417.173 259.982 mo
415.35 259.982 li
415.468 259.753 415.621 259.543 415.806 259.358 cv
415.806 259.357 li
416.179 258.984 416.658 258.741 417.173 258.657 cv
417.173 259.982 li
.811765 .188235 .780392 .0627451 cmyk
f
417.973 259.982 mo
417.173 259.982 li
417.173 258.657 li
417.305 258.636 417.439 258.625 417.573 258.625 cv
417.708 258.625 417.842 258.636 417.973 258.657 cv
417.973 259.982 li
.811765 .188235 .780392 .0823529 cmyk
f
420.05 260.782 mo
418.532 260.782 li
417.922 260.461 li
417.813 260.403 417.693 260.375 417.574 260.375 cv
417.449 260.375 417.324 260.406 417.211 260.468 cv
416.643 260.782 li
415.097 260.782 li
415.136 260.501 415.222 260.231 415.35 259.982 cv
417.173 259.982 li
417.973 259.982 li
419.797 259.982 li
419.925 260.231 420.011 260.501 420.05 260.782 cv
f
415.848 262.934 mo
415.834 262.92 415.82 262.907 415.806 262.893 cv
415.806 262.892 li
415.455 262.542 415.22 262.099 415.123 261.621 cv
416.643 260.782 li
417.173 260.782 li
417.173 262.202 li
415.848 262.934 li
419.335 262.899 mo
417.973 262.183 li
417.973 260.782 li
418.532 260.782 li
420.033 261.571 li
419.943 262.069 419.704 262.53 419.341 262.892 cv
419.341 262.893 li
419.339 262.895 419.337 262.897 419.335 262.899 cv
.894118 .207843 .866667 .0745098 cmyk
f
417.173 262.202 mo
417.173 260.782 li
417.973 260.782 li
417.973 262.183 li
417.582 261.977 li
417.173 262.202 li
.894118 .207843 .866667 .0705882 cmyk
f
418.532 260.782 mo
417.973 260.782 li
417.173 260.782 li
416.643 260.782 li
417.211 260.468 li
417.324 260.406 417.449 260.375 417.574 260.375 cv
417.693 260.375 417.813 260.403 417.922 260.461 cv
418.532 260.782 li
f
417.173 264.602 mo
416.392 264.512 415.66 264.161 415.099 263.599 cv
415.045 263.546 414.993 263.49 414.943 263.433 cv
415.848 262.934 li
416.215 263.284 416.678 263.512 417.173 263.593 cv
417.173 264.602 li
417.973 264.602 mo
417.973 263.593 li
418.486 263.51 418.963 263.269 419.335 262.899 cv
420.25 263.38 li
420.186 263.456 420.119 263.529 420.048 263.599 cv
419.487 264.161 418.755 264.512 417.973 264.602 cv
.811765 .188235 .780392 .0627451 cmyk
f
417.573 264.625 mo
417.573 264.625 li
417.439 264.625 417.306 264.617 417.173 264.602 cv
417.173 263.593 li
417.305 263.614 417.439 263.625 417.573 263.625 cv
417.573 263.625 li
417.708 263.625 417.842 263.614 417.973 263.593 cv
417.973 264.602 li
417.841 264.617 417.708 264.625 417.573 264.625 cv
.811765 .188235 .780392 .0823529 cmyk
f
414.218 262.12 mo
414.123 261.8 414.073 261.465 414.073 261.125 cv
414.073 261.01 414.079 260.895 414.09 260.782 cv
415.097 260.782 li
415.081 260.895 415.073 261.009 415.073 261.125 cv
415.073 261.293 415.09 261.459 415.123 261.621 cv
414.218 262.12 li
420.948 262.053 mo
420.033 261.571 li
420.06 261.425 420.073 261.276 420.073 261.125 cv
420.073 261.009 420.065 260.895 420.05 260.782 cv
421.057 260.782 li
421.068 260.895 421.073 261.01 421.073 261.125 cv
421.073 261.441 421.031 261.753 420.948 262.053 cv
420.881 259.982 mo
419.797 259.982 li
419.679 259.753 419.526 259.543 419.341 259.358 cv
419.341 259.357 li
418.968 258.984 418.488 258.741 417.973 258.657 cv
417.973 257.648 li
418.755 257.738 419.487 258.089 420.048 258.65 cv
420.427 259.029 420.71 259.485 420.881 259.982 cv
415.35 259.982 mo
414.265 259.982 li
414.437 259.485 414.72 259.029 415.099 258.65 cv
415.66 258.089 416.392 257.738 417.173 257.648 cv
417.173 258.657 li
416.658 258.741 416.179 258.984 415.806 259.357 cv
415.806 259.358 li
415.621 259.543 415.468 259.753 415.35 259.982 cv
.811765 .188235 .780392 .0627451 cmyk
f
417.173 258.657 mo
417.173 257.648 li
417.306 257.633 417.439 257.625 417.573 257.625 cv
417.708 257.625 417.841 257.633 417.973 257.648 cv
417.973 258.657 li
417.842 258.636 417.708 258.625 417.573 258.625 cv
417.439 258.625 417.305 258.636 417.173 258.657 cv
.811765 .188235 .780392 .0823529 cmyk
f
421.057 260.782 mo
420.05 260.782 li
420.011 260.501 419.925 260.231 419.797 259.982 cv
420.881 259.982 li
420.97 260.239 421.03 260.508 421.057 260.782 cv
415.097 260.782 mo
414.09 260.782 li
414.117 260.508 414.176 260.239 414.265 259.982 cv
415.35 259.982 li
415.222 260.231 415.136 260.501 415.097 260.782 cv
f
414.943 263.433 mo
414.607 263.051 414.361 262.602 414.218 262.12 cv
415.123 261.621 li
415.22 262.099 415.455 262.542 415.806 262.892 cv
415.806 262.893 li
415.82 262.907 415.834 262.92 415.848 262.934 cv
414.943 263.433 li
420.25 263.38 mo
419.335 262.899 li
419.337 262.897 419.339 262.895 419.341 262.893 cv
419.341 262.892 li
419.704 262.53 419.943 262.069 420.033 261.571 cv
420.948 262.053 li
420.815 262.538 420.578 262.991 420.25 263.38 cv
.894118 .207843 .866667 .0745098 cmyk
f
420.048 263.6 mo
420.048 263.6 420.048 263.6 420.048 263.599 cv
420.048 263.599 420.048 263.599 420.048 263.599 cv
420.048 263.6 li
415.099 263.6 mo
415.099 263.599 li
415.099 263.599 415.099 263.599 415.099 263.599 cv
415.099 263.6 415.099 263.6 415.099 263.6 cv
420.048 258.651 mo
420.048 258.651 420.048 258.651 420.048 258.65 cv
420.048 258.65 420.048 258.65 420.048 258.65 cv
420.048 258.651 li
415.099 258.651 mo
415.099 258.65 li
415.099 258.65 415.099 258.65 415.099 258.65 cv
415.099 258.651 415.099 258.651 415.099 258.651 cv
.811765 .188235 .780392 .0627451 cmyk
f
502.775 308.195 mo
502.775 306.361 li
502.802 306.344 502.828 306.326 502.853 306.305 cv
504.692 304.786 li
504.812 305.082 504.875 305.401 504.875 305.727 cv
504.875 306.391 504.612 307.026 504.143 307.495 cv
504.143 307.495 li
503.77 307.869 503.29 308.112 502.775 308.195 cv
501.975 308.195 mo
501.46 308.112 500.981 307.869 500.608 307.495 cv
500.608 307.495 li
500.139 307.026 499.875 306.391 499.875 305.727 cv
499.875 305.576 499.889 305.427 499.916 305.281 cv
501.975 306.364 li
501.975 308.195 li
f
502.375 308.227 mo
502.24 308.227 502.107 308.216 501.975 308.195 cv
501.975 306.364 li
502.026 306.391 li
502.137 306.449 502.257 306.477 502.376 306.477 cv
502.515 306.477 502.654 306.438 502.775 306.361 cv
502.775 308.195 li
502.644 308.216 502.51 308.227 502.375 308.227 cv
502.375 308.227 li
.811765 .188235 .780392 .0823529 cmyk
f
501.975 304.669 mo
500.615 303.953 li
500.987 303.583 501.463 303.342 501.975 303.26 cv
501.975 304.669 li
502.775 304.424 mo
502.775 303.26 li
503.118 303.315 503.445 303.441 503.736 303.63 cv
502.775 304.424 li
.811765 .188235 .780392 .0627451 cmyk
f
502.283 304.831 mo
501.975 304.669 li
501.975 303.26 li
502.107 303.238 502.24 303.227 502.375 303.227 cv
502.51 303.227 502.644 303.238 502.775 303.26 cv
502.775 304.424 li
502.283 304.831 li
.811765 .188235 .780392 .0823529 cmyk
f
501.975 306.364 mo
499.916 305.281 li
500.006 304.783 500.245 304.322 500.608 303.96 cv
500.608 303.96 li
500.61 303.957 500.612 303.955 500.615 303.953 cv
501.975 304.669 li
501.975 306.364 li
502.775 306.361 mo
502.775 304.424 li
503.736 303.63 li
503.882 303.725 504.018 303.835 504.143 303.96 cv
504.143 303.96 li
504.382 304.198 504.567 304.48 504.692 304.786 cv
502.853 306.305 li
502.828 306.326 502.802 306.344 502.775 306.361 cv
.894118 .207843 .866667 .0745098 cmyk
f
502.376 306.477 mo
502.257 306.477 502.137 306.449 502.026 306.391 cv
501.975 306.364 li
501.975 304.669 li
502.283 304.831 li
502.775 304.424 li
502.775 306.361 li
502.654 306.438 502.515 306.477 502.376 306.477 cv
.894118 .207843 .866667 .0705882 cmyk
f
502.775 309.204 mo
502.775 308.195 li
503.29 308.112 503.77 307.869 504.143 307.495 cv
504.143 307.495 li
504.612 307.026 504.875 306.391 504.875 305.727 cv
504.875 305.401 504.812 305.082 504.692 304.786 cv
505.488 304.128 li
505.74 304.618 505.875 305.166 505.875 305.727 cv
505.875 306.656 505.507 307.546 504.85 308.202 cv
504.289 308.764 503.557 309.115 502.775 309.204 cv
501.975 309.204 mo
501.194 309.115 500.462 308.764 499.901 308.202 cv
499.244 307.546 498.875 306.656 498.875 305.727 cv
498.875 305.411 498.918 305.099 499.001 304.799 cv
499.916 305.281 li
499.889 305.427 499.875 305.576 499.875 305.727 cv
499.875 306.391 500.139 307.026 500.608 307.495 cv
500.608 307.495 li
500.981 307.869 501.46 308.112 501.975 308.195 cv
501.975 309.204 li
.811765 .188235 .780392 .0627451 cmyk
f
502.375 309.227 mo
502.375 309.227 li
502.241 309.227 502.107 309.22 501.975 309.204 cv
501.975 308.195 li
502.107 308.216 502.24 308.227 502.375 308.227 cv
502.375 308.227 li
502.51 308.227 502.644 308.216 502.775 308.195 cv
502.775 309.204 li
502.643 309.22 502.51 309.227 502.375 309.227 cv
.811765 .188235 .780392 .0823529 cmyk
f
500.615 303.953 mo
499.699 303.472 li
499.763 303.396 499.83 303.323 499.901 303.253 cv
500.462 302.691 501.194 302.34 501.975 302.25 cv
501.975 303.26 li
501.463 303.342 500.987 303.583 500.615 303.953 cv
503.736 303.63 mo
503.445 303.441 503.118 303.315 502.775 303.26 cv
502.775 302.25 li
503.417 302.324 504.025 302.574 504.533 302.972 cv
503.736 303.63 li
.811765 .188235 .780392 .0627451 cmyk
f
501.975 303.26 mo
501.975 302.25 li
502.107 302.235 502.241 302.227 502.375 302.227 cv
502.51 302.227 502.643 302.235 502.775 302.25 cv
502.775 303.26 li
502.644 303.238 502.51 303.227 502.375 303.227 cv
502.24 303.227 502.107 303.238 501.975 303.26 cv
.811765 .188235 .780392 .0823529 cmyk
f
499.916 305.281 mo
499.001 304.799 li
499.134 304.314 499.371 303.861 499.699 303.472 cv
500.615 303.953 li
500.612 303.955 500.61 303.957 500.608 303.96 cv
500.608 303.96 li
500.245 304.322 500.006 304.783 499.916 305.281 cv
504.692 304.786 mo
504.567 304.48 504.382 304.198 504.143 303.96 cv
504.143 303.96 li
504.018 303.835 503.882 303.725 503.736 303.63 cv
504.533 302.972 li
504.644 303.058 504.749 303.152 504.85 303.253 cv
505.109 303.512 505.324 303.808 505.488 304.128 cv
504.692 304.786 li
.894118 .207843 .866667 .0745098 cmyk
f
504.85 308.202 mo
504.85 308.202 504.85 308.202 504.85 308.202 cv
504.85 308.202 504.85 308.202 504.85 308.202 cv
504.85 308.202 li
499.901 308.202 mo
499.901 308.202 li
499.901 308.202 499.901 308.202 499.901 308.202 cv
499.901 308.202 499.901 308.202 499.901 308.202 cv
.811765 .188235 .780392 .0627451 cmyk
f
504.85 303.253 mo
504.85 303.253 504.85 303.253 504.85 303.253 cv
504.85 303.253 504.85 303.253 504.85 303.252 cv
504.85 303.253 li
.894118 .207843 .866667 .0745098 cmyk
f
499.901 303.253 mo
499.901 303.252 li
499.901 303.253 499.901 303.253 499.901 303.253 cv
499.901 303.253 499.901 303.253 499.901 303.253 cv
.811765 .188235 .780392 .0627451 cmyk
f
587.577 238.125 mo
587.577 236.3 li
587.655 236.236 li
587.974 235.972 588.019 235.5 587.756 235.18 cv
587.703 235.117 587.643 235.065 587.577 235.023 cv
587.577 233.359 li
588.161 233.359 li
588.451 233.483 588.718 233.662 588.944 233.89 cv
588.945 233.89 li
589.414 234.358 589.677 234.994 589.677 235.658 cv
589.677 236.321 589.414 236.957 588.945 237.425 cv
588.944 237.425 li
588.572 237.799 588.092 238.042 587.577 238.125 cv
586.777 238.125 mo
586.435 238.07 586.107 237.943 585.817 237.755 cv
586.777 236.961 li
586.777 238.125 li
584.861 236.599 mo
584.741 236.303 584.677 235.984 584.677 235.658 cv
584.677 234.994 584.941 234.358 585.41 233.89 cv
585.41 233.89 li
585.637 233.662 585.904 233.483 586.193 233.359 cv
586.777 233.359 li
586.777 235.023 li
586.751 235.04 586.725 235.059 586.7 235.08 cv
584.861 236.599 li
f
587.177 238.158 mo
587.043 238.158 586.909 238.147 586.777 238.125 cv
586.777 236.961 li
587.577 236.3 li
587.577 238.125 li
587.446 238.147 587.312 238.158 587.177 238.158 cv
587.177 238.158 li
586.777 235.023 mo
586.777 233.359 li
587.577 233.359 li
587.577 235.023 li
587.456 234.947 587.317 234.908 587.177 234.908 cv
587.039 234.908 586.9 234.946 586.777 235.023 cv
.811765 .188235 .780392 .0823529 cmyk
f
588.161 233.359 mo
587.577 233.359 li
586.777 233.359 li
586.193 233.359 li
586.501 233.227 586.836 233.158 587.177 233.158 cv
587.519 233.158 587.854 233.227 588.161 233.359 cv
f
585.817 237.755 mo
585.671 237.66 585.535 237.55 585.41 237.425 cv
585.41 237.425 li
585.171 237.187 584.986 236.905 584.861 236.599 cv
586.7 235.08 li
586.725 235.059 586.751 235.04 586.777 235.023 cv
586.777 236.961 li
585.817 237.755 li
587.577 236.3 mo
587.577 235.023 li
587.643 235.065 587.703 235.117 587.756 235.18 cv
588.019 235.5 587.974 235.972 587.655 236.236 cv
587.577 236.3 li
.894118 .207843 .866667 .0745098 cmyk
f
586.777 236.961 mo
586.777 235.023 li
586.9 234.946 587.039 234.908 587.177 234.908 cv
587.317 234.908 587.456 234.947 587.577 235.023 cv
587.577 236.3 li
586.777 236.961 li
.894118 .207843 .866667 .0705882 cmyk
f
587.577 239.135 mo
587.577 238.125 li
588.092 238.042 588.572 237.799 588.944 237.425 cv
588.945 237.425 li
589.414 236.957 589.677 236.321 589.677 235.658 cv
589.677 234.994 589.414 234.358 588.945 233.89 cv
588.944 233.89 li
588.718 233.662 588.451 233.483 588.161 233.359 cv
589.817 233.359 li
590.37 233.994 590.677 234.81 590.677 235.658 cv
590.677 236.586 590.309 237.476 589.652 238.132 cv
589.091 238.694 588.359 239.045 587.577 239.135 cv
586.777 239.135 mo
586.136 239.061 585.528 238.811 585.02 238.413 cv
585.817 237.755 li
586.107 237.943 586.435 238.07 586.777 238.125 cv
586.777 239.135 li
.811765 .188235 .780392 .0627451 cmyk
f
587.177 239.158 mo
587.177 239.158 li
587.043 239.158 586.91 239.15 586.777 239.135 cv
586.777 238.125 li
586.909 238.147 587.043 238.158 587.177 238.158 cv
587.177 238.158 li
587.312 238.158 587.446 238.147 587.577 238.125 cv
587.577 239.135 li
587.445 239.15 587.312 239.158 587.177 239.158 cv
.811765 .188235 .780392 .0823529 cmyk
f
584.064 237.257 mo
583.812 236.767 583.677 236.219 583.677 235.658 cv
583.677 234.81 583.985 233.994 584.538 233.359 cv
586.193 233.359 li
585.904 233.483 585.637 233.662 585.41 233.89 cv
585.41 233.89 li
584.941 234.358 584.677 234.994 584.677 235.658 cv
584.677 235.984 584.741 236.303 584.861 236.599 cv
584.064 237.257 li
588.805 232.559 mo
587.577 232.559 li
587.577 232.18 li
588.008 232.23 588.425 232.359 588.805 232.559 cv
586.777 232.559 mo
585.549 232.559 li
585.93 232.359 586.346 232.23 586.777 232.18 cv
586.777 232.559 li
.811765 .188235 .780392 .0627451 cmyk
f
587.577 232.559 mo
586.777 232.559 li
586.777 232.18 li
586.91 232.165 587.043 232.158 587.177 232.158 cv
587.312 232.158 587.445 232.165 587.577 232.18 cv
587.577 232.559 li
.811765 .188235 .780392 .0823529 cmyk
f
589.817 233.359 mo
588.161 233.359 li
587.854 233.227 587.519 233.158 587.177 233.158 cv
586.836 233.158 586.501 233.227 586.193 233.359 cv
584.538 233.359 li
584.591 233.299 584.646 233.24 584.703 233.183 cv
584.954 232.931 585.24 232.722 585.549 232.559 cv
586.777 232.559 li
587.577 232.559 li
588.805 232.559 li
589.115 232.722 589.401 232.931 589.652 233.183 cv
589.709 233.24 589.764 233.299 589.817 233.359 cv
f
585.02 238.413 mo
584.909 238.327 584.803 238.233 584.703 238.132 cv
584.443 237.873 584.229 237.577 584.064 237.257 cv
584.861 236.599 li
584.986 236.905 585.171 237.187 585.41 237.425 cv
585.41 237.425 li
585.535 237.55 585.671 237.66 585.817 237.755 cv
585.02 238.413 li
.894118 .207843 .866667 .0745098 cmyk
f
589.652 238.132 mo
589.652 238.132 589.652 238.132 589.652 238.132 cv
589.652 238.132 589.652 238.132 589.652 238.132 cv
589.652 238.132 li
.811765 .188235 .780392 .0627451 cmyk
f
584.703 238.132 mo
584.703 238.132 li
584.703 238.132 584.703 238.132 584.703 238.132 cv
584.703 238.132 584.703 238.132 584.703 238.132 cv
.894118 .207843 .866667 .0745098 cmyk
f
589.652 233.183 mo
589.652 233.183 589.652 233.183 589.652 233.183 cv
589.652 233.183 589.652 233.183 589.652 233.183 cv
589.652 233.183 li
584.703 233.183 mo
584.703 233.183 li
584.703 233.183 584.703 233.183 584.703 233.183 cv
584.703 233.183 584.703 233.183 584.703 233.183 cv
.811765 .188235 .780392 .0823529 cmyk
f
grestore
1.5 lw
1 lc
1 lj
332.771 239.901 mo
417.573 263.913 li
502.375 235.555 li
587.177 284.683 li
0 .550439 .957794 0 cmyk
@
332.771 242.901 mo
333.567 242.901 334.33 242.585 334.892 242.022 cv
335.455 241.46 335.771 240.697 335.771 239.901 cv
335.771 239.105 335.455 238.342 334.892 237.78 cv
334.33 237.217 333.567 236.901 332.771 236.901 cv
331.975 236.901 331.212 237.217 330.65 237.78 cv
330.087 238.342 329.771 239.105 329.771 239.901 cv
329.771 240.697 330.087 241.46 330.65 242.022 cv
331.212 242.585 331.975 242.901 332.771 242.901 cv
cp
f
1 lw
0 lc
332.771 242.901 mo
333.567 242.901 334.33 242.585 334.892 242.022 cv
335.455 241.46 335.771 240.697 335.771 239.901 cv
335.771 239.105 335.455 238.342 334.892 237.78 cv
334.33 237.217 333.567 236.901 332.771 236.901 cv
331.975 236.901 331.212 237.217 330.65 237.78 cv
330.087 238.342 329.771 239.105 329.771 239.901 cv
329.771 240.697 330.087 241.46 330.65 242.022 cv
331.212 242.585 331.975 242.901 332.771 242.901 cv
cp
@
417.573 266.914 mo
418.369 266.914 419.132 266.598 419.694 266.035 cv
420.257 265.473 420.573 264.71 420.573 263.914 cv
420.573 263.118 420.257 262.355 419.694 261.793 cv
419.132 261.23 418.369 260.914 417.573 260.914 cv
416.777 260.914 416.014 261.23 415.452 261.793 cv
414.889 262.355 414.573 263.118 414.573 263.914 cv
414.573 264.71 414.889 265.473 415.452 266.035 cv
416.014 266.598 416.777 266.914 417.573 266.914 cv
cp
f
417.573 266.914 mo
418.369 266.914 419.132 266.598 419.694 266.035 cv
420.257 265.473 420.573 264.71 420.573 263.914 cv
420.573 263.118 420.257 262.355 419.694 261.793 cv
419.132 261.23 418.369 260.914 417.573 260.914 cv
416.777 260.914 416.014 261.23 415.452 261.793 cv
414.889 262.355 414.573 263.118 414.573 263.914 cv
414.573 264.71 414.889 265.473 415.452 266.035 cv
416.014 266.598 416.777 266.914 417.573 266.914 cv
cp
@
502.375 238.555 mo
503.171 238.555 503.934 238.239 504.496 237.676 cv
505.059 237.114 505.375 236.351 505.375 235.555 cv
505.375 234.759 505.059 233.996 504.496 233.434 cv
503.934 232.871 503.171 232.555 502.375 232.555 cv
501.579 232.555 500.816 232.871 500.254 233.434 cv
499.691 233.996 499.375 234.759 499.375 235.555 cv
499.375 236.351 499.691 237.114 500.254 237.676 cv
500.816 238.239 501.579 238.555 502.375 238.555 cv
cp
f
502.375 238.555 mo
503.171 238.555 503.934 238.239 504.496 237.676 cv
505.059 237.114 505.375 236.351 505.375 235.555 cv
505.375 234.759 505.059 233.996 504.496 233.434 cv
503.934 232.871 503.171 232.555 502.375 232.555 cv
501.579 232.555 500.816 232.871 500.254 233.434 cv
499.691 233.996 499.375 234.759 499.375 235.555 cv
499.375 236.351 499.691 237.114 500.254 237.676 cv
500.816 238.239 501.579 238.555 502.375 238.555 cv
cp
@
587.177 287.684 mo
587.973 287.684 588.736 287.368 589.298 286.805 cv
589.861 286.243 590.177 285.48 590.177 284.684 cv
590.177 283.888 589.861 283.125 589.298 282.563 cv
588.736 282 587.973 281.684 587.177 281.684 cv
586.381 281.684 585.618 282 585.056 282.563 cv
584.493 283.125 584.177 283.888 584.177 284.684 cv
584.177 285.48 584.493 286.243 585.056 286.805 cv
585.618 287.368 586.381 287.684 587.177 287.684 cv
cp
f
587.177 287.684 mo
587.973 287.684 588.736 287.368 589.298 286.805 cv
589.861 286.243 590.177 285.48 590.177 284.684 cv
590.177 283.888 589.861 283.125 589.298 282.563 cv
588.736 282 587.973 281.684 587.177 281.684 cv
586.381 281.684 585.618 282 585.056 282.563 cv
584.493 283.125 584.177 283.888 584.177 284.684 cv
584.177 285.48 584.493 286.243 585.056 286.805 cv
585.618 287.368 586.381 287.684 587.177 287.684 cv
cp
@
.8 lw
2 lc
0 lj
320.051 315.226 mo
320.051 191.826 li
1 /0 /CSD get_res sepcs
.2 sep
@
599.898 315.226 mo
599.898 191.826 li
@
320.051 315.226 mo
599.898 315.226 li
@
320.051 191.826 mo
599.898 191.826 li
@
432.943 189.857 mo
432.943 190.145 li
432.143 189.745 431.487 189.281 430.975 188.753 cv
430.207 187.985 429.631 187.105 429.231 186.097 cv
428.815 185.073 428.623 184.017 428.623 182.897 cv
428.623 181.297 429.007 179.825 429.807 178.481 cv
430.607 177.153 431.647 176.209 432.943 175.633 cv
432.943 175.953 li
432.287 176.305 431.759 176.801 431.343 177.409 cv
430.927 178.033 430.623 178.817 430.431 179.745 cv
430.223 180.689 430.127 181.681 430.127 182.705 cv
430.127 183.825 430.207 184.833 430.383 185.729 cv
430.511 186.449 430.687 187.009 430.879 187.441 cv
431.071 187.873 431.327 188.289 431.647 188.705 cv
431.967 189.105 432.399 189.489 432.943 189.857 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
433.567 186.737 mo
433.567 186.449 li
433.967 186.449 li
434.415 186.449 434.735 186.305 434.927 186.017 cv
435.023 185.857 435.087 185.473 435.087 184.865 cv
435.087 178.017 li
435.087 177.361 435.007 176.945 434.879 176.769 cv
434.671 176.545 434.367 176.433 433.967 176.433 cv
433.567 176.433 li
433.567 176.145 li
437.887 176.145 li
439.455 176.145 440.655 176.337 441.487 176.689 cv
442.319 177.041 442.975 177.649 443.487 178.481 cv
443.983 179.313 444.239 180.289 444.239 181.393 cv
444.239 182.865 443.791 184.097 442.895 185.073 cv
441.887 186.193 440.351 186.737 438.303 186.737 cv
433.567 186.737 li
cp
436.591 185.969 mo
437.247 186.129 437.807 186.193 438.255 186.193 cv
439.455 186.193 440.463 185.777 441.263 184.929 cv
442.063 184.081 442.463 182.929 442.463 181.457 cv
442.463 180.001 442.063 178.849 441.263 178.001 cv
440.463 177.169 439.439 176.737 438.191 176.737 cv
437.711 176.737 437.183 176.817 436.591 176.961 cv
436.591 185.969 li
cp
f
445.199 175.953 mo
445.199 175.633 li
445.999 176.017 446.655 176.481 447.183 177.009 cv
447.919 177.777 448.495 178.657 448.911 179.681 cv
449.311 180.705 449.519 181.777 449.519 182.881 cv
449.519 184.513 449.119 185.985 448.319 187.297 cv
447.519 188.609 446.479 189.569 445.199 190.145 cv
445.199 189.857 li
445.839 189.489 446.367 188.993 446.783 188.385 cv
447.199 187.777 447.503 186.993 447.711 186.065 cv
447.903 185.137 448.015 184.145 448.015 183.121 cv
448.015 182.017 447.919 181.009 447.759 180.081 cv
447.615 179.377 447.455 178.801 447.263 178.369 cv
447.071 177.937 446.799 177.521 446.479 177.105 cv
446.159 176.705 445.727 176.321 445.199 175.953 cv
cp
f
457.454 176.721 mo
457.454 180.881 li
459.375 180.881 li
459.823 180.881 460.142 180.785 460.35 180.593 cv
460.543 180.401 460.686 180.017 460.767 179.425 cv
461.055 179.425 li
461.055 183.025 li
460.767 183.025 li
460.75 182.609 460.686 182.305 460.591 182.113 cv
460.495 181.921 460.35 181.777 460.174 181.681 cv
459.983 181.585 459.727 181.537 459.375 181.537 cv
457.454 181.537 li
457.454 184.865 li
457.454 185.409 457.487 185.761 457.551 185.921 cv
457.599 186.049 457.711 186.161 457.871 186.257 cv
458.095 186.385 458.335 186.449 458.591 186.449 cv
458.974 186.449 li
458.974 186.737 li
454.431 186.737 li
454.431 186.449 li
454.815 186.449 li
455.246 186.449 455.566 186.321 455.759 186.065 cv
455.887 185.905 455.951 185.505 455.951 184.865 cv
455.951 178.017 li
455.951 177.489 455.902 177.137 455.839 176.961 cv
455.79 176.833 455.678 176.721 455.518 176.625 cv
455.294 176.497 455.055 176.433 454.815 176.433 cv
454.431 176.433 li
454.431 176.145 li
462.319 176.145 li
462.414 178.465 li
462.142 178.465 li
461.999 177.985 461.839 177.617 461.663 177.393 cv
461.487 177.169 461.263 176.993 461.007 176.881 cv
460.734 176.785 460.335 176.721 459.79 176.721 cv
457.454 176.721 li
cp
f
462.879 176.145 mo
465.742 176.145 li
472.206 184.081 li
472.206 177.985 li
472.206 177.345 472.126 176.929 471.999 176.753 cv
471.806 176.545 471.487 176.433 471.07 176.433 cv
470.719 176.433 li
470.719 176.145 li
474.398 176.145 li
474.398 176.433 li
474.03 176.433 li
473.582 176.433 473.262 176.577 473.07 176.833 cv
472.943 177.009 472.895 177.393 472.895 177.985 cv
472.895 186.897 li
472.622 186.897 li
465.63 178.385 li
465.63 184.897 li
465.63 185.553 465.694 185.953 465.839 186.113 cv
466.03 186.337 466.335 186.449 466.75 186.449 cv
467.134 186.449 li
467.134 186.737 li
463.439 186.737 li
463.439 186.449 li
463.806 186.449 li
464.254 186.449 464.574 186.321 464.767 186.049 cv
464.879 185.889 464.943 185.505 464.943 184.897 cv
464.943 177.537 li
464.622 177.185 464.398 176.945 464.238 176.833 cv
464.078 176.721 463.854 176.609 463.551 176.497 cv
463.391 176.465 463.167 176.433 462.879 176.433 cv
462.879 176.145 li
cp
f
485.438 186.737 mo
482.607 186.737 li
479.023 181.777 li
478.75 181.793 478.526 181.793 478.367 181.793 cv
478.143 181.793 li
477.919 181.777 li
477.919 184.865 li
477.919 185.537 477.982 185.937 478.127 186.097 cv
478.318 186.337 478.622 186.449 479.023 186.449 cv
479.438 186.449 li
479.438 186.737 li
474.895 186.737 li
474.895 186.449 li
475.294 186.449 li
475.742 186.449 476.063 186.305 476.255 186.017 cv
476.351 185.857 476.414 185.473 476.414 184.865 cv
476.414 178.017 li
476.414 177.361 476.334 176.945 476.206 176.769 cv
475.999 176.545 475.694 176.433 475.294 176.433 cv
474.895 176.433 li
474.895 176.145 li
478.75 176.145 li
479.87 176.145 480.703 176.241 481.247 176.401 cv
481.774 176.561 482.222 176.865 482.607 177.297 cv
482.974 177.745 483.167 178.257 483.167 178.865 cv
483.167 179.521 482.943 180.081 482.526 180.561 cv
482.094 181.041 481.438 181.393 480.558 181.585 cv
482.734 184.625 li
483.23 185.329 483.662 185.793 484.031 186.017 cv
484.383 186.241 484.862 186.385 485.438 186.449 cv
485.438 186.737 li
cp
477.919 181.297 mo
478.015 181.297 478.094 181.297 478.174 181.297 cv
478.351 181.297 li
479.359 181.297 480.127 181.089 480.638 180.641 cv
481.151 180.209 481.406 179.649 481.406 178.977 cv
481.406 178.321 481.198 177.777 480.782 177.361 cv
480.367 176.945 479.807 176.737 479.135 176.737 cv
478.831 176.737 478.43 176.785 477.919 176.881 cv
477.919 181.297 li
cp
f
500.175 175.905 mo
492.447 187.153 li
491.759 187.153 li
499.471 175.905 li
500.175 175.905 li
cp
492.143 175.905 mo
492.847 175.905 493.391 176.209 493.775 176.785 cv
494.159 177.361 494.351 178.033 494.351 178.785 cv
494.351 179.697 494.127 180.401 493.695 180.897 cv
493.247 181.393 492.735 181.633 492.127 181.633 cv
491.711 181.633 491.327 181.521 490.991 181.297 cv
490.639 181.073 490.367 180.721 490.159 180.273 cv
489.951 179.825 489.855 179.329 489.855 178.785 cv
489.855 178.241 489.951 177.745 490.159 177.281 cv
490.367 176.817 490.655 176.465 491.023 176.241 cv
491.375 176.017 491.759 175.905 492.143 175.905 cv
cp
492.111 176.337 mo
491.839 176.337 491.599 176.497 491.407 176.817 cv
491.199 177.137 491.103 177.777 491.103 178.769 cv
491.103 179.505 491.151 180.049 491.279 180.433 cv
491.359 180.721 491.487 180.945 491.679 181.089 cv
491.791 181.185 491.935 181.233 492.095 181.233 cv
492.335 181.233 492.543 181.105 492.735 180.833 cv
492.991 180.433 493.119 179.761 493.119 178.817 cv
493.119 177.841 492.991 177.153 492.735 176.737 cv
492.575 176.481 492.367 176.337 492.111 176.337 cv
cp
499.807 181.473 mo
500.175 181.473 500.543 181.601 500.911 181.825 cv
501.279 182.065 501.567 182.401 501.759 182.849 cv
501.951 183.297 502.063 183.793 502.063 184.337 cv
502.063 185.265 501.839 185.953 501.391 186.433 cv
500.943 186.913 500.431 187.153 499.839 187.153 cv
499.455 187.153 499.071 187.025 498.719 186.801 cv
498.367 186.577 498.079 186.257 497.887 185.825 cv
497.679 185.393 497.583 184.897 497.583 184.337 cv
497.583 183.793 497.679 183.281 497.887 182.833 cv
498.079 182.385 498.367 182.033 498.719 181.809 cv
499.071 181.585 499.439 181.473 499.807 181.473 cv
cp
499.823 181.889 mo
499.567 181.889 499.343 182.033 499.167 182.321 cv
498.927 182.689 498.815 183.377 498.815 184.385 cv
498.815 185.313 498.927 185.969 499.183 186.337 cv
499.343 186.609 499.567 186.737 499.823 186.737 cv
500.047 186.737 500.271 186.593 500.463 186.305 cv
500.703 185.921 500.831 185.281 500.831 184.353 cv
500.831 183.377 500.703 182.689 500.463 182.289 cv
500.287 182.033 500.079 181.889 499.823 181.889 cv
cp
f
372.427 4.61997 mo
372.427 6.67797 li
373.897 6.67797 li
373.897 7.15397 li
372.427 7.15397 li
372.427 11.214 li
372.427 11.62 372.483 11.9 372.595 12.04 cv
372.707 12.18 372.861 12.25 373.057 12.25 cv
373.197 12.25 373.351 12.208 373.491 12.11 cv
373.631 12.026 373.729 11.886 373.813 11.69 cv
374.079 11.69 li
373.911 12.138 373.687 12.474 373.407 12.698 cv
373.113 12.922 372.819 13.02 372.511 13.02 cv
372.287 13.02 372.077 12.964 371.881 12.852 cv
371.685 12.74 371.531 12.586 371.447 12.362 cv
371.349 12.152 371.307 11.816 371.307 11.368 cv
371.307 7.15397 li
370.313 7.15397 li
370.313 6.92997 li
370.565 6.83197 370.817 6.66397 371.083 6.42597 cv
371.335 6.18797 371.573 5.90797 371.783 5.57197 cv
371.881 5.40397 372.021 5.08197 372.217 4.61997 cv
372.427 4.61997 li
cp
f
376.333 6.49597 mo
376.333 7.89597 li
376.851 6.97197 377.383 6.49597 377.943 6.49597 cv
378.195 6.49597 378.391 6.57997 378.559 6.71997 cv
378.727 6.87397 378.811 7.05597 378.811 7.25197 cv
378.811 7.43397 378.741 7.58797 378.629 7.69997 cv
378.517 7.82597 378.377 7.88197 378.209 7.88197 cv
378.041 7.88197 377.873 7.81197 377.677 7.64397 cv
377.481 7.48997 377.327 7.40597 377.243 7.40597 cv
376.977 7.54597 li
376.767 7.74197 376.557 8.04997 376.333 8.46997 cv
376.333 11.48 li
376.333 11.83 376.375 12.096 376.459 12.264 cv
376.515 12.39 376.627 12.488 376.781 12.572 cv
376.921 12.656 377.145 12.684 377.425 12.684 cv
377.425 12.936 li
374.219 12.936 li
374.219 12.684 li
374.527 12.684 374.765 12.642 374.933 12.544 cv
375.045 12.474 375.115 12.362 375.171 12.194 cv
375.199 12.11 375.213 11.886 375.213 11.522 cv
375.213 9.09997 li
375.213 8.37197 375.185 7.93797 375.157 7.79797 cv
375.129 7.65797 375.073 7.55997 374.989 7.48997 cv
374.905 7.43397 374.807 7.39197 374.695 7.39197 cv
374.555 7.39197 374.387 7.43397 374.219 7.50397 cv
374.149 7.25197 li
376.053 6.49597 li
376.333 6.49597 li
cp
f
382.717 12.04 mo
382.073 12.544 381.667 12.824 381.499 12.894 cv
381.247 12.992 380.995 13.048 380.715 13.048 cv
380.281 13.048 379.931 12.908 379.651 12.614 cv
379.371 12.334 379.231 11.942 379.231 11.452 cv
379.231 11.144 379.287 10.878 379.427 10.654 cv
379.609 10.346 379.931 10.066 380.393 9.78597 cv
380.855 9.51997 381.625 9.18397 382.717 8.79197 cv
382.717 8.53997 li
382.717 7.92397 382.605 7.48997 382.409 7.25197 cv
382.213 7.02797 381.919 6.90197 381.555 6.90197 cv
381.261 6.90197 381.037 6.98597 380.869 7.13997 cv
380.687 7.30797 380.603 7.47597 380.603 7.67197 cv
380.617 8.06397 li
380.617 8.28797 380.561 8.44197 380.449 8.55397 cv
380.337 8.66597 380.211 8.72197 380.043 8.72197 cv
379.875 8.72197 379.735 8.66597 379.623 8.55397 cv
379.511 8.44197 379.469 8.27397 379.469 8.06397 cv
379.469 7.67197 379.665 7.32197 380.071 6.98597 cv
380.463 6.66397 381.023 6.49597 381.751 6.49597 cv
382.311 6.49597 382.759 6.59397 383.123 6.77597 cv
383.389 6.91597 383.585 7.13997 383.711 7.43397 cv
383.795 7.62997 383.837 8.03597 383.837 8.63797 cv
383.837 10.766 li
383.837 11.368 383.837 11.732 383.865 11.858 cv
383.893 11.998 383.921 12.082 383.977 12.124 cv
384.159 12.194 li
384.355 12.152 li
384.453 12.096 384.635 11.928 384.915 11.648 cv
384.915 12.04 li
384.397 12.712 383.907 13.048 383.445 13.048 cv
383.221 13.048 383.039 12.964 382.913 12.824 cv
382.773 12.684 382.717 12.418 382.717 12.04 cv
cp
382.717 11.592 mo
382.717 9.19797 li
382.017 9.47797 381.569 9.67397 381.373 9.78597 cv
381.009 9.98197 380.757 10.192 380.603 10.416 cv
380.449 10.64 380.379 10.878 380.379 11.13 cv
380.379 11.466 380.477 11.732 380.673 11.956 cv
380.869 12.18 381.093 12.278 381.345 12.278 cv
381.681 12.278 382.143 12.054 382.717 11.592 cv
cp
f
386.973 3.21997 mo
387.169 3.21997 387.323 3.28997 387.463 3.41597 cv
387.589 3.55597 387.659 3.70997 387.659 3.90597 cv
387.659 4.10197 387.589 4.25597 387.463 4.39597 cv
387.323 4.53597 387.169 4.60597 386.973 4.60597 cv
386.777 4.60597 386.623 4.53597 386.483 4.39597 cv
386.343 4.25597 386.273 4.10197 386.273 3.90597 cv
386.273 3.70997 386.329 3.55597 386.469 3.41597 cv
386.609 3.28997 386.777 3.21997 386.973 3.21997 cv
cp
387.547 6.49597 mo
387.547 11.522 li
387.547 11.914 387.575 12.18 387.631 12.306 cv
387.687 12.446 387.771 12.544 387.883 12.6 cv
387.995 12.656 388.191 12.684 388.485 12.684 cv
388.485 12.936 li
385.447 12.936 li
385.447 12.684 li
385.755 12.684 385.951 12.656 386.063 12.6 cv
386.161 12.544 386.245 12.446 386.301 12.306 cv
386.357 12.166 386.399 11.914 386.399 11.522 cv
386.399 9.11397 li
386.399 8.44197 386.371 7.99397 386.343 7.78397 cv
386.315 7.64397 386.259 7.54597 386.189 7.48997 cv
386.119 7.43397 386.021 7.39197 385.909 7.39197 cv
385.783 7.39197 385.629 7.43397 385.447 7.50397 cv
385.349 7.25197 li
387.239 6.49597 li
387.547 6.49597 li
cp
f
391.103 7.81197 mo
391.831 6.94397 392.531 6.49597 393.203 6.49597 cv
393.539 6.49597 393.819 6.57997 394.071 6.74797 cv
394.323 6.91597 394.519 7.19597 394.673 7.58797 cv
394.757 7.86797 394.813 8.28797 394.813 8.84797 cv
394.813 11.522 li
394.813 11.914 394.841 12.194 394.911 12.334 cv
394.953 12.446 395.037 12.544 395.149 12.6 cv
395.261 12.656 395.471 12.684 395.779 12.684 cv
395.779 12.936 li
392.671 12.936 li
392.671 12.684 li
392.811 12.684 li
393.091 12.684 393.301 12.642 393.413 12.558 cv
393.525 12.474 393.609 12.334 393.665 12.166 cv
393.679 12.096 393.693 11.886 393.693 11.522 cv
393.693 8.95997 li
393.693 8.39997 393.609 7.97997 393.469 7.72797 cv
393.315 7.47597 393.063 7.33597 392.713 7.33597 cv
392.167 7.33597 391.635 7.62997 391.103 8.21797 cv
391.103 11.522 li
391.103 11.942 391.117 12.208 391.173 12.306 cv
391.229 12.446 391.327 12.544 391.439 12.6 cv
391.551 12.656 391.775 12.684 392.111 12.684 cv
392.111 12.936 li
389.017 12.936 li
389.017 12.684 li
389.157 12.684 li
389.465 12.684 389.689 12.614 389.801 12.446 cv
389.913 12.292 389.969 11.984 389.969 11.522 cv
389.969 9.19797 li
389.969 8.44197 389.941 7.99397 389.913 7.82597 cv
389.885 7.65797 389.829 7.54597 389.759 7.48997 cv
389.689 7.43397 389.591 7.39197 389.479 7.39197 cv
389.339 7.39197 389.185 7.43397 389.017 7.50397 cv
388.919 7.25197 li
390.809 6.49597 li
391.103 6.49597 li
391.103 7.81197 li
cp
f
397.865 3.21997 mo
398.061 3.21997 398.215 3.28997 398.355 3.41597 cv
398.481 3.55597 398.551 3.70997 398.551 3.90597 cv
398.551 4.10197 398.481 4.25597 398.355 4.39597 cv
398.215 4.53597 398.061 4.60597 397.865 4.60597 cv
397.669 4.60597 397.515 4.53597 397.375 4.39597 cv
397.235 4.25597 397.165 4.10197 397.165 3.90597 cv
397.165 3.70997 397.221 3.55597 397.361 3.41597 cv
397.501 3.28997 397.669 3.21997 397.865 3.21997 cv
cp
398.439 6.49597 mo
398.439 11.522 li
398.439 11.914 398.467 12.18 398.523 12.306 cv
398.579 12.446 398.663 12.544 398.775 12.6 cv
398.887 12.656 399.083 12.684 399.377 12.684 cv
399.377 12.936 li
396.339 12.936 li
396.339 12.684 li
396.647 12.684 396.843 12.656 396.955 12.6 cv
397.053 12.544 397.137 12.446 397.193 12.306 cv
397.249 12.166 397.291 11.914 397.291 11.522 cv
397.291 9.11397 li
397.291 8.44197 397.263 7.99397 397.235 7.78397 cv
397.207 7.64397 397.151 7.54597 397.081 7.48997 cv
397.011 7.43397 396.913 7.39197 396.801 7.39197 cv
396.675 7.39197 396.521 7.43397 396.339 7.50397 cv
396.241 7.25197 li
398.131 6.49597 li
398.439 6.49597 li
cp
f
401.995 7.81197 mo
402.723 6.94397 403.423 6.49597 404.095 6.49597 cv
404.431 6.49597 404.711 6.57997 404.963 6.74797 cv
405.215 6.91597 405.411 7.19597 405.565 7.58797 cv
405.649 7.86797 405.705 8.28797 405.705 8.84797 cv
405.705 11.522 li
405.705 11.914 405.733 12.194 405.803 12.334 cv
405.845 12.446 405.929 12.544 406.041 12.6 cv
406.153 12.656 406.363 12.684 406.671 12.684 cv
406.671 12.936 li
403.563 12.936 li
403.563 12.684 li
403.703 12.684 li
403.983 12.684 404.193 12.642 404.305 12.558 cv
404.417 12.474 404.501 12.334 404.557 12.166 cv
404.571 12.096 404.585 11.886 404.585 11.522 cv
404.585 8.95997 li
404.585 8.39997 404.501 7.97997 404.361 7.72797 cv
404.207 7.47597 403.955 7.33597 403.605 7.33597 cv
403.059 7.33597 402.527 7.62997 401.995 8.21797 cv
401.995 11.522 li
401.995 11.942 402.009 12.208 402.065 12.306 cv
402.121 12.446 402.219 12.544 402.331 12.6 cv
402.443 12.656 402.667 12.684 403.003 12.684 cv
403.003 12.936 li
399.909 12.936 li
399.909 12.684 li
400.049 12.684 li
400.357 12.684 400.581 12.614 400.693 12.446 cv
400.805 12.292 400.861 11.984 400.861 11.522 cv
400.861 9.19797 li
400.861 8.44197 400.833 7.99397 400.805 7.82597 cv
400.777 7.65797 400.721 7.54597 400.651 7.48997 cv
400.581 7.43397 400.483 7.39197 400.371 7.39197 cv
400.231 7.39197 400.077 7.43397 399.909 7.50397 cv
399.811 7.25197 li
401.701 6.49597 li
401.995 6.49597 li
401.995 7.81197 li
cp
f
408.841 10.654 mo
408.449 10.472 408.155 10.206 407.959 9.86997 cv
407.749 9.53397 407.651 9.16997 407.651 8.76397 cv
407.651 8.14797 407.875 7.61597 408.351 7.16797 cv
408.813 6.71997 409.415 6.49597 410.143 6.49597 cv
410.731 6.49597 411.249 6.64997 411.697 6.92997 cv
413.027 6.92997 li
413.223 6.92997 413.335 6.94397 413.363 6.94397 cv
413.433 6.99997 li
413.461 7.05597 413.475 7.12597 413.475 7.22397 cv
413.475 7.33597 413.461 7.41997 413.433 7.46197 cv
413.363 7.53197 li
413.335 7.54597 413.223 7.54597 413.027 7.54597 cv
412.215 7.54597 li
412.467 7.88197 412.593 8.30197 412.593 8.80597 cv
412.593 9.39397 412.369 9.88397 411.921 10.304 cv
411.473 10.724 410.871 10.92 410.129 10.92 cv
409.807 10.92 409.485 10.878 409.177 10.78 cv
408.967 10.962 408.827 11.116 408.757 11.242 cv
408.687 11.382 408.659 11.48 408.659 11.564 cv
408.771 11.802 li
408.841 11.872 408.995 11.928 409.219 11.956 cv
409.331 11.984 409.653 11.998 410.171 11.998 cv
411.109 12.026 411.711 12.068 411.991 12.096 cv
412.411 12.152 412.761 12.306 413.013 12.558 cv
413.265 12.81 413.391 13.118 413.391 13.496 cv
413.391 14 413.139 14.49 412.663 14.952 cv
411.949 15.61 411.025 15.946 409.891 15.946 cv
408.995 15.946 408.253 15.736 407.651 15.344 cv
407.315 15.12 407.147 14.882 407.147 14.644 cv
407.147 14.532 407.161 14.42 407.217 14.308 cv
407.287 14.14 407.441 13.902 407.693 13.608 cv
407.721 13.552 407.959 13.314 408.393 12.88 cv
408.155 12.74 407.987 12.614 407.889 12.502 cv
407.791 12.39 407.749 12.264 407.749 12.124 cv
407.749 11.97 407.805 11.788 407.945 11.564 cv
408.071 11.354 408.365 11.046 408.841 10.654 cv
cp
410.031 6.81797 mo
409.695 6.81797 409.401 6.95797 409.177 7.22397 cv
408.953 7.50397 408.841 7.90997 408.841 8.45597 cv
408.841 9.18397 408.995 9.74397 409.303 10.136 cv
409.527 10.444 409.835 10.584 410.213 10.584 cv
410.549 10.584 410.829 10.458 411.053 10.192 cv
411.277 9.93997 411.389 9.53397 411.389 8.97397 cv
411.389 8.24597 411.235 7.68597 410.927 7.26597 cv
410.689 6.97197 410.395 6.81797 410.031 6.81797 cv
cp
408.771 12.936 mo
408.547 13.16 408.393 13.37 408.281 13.566 cv
408.169 13.762 408.127 13.958 408.127 14.126 cv
408.127 14.336 408.253 14.532 408.519 14.7 cv
408.967 14.98 409.625 15.12 410.493 15.12 cv
411.305 15.12 411.907 14.966 412.299 14.686 cv
412.691 14.392 412.887 14.084 412.887 13.762 cv
412.887 13.524 412.775 13.356 412.551 13.258 cv
412.299 13.146 411.837 13.09 411.137 13.076 cv
410.101 13.048 409.317 12.992 408.771 12.936 cv
cp
f
420.867 6.97197 mo
423.737 6.97197 li
423.737 7.22397 li
423.345 7.25197 423.051 7.34997 422.855 7.48997 cv
422.659 7.62997 422.365 8.06397 421.973 8.79197 cv
421.567 9.51997 421.119 10.192 420.629 10.822 cv
421.021 11.298 421.385 11.62 421.707 11.816 cv
422.015 12.012 422.337 12.096 422.673 12.096 cv
422.981 12.096 423.247 12.012 423.471 11.844 cv
423.695 11.676 423.849 11.424 423.933 11.088 cv
424.199 11.27 li
424.017 11.914 423.737 12.39 423.373 12.684 cv
422.995 12.978 422.561 13.132 422.071 13.132 cv
421.693 13.132 421.315 13.034 420.937 12.838 cv
420.545 12.642 420.125 12.306 419.677 11.816 cv
419.103 12.32 418.585 12.67 418.137 12.852 cv
417.689 13.034 417.199 13.132 416.695 13.132 cv
415.939 13.132 415.337 12.936 414.903 12.544 cv
414.455 12.152 414.245 11.676 414.245 11.116 cv
414.245 10.57 414.441 10.024 414.833 9.46397 cv
415.225 8.91797 415.981 8.34397 417.073 7.75597 cv
416.849 7.27997 416.709 6.90197 416.625 6.59397 cv
416.541 6.28597 416.513 5.99197 416.513 5.71197 cv
416.513 4.94197 416.793 4.35397 417.381 3.93397 cv
417.829 3.62597 418.333 3.45797 418.907 3.45797 cv
419.439 3.45797 419.887 3.62597 420.223 3.94797 cv
420.559 4.26997 420.741 4.66197 420.741 5.12397 cv
420.741 5.61397 420.573 6.03397 420.237 6.39797 cv
419.901 6.76197 419.327 7.16797 418.487 7.58797 cv
419.061 8.62397 419.663 9.57597 420.307 10.416 cv
421.105 9.46397 421.511 8.66597 421.511 7.99397 cv
421.511 7.79797 421.441 7.60197 421.301 7.43397 cv
421.189 7.32197 421.049 7.25197 420.867 7.22397 cv
420.867 6.97197 li
cp
418.263 7.13997 mo
418.823 6.88797 419.243 6.57997 419.523 6.22997 cv
419.803 5.89397 419.943 5.50197 419.943 5.08197 cv
419.943 4.75997 419.831 4.49397 419.635 4.26997 cv
419.439 4.05997 419.187 3.94797 418.893 3.94797 cv
418.487 3.94797 418.179 4.08797 417.983 4.36797 cv
417.787 4.64797 417.689 4.91397 417.689 5.17997 cv
417.689 5.40397 417.717 5.65597 417.801 5.93597 cv
417.871 6.21597 418.025 6.60797 418.263 7.13997 cv
cp
419.313 11.424 mo
418.711 10.612 418.291 10.01 418.067 9.63197 cv
417.829 9.25397 417.577 8.77797 417.297 8.21797 cv
416.751 8.52597 416.345 8.87597 416.065 9.25397 cv
415.785 9.63197 415.659 10.038 415.659 10.486 cv
415.659 10.976 415.813 11.41 416.121 11.774 cv
416.429 12.138 416.863 12.32 417.395 12.32 cv
417.675 12.32 417.955 12.264 418.221 12.152 cv
418.487 12.04 418.851 11.802 419.313 11.424 cv
cp
f
426.873 4.61997 mo
426.873 6.67797 li
428.343 6.67797 li
428.343 7.15397 li
426.873 7.15397 li
426.873 11.214 li
426.873 11.62 426.929 11.9 427.041 12.04 cv
427.153 12.18 427.307 12.25 427.503 12.25 cv
427.643 12.25 427.797 12.208 427.937 12.11 cv
428.077 12.026 428.175 11.886 428.259 11.69 cv
428.525 11.69 li
428.357 12.138 428.133 12.474 427.853 12.698 cv
427.559 12.922 427.265 13.02 426.957 13.02 cv
426.733 13.02 426.523 12.964 426.327 12.852 cv
426.131 12.74 425.977 12.586 425.893 12.362 cv
425.795 12.152 425.753 11.816 425.753 11.368 cv
425.753 7.15397 li
424.759 7.15397 li
424.759 6.92997 li
425.011 6.83197 425.263 6.66397 425.529 6.42597 cv
425.781 6.18797 426.019 5.90797 426.229 5.57197 cv
426.327 5.40397 426.467 5.08197 426.663 4.61997 cv
426.873 4.61997 li
cp
f
429.995 9.02997 mo
429.995 9.96797 430.219 10.696 430.681 11.228 cv
431.129 11.76 431.675 12.012 432.291 12.012 cv
432.683 12.012 433.033 11.9 433.341 11.676 cv
433.649 11.452 433.901 11.074 434.111 10.514 cv
434.335 10.654 li
434.223 11.284 433.943 11.858 433.495 12.362 cv
433.033 12.866 432.459 13.118 431.759 13.118 cv
431.003 13.118 430.359 12.838 429.827 12.25 cv
429.295 11.662 429.029 10.878 429.029 9.88397 cv
429.029 8.81997 429.295 7.97997 429.855 7.37797 cv
430.401 6.78997 431.087 6.48197 431.927 6.48197 cv
432.627 6.48197 433.201 6.71997 433.649 7.18197 cv
434.097 7.64397 434.335 8.25997 434.335 9.02997 cv
429.995 9.02997 li
cp
429.995 8.63797 mo
432.893 8.63797 li
432.865 8.24597 432.823 7.95197 432.753 7.78397 cv
432.641 7.53197 432.473 7.33597 432.249 7.19597 cv
432.025 7.05597 431.787 6.97197 431.535 6.97197 cv
431.157 6.97197 430.821 7.12597 430.527 7.41997 cv
430.219 7.71397 430.051 8.11997 429.995 8.63797 cv
cp
f
439.207 6.49597 mo
439.207 8.62397 li
438.983 8.62397 li
438.815 7.95197 438.591 7.50397 438.325 7.25197 cv
438.045 7.01397 437.709 6.88797 437.289 6.88797 cv
436.953 6.88797 436.701 6.97197 436.505 7.13997 cv
436.309 7.30797 436.211 7.50397 436.211 7.69997 cv
436.211 7.96597 436.281 8.18997 436.435 8.35797 cv
436.575 8.55397 436.855 8.74997 437.303 8.95997 cv
438.297 9.43597 li
439.221 9.89797 439.683 10.5 439.683 11.228 cv
439.683 11.802 439.459 12.264 439.039 12.6 cv
438.605 12.936 438.129 13.118 437.597 13.118 cv
437.205 13.118 436.771 13.048 436.281 12.922 cv
436.127 12.88 436.001 12.852 435.903 12.852 cv
435.791 12.852 435.721 12.908 435.665 13.02 cv
435.441 13.02 li
435.441 10.794 li
435.665 10.794 li
435.791 11.438 436.029 11.928 436.393 12.25 cv
436.757 12.572 437.163 12.726 437.611 12.726 cv
437.919 12.726 438.171 12.642 438.367 12.446 cv
438.563 12.264 438.675 12.04 438.675 11.774 cv
438.675 11.466 438.563 11.214 438.339 10.99 cv
438.115 10.78 437.667 10.514 437.009 10.178 cv
436.351 9.85597 435.917 9.56197 435.721 9.28197 cv
435.511 9.02997 435.413 8.69397 435.413 8.30197 cv
435.413 7.79797 435.581 7.36397 435.945 7.01397 cv
436.295 6.67797 436.757 6.49597 437.317 6.49597 cv
437.555 6.49597 437.849 6.55197 438.213 6.64997 cv
438.437 6.71997 438.591 6.74797 438.675 6.74797 cv
438.843 6.70597 li
438.871 6.67797 438.927 6.60797 438.983 6.49597 cv
439.207 6.49597 li
cp
f
442.427 4.61997 mo
442.427 6.67797 li
443.897 6.67797 li
443.897 7.15397 li
442.427 7.15397 li
442.427 11.214 li
442.427 11.62 442.483 11.9 442.595 12.04 cv
442.707 12.18 442.861 12.25 443.057 12.25 cv
443.197 12.25 443.351 12.208 443.491 12.11 cv
443.631 12.026 443.729 11.886 443.813 11.69 cv
444.079 11.69 li
443.911 12.138 443.687 12.474 443.407 12.698 cv
443.113 12.922 442.819 13.02 442.511 13.02 cv
442.287 13.02 442.077 12.964 441.881 12.852 cv
441.685 12.74 441.531 12.586 441.447 12.362 cv
441.349 12.152 441.307 11.816 441.307 11.368 cv
441.307 7.15397 li
440.313 7.15397 li
440.313 6.92997 li
440.565 6.83197 440.817 6.66397 441.083 6.42597 cv
441.335 6.18797 441.573 5.90797 441.783 5.57197 cv
441.881 5.40397 442.021 5.08197 442.217 4.61997 cv
442.427 4.61997 li
cp
f
446.095 3.21997 mo
446.291 3.21997 446.445 3.28997 446.585 3.41597 cv
446.711 3.55597 446.781 3.70997 446.781 3.90597 cv
446.781 4.10197 446.711 4.25597 446.585 4.39597 cv
446.445 4.53597 446.291 4.60597 446.095 4.60597 cv
445.899 4.60597 445.745 4.53597 445.605 4.39597 cv
445.465 4.25597 445.395 4.10197 445.395 3.90597 cv
445.395 3.70997 445.451 3.55597 445.591 3.41597 cv
445.731 3.28997 445.899 3.21997 446.095 3.21997 cv
cp
446.669 6.49597 mo
446.669 11.522 li
446.669 11.914 446.697 12.18 446.753 12.306 cv
446.809 12.446 446.893 12.544 447.005 12.6 cv
447.117 12.656 447.313 12.684 447.607 12.684 cv
447.607 12.936 li
444.569 12.936 li
444.569 12.684 li
444.877 12.684 445.073 12.656 445.185 12.6 cv
445.283 12.544 445.367 12.446 445.423 12.306 cv
445.479 12.166 445.521 11.914 445.521 11.522 cv
445.521 9.11397 li
445.521 8.44197 445.493 7.99397 445.465 7.78397 cv
445.437 7.64397 445.381 7.54597 445.311 7.48997 cv
445.241 7.43397 445.143 7.39197 445.031 7.39197 cv
444.905 7.39197 444.751 7.43397 444.569 7.50397 cv
444.471 7.25197 li
446.361 6.49597 li
446.669 6.49597 li
cp
f
450.225 7.81197 mo
450.953 6.94397 451.653 6.49597 452.325 6.49597 cv
452.661 6.49597 452.941 6.57997 453.193 6.74797 cv
453.445 6.91597 453.641 7.19597 453.795 7.58797 cv
453.879 7.86797 453.935 8.28797 453.935 8.84797 cv
453.935 11.522 li
453.935 11.914 453.963 12.194 454.033 12.334 cv
454.075 12.446 454.159 12.544 454.271 12.6 cv
454.383 12.656 454.593 12.684 454.901 12.684 cv
454.901 12.936 li
451.793 12.936 li
451.793 12.684 li
451.933 12.684 li
452.213 12.684 452.423 12.642 452.535 12.558 cv
452.647 12.474 452.731 12.334 452.787 12.166 cv
452.801 12.096 452.815 11.886 452.815 11.522 cv
452.815 8.95997 li
452.815 8.39997 452.731 7.97997 452.591 7.72797 cv
452.437 7.47597 452.185 7.33597 451.835 7.33597 cv
451.289 7.33597 450.757 7.62997 450.225 8.21797 cv
450.225 11.522 li
450.225 11.942 450.239 12.208 450.295 12.306 cv
450.351 12.446 450.449 12.544 450.561 12.6 cv
450.673 12.656 450.897 12.684 451.233 12.684 cv
451.233 12.936 li
448.139 12.936 li
448.139 12.684 li
448.279 12.684 li
448.587 12.684 448.811 12.614 448.923 12.446 cv
449.035 12.292 449.091 11.984 449.091 11.522 cv
449.091 9.19797 li
449.091 8.44197 449.063 7.99397 449.035 7.82597 cv
449.007 7.65797 448.951 7.54597 448.881 7.48997 cv
448.811 7.43397 448.713 7.39197 448.601 7.39197 cv
448.461 7.39197 448.307 7.43397 448.139 7.50397 cv
448.041 7.25197 li
449.931 6.49597 li
450.225 6.49597 li
450.225 7.81197 li
cp
f
457.071 10.654 mo
456.679 10.472 456.385 10.206 456.189 9.86997 cv
455.979 9.53397 455.881 9.16997 455.881 8.76397 cv
455.881 8.14797 456.105 7.61597 456.581 7.16797 cv
457.043 6.71997 457.645 6.49597 458.373 6.49597 cv
458.961 6.49597 459.479 6.64997 459.927 6.92997 cv
461.257 6.92997 li
461.453 6.92997 461.565 6.94397 461.593 6.94397 cv
461.663 6.99997 li
461.691 7.05597 461.705 7.12597 461.705 7.22397 cv
461.705 7.33597 461.691 7.41997 461.663 7.46197 cv
461.593 7.53197 li
461.565 7.54597 461.453 7.54597 461.257 7.54597 cv
460.445 7.54597 li
460.697 7.88197 460.823 8.30197 460.823 8.80597 cv
460.823 9.39397 460.599 9.88397 460.151 10.304 cv
459.703 10.724 459.101 10.92 458.359 10.92 cv
458.037 10.92 457.715 10.878 457.407 10.78 cv
457.197 10.962 457.057 11.116 456.987 11.242 cv
456.917 11.382 456.889 11.48 456.889 11.564 cv
457.001 11.802 li
457.071 11.872 457.225 11.928 457.449 11.956 cv
457.561 11.984 457.883 11.998 458.401 11.998 cv
459.339 12.026 459.941 12.068 460.221 12.096 cv
460.641 12.152 460.991 12.306 461.243 12.558 cv
461.495 12.81 461.621 13.118 461.621 13.496 cv
461.621 14 461.369 14.49 460.893 14.952 cv
460.179 15.61 459.255 15.946 458.121 15.946 cv
457.225 15.946 456.483 15.736 455.881 15.344 cv
455.545 15.12 455.377 14.882 455.377 14.644 cv
455.377 14.532 455.391 14.42 455.447 14.308 cv
455.517 14.14 455.671 13.902 455.923 13.608 cv
455.951 13.552 456.189 13.314 456.623 12.88 cv
456.385 12.74 456.217 12.614 456.119 12.502 cv
456.021 12.39 455.979 12.264 455.979 12.124 cv
455.979 11.97 456.035 11.788 456.175 11.564 cv
456.301 11.354 456.595 11.046 457.071 10.654 cv
cp
458.261 6.81797 mo
457.925 6.81797 457.631 6.95797 457.407 7.22397 cv
457.183 7.50397 457.071 7.90997 457.071 8.45597 cv
457.071 9.18397 457.225 9.74397 457.533 10.136 cv
457.757 10.444 458.065 10.584 458.443 10.584 cv
458.779 10.584 459.059 10.458 459.283 10.192 cv
459.507 9.93997 459.619 9.53397 459.619 8.97397 cv
459.619 8.24597 459.465 7.68597 459.157 7.26597 cv
458.919 6.97197 458.625 6.81797 458.261 6.81797 cv
cp
457.001 12.936 mo
456.777 13.16 456.623 13.37 456.511 13.566 cv
456.399 13.762 456.357 13.958 456.357 14.126 cv
456.357 14.336 456.483 14.532 456.749 14.7 cv
457.197 14.98 457.855 15.12 458.723 15.12 cv
459.535 15.12 460.137 14.966 460.529 14.686 cv
460.921 14.392 461.117 14.084 461.117 13.762 cv
461.117 13.524 461.005 13.356 460.781 13.258 cv
460.529 13.146 460.067 13.09 459.367 13.076 cv
458.331 13.048 457.547 12.992 457.001 12.936 cv
cp
f
470.315 12.236 mo
470.007 12.558 469.699 12.782 469.419 12.922 cv
469.125 13.048 468.817 13.118 468.481 13.118 cv
467.795 13.118 467.193 12.838 466.689 12.264 cv
466.171 11.704 465.919 10.962 465.919 10.066 cv
465.919 9.16997 466.199 8.35797 466.759 7.60197 cv
467.319 6.85997 468.061 6.48197 468.957 6.48197 cv
469.503 6.48197 469.951 6.66397 470.315 7.01397 cv
470.315 5.85197 li
470.315 5.13797 470.287 4.70397 470.259 4.53597 cv
470.231 4.36797 470.175 4.25597 470.105 4.19997 cv
470.021 4.14397 469.937 4.11597 469.839 4.11597 cv
469.713 4.11597 469.559 4.15797 469.363 4.21397 cv
469.265 3.97597 li
471.141 3.21997 li
471.449 3.21997 li
471.449 10.458 li
471.449 11.186 471.463 11.634 471.491 11.802 cv
471.519 11.97 471.575 12.082 471.659 12.138 cv
471.729 12.208 471.813 12.236 471.925 12.236 cv
472.037 12.236 472.205 12.194 472.415 12.11 cv
472.485 12.348 li
470.637 13.118 li
470.315 13.118 li
470.315 12.236 li
cp
470.315 11.76 mo
470.315 8.52597 li
470.287 8.21797 470.203 7.93797 470.063 7.68597 cv
469.923 7.43397 469.755 7.23797 469.531 7.09797 cv
469.307 6.97197 469.083 6.90197 468.873 6.90197 cv
468.467 6.90197 468.103 7.08397 467.795 7.44797 cv
467.375 7.92397 467.179 8.62397 467.179 9.51997 cv
467.179 10.444 467.375 11.158 467.767 11.648 cv
468.159 12.138 468.607 12.376 469.111 12.376 cv
469.531 12.376 469.923 12.18 470.315 11.76 cv
cp
f
476.447 12.04 mo
475.803 12.544 475.397 12.824 475.229 12.894 cv
474.977 12.992 474.725 13.048 474.445 13.048 cv
474.011 13.048 473.661 12.908 473.381 12.614 cv
473.101 12.334 472.961 11.942 472.961 11.452 cv
472.961 11.144 473.017 10.878 473.157 10.654 cv
473.339 10.346 473.661 10.066 474.123 9.78597 cv
474.585 9.51997 475.355 9.18397 476.447 8.79197 cv
476.447 8.53997 li
476.447 7.92397 476.335 7.48997 476.139 7.25197 cv
475.943 7.02797 475.649 6.90197 475.285 6.90197 cv
474.991 6.90197 474.767 6.98597 474.599 7.13997 cv
474.417 7.30797 474.333 7.47597 474.333 7.67197 cv
474.347 8.06397 li
474.347 8.28797 474.291 8.44197 474.179 8.55397 cv
474.067 8.66597 473.941 8.72197 473.773 8.72197 cv
473.605 8.72197 473.465 8.66597 473.353 8.55397 cv
473.241 8.44197 473.199 8.27397 473.199 8.06397 cv
473.199 7.67197 473.395 7.32197 473.801 6.98597 cv
474.193 6.66397 474.753 6.49597 475.481 6.49597 cv
476.041 6.49597 476.489 6.59397 476.853 6.77597 cv
477.119 6.91597 477.315 7.13997 477.441 7.43397 cv
477.525 7.62997 477.567 8.03597 477.567 8.63797 cv
477.567 10.766 li
477.567 11.368 477.567 11.732 477.595 11.858 cv
477.623 11.998 477.651 12.082 477.707 12.124 cv
477.889 12.194 li
478.085 12.152 li
478.183 12.096 478.365 11.928 478.645 11.648 cv
478.645 12.04 li
478.127 12.712 477.637 13.048 477.175 13.048 cv
476.951 13.048 476.769 12.964 476.643 12.824 cv
476.503 12.684 476.447 12.418 476.447 12.04 cv
cp
476.447 11.592 mo
476.447 9.19797 li
475.747 9.47797 475.299 9.67397 475.103 9.78597 cv
474.739 9.98197 474.487 10.192 474.333 10.416 cv
474.179 10.64 474.109 10.878 474.109 11.13 cv
474.109 11.466 474.207 11.732 474.403 11.956 cv
474.599 12.18 474.823 12.278 475.075 12.278 cv
475.411 12.278 475.873 12.054 476.447 11.592 cv
cp
f
480.927 4.61997 mo
480.927 6.67797 li
482.397 6.67797 li
482.397 7.15397 li
480.927 7.15397 li
480.927 11.214 li
480.927 11.62 480.983 11.9 481.095 12.04 cv
481.207 12.18 481.361 12.25 481.557 12.25 cv
481.697 12.25 481.851 12.208 481.991 12.11 cv
482.131 12.026 482.229 11.886 482.313 11.69 cv
482.579 11.69 li
482.411 12.138 482.187 12.474 481.907 12.698 cv
481.613 12.922 481.319 13.02 481.011 13.02 cv
480.787 13.02 480.577 12.964 480.381 12.852 cv
480.185 12.74 480.031 12.586 479.947 12.362 cv
479.849 12.152 479.807 11.816 479.807 11.368 cv
479.807 7.15397 li
478.813 7.15397 li
478.813 6.92997 li
479.065 6.83197 479.317 6.66397 479.583 6.42597 cv
479.835 6.18797 480.073 5.90797 480.283 5.57197 cv
480.381 5.40397 480.521 5.08197 480.717 4.61997 cv
480.927 4.61997 li
cp
f
486.555 12.04 mo
485.911 12.544 485.505 12.824 485.337 12.894 cv
485.085 12.992 484.833 13.048 484.553 13.048 cv
484.119 13.048 483.769 12.908 483.489 12.614 cv
483.209 12.334 483.069 11.942 483.069 11.452 cv
483.069 11.144 483.125 10.878 483.265 10.654 cv
483.447 10.346 483.769 10.066 484.231 9.78597 cv
484.693 9.51997 485.463 9.18397 486.555 8.79197 cv
486.555 8.53997 li
486.555 7.92397 486.443 7.48997 486.247 7.25197 cv
486.051 7.02797 485.757 6.90197 485.393 6.90197 cv
485.099 6.90197 484.875 6.98597 484.707 7.13997 cv
484.525 7.30797 484.441 7.47597 484.441 7.67197 cv
484.455 8.06397 li
484.455 8.28797 484.399 8.44197 484.287 8.55397 cv
484.175 8.66597 484.049 8.72197 483.881 8.72197 cv
483.713 8.72197 483.573 8.66597 483.461 8.55397 cv
483.349 8.44197 483.307 8.27397 483.307 8.06397 cv
483.307 7.67197 483.503 7.32197 483.909 6.98597 cv
484.301 6.66397 484.861 6.49597 485.589 6.49597 cv
486.149 6.49597 486.597 6.59397 486.961 6.77597 cv
487.227 6.91597 487.423 7.13997 487.549 7.43397 cv
487.633 7.62997 487.675 8.03597 487.675 8.63797 cv
487.675 10.766 li
487.675 11.368 487.675 11.732 487.703 11.858 cv
487.731 11.998 487.759 12.082 487.815 12.124 cv
487.997 12.194 li
488.193 12.152 li
488.291 12.096 488.473 11.928 488.753 11.648 cv
488.753 12.04 li
488.235 12.712 487.745 13.048 487.283 13.048 cv
487.059 13.048 486.877 12.964 486.751 12.824 cv
486.611 12.684 486.555 12.418 486.555 12.04 cv
cp
486.555 11.592 mo
486.555 9.19797 li
485.855 9.47797 485.407 9.67397 485.211 9.78597 cv
484.847 9.98197 484.595 10.192 484.441 10.416 cv
484.287 10.64 484.217 10.878 484.217 11.13 cv
484.217 11.466 484.315 11.732 484.511 11.956 cv
484.707 12.18 484.931 12.278 485.183 12.278 cv
485.519 12.278 485.981 12.054 486.555 11.592 cv
cp
f
493.261 6.49597 mo
493.261 8.62397 li
493.037 8.62397 li
492.869 7.95197 492.645 7.50397 492.379 7.25197 cv
492.099 7.01397 491.763 6.88797 491.343 6.88797 cv
491.007 6.88797 490.755 6.97197 490.559 7.13997 cv
490.363 7.30797 490.265 7.50397 490.265 7.69997 cv
490.265 7.96597 490.335 8.18997 490.489 8.35797 cv
490.629 8.55397 490.909 8.74997 491.357 8.95997 cv
492.351 9.43597 li
493.275 9.89797 493.737 10.5 493.737 11.228 cv
493.737 11.802 493.513 12.264 493.093 12.6 cv
492.659 12.936 492.183 13.118 491.651 13.118 cv
491.259 13.118 490.825 13.048 490.335 12.922 cv
490.181 12.88 490.055 12.852 489.957 12.852 cv
489.845 12.852 489.775 12.908 489.719 13.02 cv
489.495 13.02 li
489.495 10.794 li
489.719 10.794 li
489.845 11.438 490.083 11.928 490.447 12.25 cv
490.811 12.572 491.217 12.726 491.665 12.726 cv
491.973 12.726 492.225 12.642 492.421 12.446 cv
492.617 12.264 492.729 12.04 492.729 11.774 cv
492.729 11.466 492.617 11.214 492.393 10.99 cv
492.169 10.78 491.721 10.514 491.063 10.178 cv
490.405 9.85597 489.971 9.56197 489.775 9.28197 cv
489.565 9.02997 489.467 8.69397 489.467 8.30197 cv
489.467 7.79797 489.635 7.36397 489.999 7.01397 cv
490.349 6.67797 490.811 6.49597 491.371 6.49597 cv
491.609 6.49597 491.903 6.55197 492.267 6.64997 cv
492.491 6.71997 492.645 6.74797 492.729 6.74797 cv
492.897 6.70597 li
492.925 6.67797 492.981 6.60797 493.037 6.49597 cv
493.261 6.49597 li
cp
f
495.711 9.02997 mo
495.711 9.96797 495.935 10.696 496.397 11.228 cv
496.845 11.76 497.391 12.012 498.007 12.012 cv
498.399 12.012 498.749 11.9 499.057 11.676 cv
499.365 11.452 499.617 11.074 499.827 10.514 cv
500.051 10.654 li
499.939 11.284 499.659 11.858 499.211 12.362 cv
498.749 12.866 498.175 13.118 497.475 13.118 cv
496.719 13.118 496.075 12.838 495.543 12.25 cv
495.011 11.662 494.745 10.878 494.745 9.88397 cv
494.745 8.81997 495.011 7.97997 495.571 7.37797 cv
496.117 6.78997 496.803 6.48197 497.643 6.48197 cv
498.343 6.48197 498.917 6.71997 499.365 7.18197 cv
499.813 7.64397 500.051 8.25997 500.051 9.02997 cv
495.711 9.02997 li
cp
495.711 8.63797 mo
498.609 8.63797 li
498.581 8.24597 498.539 7.95197 498.469 7.78397 cv
498.357 7.53197 498.189 7.33597 497.965 7.19597 cv
497.741 7.05597 497.503 6.97197 497.251 6.97197 cv
496.873 6.97197 496.537 7.12597 496.243 7.41997 cv
495.935 7.71397 495.767 8.11997 495.711 8.63797 cv
cp
f
502.697 4.61997 mo
502.697 6.67797 li
504.167 6.67797 li
504.167 7.15397 li
502.697 7.15397 li
502.697 11.214 li
502.697 11.62 502.753 11.9 502.865 12.04 cv
502.977 12.18 503.131 12.25 503.327 12.25 cv
503.467 12.25 503.621 12.208 503.761 12.11 cv
503.901 12.026 503.999 11.886 504.083 11.69 cv
504.349 11.69 li
504.181 12.138 503.957 12.474 503.677 12.698 cv
503.383 12.922 503.089 13.02 502.781 13.02 cv
502.557 13.02 502.347 12.964 502.151 12.852 cv
501.955 12.74 501.801 12.586 501.717 12.362 cv
501.619 12.152 501.577 11.816 501.577 11.368 cv
501.577 7.15397 li
500.583 7.15397 li
500.583 6.92997 li
500.835 6.83197 501.087 6.66397 501.353 6.42597 cv
501.605 6.18797 501.843 5.90797 502.053 5.57197 cv
502.151 5.40397 502.291 5.08197 502.487 4.61997 cv
502.697 4.61997 li
cp
f
573.471 320.093 mo
573.667 320.093 573.821 320.163 573.961 320.289 cv
574.087 320.429 574.157 320.583 574.157 320.779 cv
574.157 320.975 574.087 321.129 573.961 321.269 cv
573.821 321.409 573.667 321.479 573.471 321.479 cv
573.275 321.479 573.121 321.409 572.981 321.269 cv
572.841 321.129 572.771 320.975 572.771 320.779 cv
572.771 320.583 572.827 320.429 572.967 320.289 cv
573.107 320.163 573.275 320.093 573.471 320.093 cv
cp
574.045 323.369 mo
574.045 328.395 li
574.045 328.787 574.073 329.053 574.129 329.179 cv
574.185 329.319 574.269 329.417 574.381 329.473 cv
574.493 329.529 574.689 329.557 574.983 329.557 cv
574.983 329.809 li
571.945 329.809 li
571.945 329.557 li
572.253 329.557 572.449 329.529 572.561 329.473 cv
572.659 329.417 572.743 329.319 572.799 329.179 cv
572.855 329.039 572.897 328.787 572.897 328.395 cv
572.897 325.987 li
572.897 325.315 572.869 324.867 572.841 324.657 cv
572.813 324.517 572.757 324.419 572.687 324.363 cv
572.617 324.307 572.519 324.265 572.407 324.265 cv
572.281 324.265 572.127 324.307 571.945 324.377 cv
571.847 324.125 li
573.737 323.369 li
574.045 323.369 li
cp
f
575.165 320.541 mo
577.671 320.541 li
583.327 327.485 li
583.327 322.151 li
583.327 321.591 583.257 321.227 583.145 321.073 cv
582.977 320.891 582.697 320.793 582.333 320.793 cv
582.025 320.793 li
582.025 320.541 li
585.245 320.541 li
585.245 320.793 li
584.923 320.793 li
584.531 320.793 584.251 320.919 584.083 321.143 cv
583.971 321.297 583.929 321.633 583.929 322.151 cv
583.929 329.949 li
583.691 329.949 li
577.573 322.501 li
577.573 328.199 li
577.573 328.773 577.629 329.123 577.755 329.263 cv
577.923 329.459 578.189 329.557 578.553 329.557 cv
578.889 329.557 li
578.889 329.809 li
575.655 329.809 li
575.655 329.557 li
575.977 329.557 li
576.369 329.557 576.649 329.445 576.817 329.207 cv
576.915 329.067 576.971 328.731 576.971 328.199 cv
576.971 321.759 li
576.691 321.451 576.495 321.241 576.355 321.143 cv
576.215 321.045 576.019 320.947 575.753 320.849 cv
575.613 320.821 575.417 320.793 575.165 320.793 cv
575.165 320.541 li
cp
f
585.273 320.541 mo
587.779 320.541 li
593.435 327.485 li
593.435 322.151 li
593.435 321.591 593.365 321.227 593.253 321.073 cv
593.085 320.891 592.805 320.793 592.441 320.793 cv
592.133 320.793 li
592.133 320.541 li
595.353 320.541 li
595.353 320.793 li
595.031 320.793 li
594.639 320.793 594.359 320.919 594.191 321.143 cv
594.079 321.297 594.037 321.633 594.037 322.151 cv
594.037 329.949 li
593.799 329.949 li
587.681 322.501 li
587.681 328.199 li
587.681 328.773 587.737 329.123 587.863 329.263 cv
588.031 329.459 588.297 329.557 588.661 329.557 cv
588.997 329.557 li
588.997 329.809 li
585.763 329.809 li
585.763 329.557 li
586.085 329.557 li
586.477 329.557 586.757 329.445 586.925 329.207 cv
587.023 329.067 587.079 328.731 587.079 328.199 cv
587.079 321.759 li
586.799 321.451 586.603 321.241 586.463 321.143 cv
586.323 321.045 586.127 320.947 585.861 320.849 cv
585.721 320.821 585.525 320.793 585.273 320.793 cv
585.273 320.541 li
cp
f
598.475 321.045 mo
598.475 324.713 li
600.505 324.713 li
601.037 324.713 601.387 324.643 601.569 324.475 cv
601.807 324.265 601.933 323.901 601.961 323.369 cv
602.227 323.369 li
602.227 326.589 li
601.961 326.589 li
601.905 326.141 601.835 325.861 601.779 325.721 cv
601.695 325.567 601.555 325.441 601.373 325.343 cv
601.177 325.259 600.897 325.203 600.505 325.203 cv
598.475 325.203 li
598.475 328.269 li
598.475 328.689 598.489 328.941 598.531 329.025 cv
598.713 329.235 li
598.797 329.291 598.979 329.305 599.245 329.305 cv
600.813 329.305 li
601.331 329.305 601.709 329.277 601.947 329.193 cv
602.185 329.123 602.409 328.983 602.633 328.759 cv
602.913 328.479 603.207 328.059 603.501 327.485 cv
603.781 327.485 li
602.983 329.809 li
595.843 329.809 li
595.843 329.557 li
596.165 329.557 li
596.375 329.557 596.585 329.515 596.781 329.403 cv
596.921 329.333 597.019 329.221 597.075 329.081 cv
597.131 328.941 597.159 328.633 597.159 328.171 cv
597.159 322.151 li
597.159 321.563 597.103 321.199 596.991 321.059 cv
596.823 320.891 596.543 320.793 596.165 320.793 cv
595.843 320.793 li
595.843 320.541 li
602.983 320.541 li
603.081 322.571 li
602.815 322.571 li
602.717 322.095 602.605 321.759 602.493 321.577 cv
602.381 321.395 602.199 321.255 601.975 321.143 cv
601.793 321.087 601.471 321.045 601.023 321.045 cv
598.475 321.045 li
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
